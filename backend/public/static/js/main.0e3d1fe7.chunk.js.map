{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","services/http.service.js","services/async-storage.service.js","services/board.service.js","services/socket.service.js","services/user.service.js","services/util.service.js","services/event-bus.service.js","services/storage.service.js","store/board.actions.js","store/user.actions.js","cmp/DynamicPopover/ActionListPopOver.jsx","cmp/DynamicPopover/MembersPopover.jsx","cmp/DynamicPopover/LabelsPopover.jsx","cmp/DynamicPopover/DatesPopover.jsx","cmp/DynamicPopover/ChecklistPopover.jsx","services/unsplash.service.js","cmp/DynamicPopover/SearchForCover.jsx","services/cloudinary.service.js","cmp/DynamicPopover/CoverPopover.jsx","assets/imgs/icons/menu-arrow-icon.svg","cmp/CardDetails/LabelPreview.jsx","cmp/CardDetails/DueDatePreview.jsx","cmp/DynamicCmps/DynamicButton.jsx","cmp/UserInfo.jsx","cmp/DynamicPopover/UserMenuPopover.jsx","cmp/ActivityPreview.jsx","cmp/ShowMenu.jsx","assets/imgs/close.svg","cmp/DroweMenu.jsx","cmp/DynamicPopover/AttachmentsPopover.jsx","cmp/DynamicPopover/DeleteCardPopover.jsx","cmp/DynamicPopover/MoveCopyCardPopover.jsx","cmp/DynamicPopover/UserBoardsPopover.jsx","cmp/DynamicPopover/NotifPopover.jsx","cmp/DynamicPopover/EditLabel.jsx","cmp/DynamicPopover/InvitePopover.jsx","cmp/DynamicPopover.jsx","cmp/DynamicPopover/SingleMemberPopover.jsx","cmp/CardDetails/MembersList.jsx","cmp/CardCheckPreview.jsx","cmp/CardLabelsPreview.jsx","cmp/CardDuDatePreview.jsx","cmp/QuickCardActions.jsx","assets/imgs/close-edit-card.svg","cmp/CardCommAttachPreview.jsx","cmp/QuickCardEditor.jsx","cmp/CardPreview.jsx","cmp/CardList.jsx","cmp/AddCard.jsx","assets/imgs/plus.svg","cmp/ListPreview.jsx","cmp/BoardList.jsx","cmp/MembersListBoard.jsx","cmp/DynamicPopover/BoardMenu/MainBoardMenuContent.jsx","cmp/DynamicPopover/BoardMenu/SelectBgType.jsx","cmp/DynamicPopover/BoardMenu/ChooseBgColor.jsx","assets/imgs/bars-loader.svg","cmp/Loading.jsx","cmp/DynamicPopover/BoardMenu/ChooseBgImg.jsx","assets/imgs/checked.svg","cmp/SearchMenu.jsx","cmp/ArchiveItems.jsx","cmp/DynamicBoardMenu.jsx","assets/imgs/close-filter.svg","cmp/BoardHeader.jsx","assets/imgs/icons/plus-white.svg","cmp/AddList.jsx","cmp/CardDetails/JoinCard.jsx","cmp/CardDetails/ArchiveButtoms.jsx","cmp/CardDetails/CardSideBar.jsx","cmp/CardLabelsList.jsx","cmp/CardDetails/CommentPreview.jsx","cmp/CardDetails/CommentsList.jsx","cmp/CardDetails/ActivityList.jsx","cmp/CardDetails/CardActivities.jsx","cmp/CardDetails/CardTitle.jsx","cmp/CardDetails/CardDescription.jsx","cmp/CardDetails/ProgressBar.jsx","cmp/CardDetails/TaskInput.jsx","cmp/CardDetails/ChecklistTask.jsx","cmp/CardDetails/AddNewTask.jsx","cmp/CardDetails/ChecklistApp.jsx","cmp/CardDetails/ChecklistListApp.jsx","cmp/CardDetails/CardDetailsHeader.jsx","cmp/CardDetails/AttachmentPreview.jsx","cmp/CardDetails/CardAttachmentsList.jsx","cmp/CardDetails/DisplayCardArchive.jsx","pages/CardDetails.jsx","cmp/DashBoard/ProgressbarDone.jsx","cmp/DashBoard/PieTasksPerLabel.jsx","cmp/DashBoard/BarTaskPerMember.jsx","cmp/DashBoard/BarTaskPerList.jsx","cmp/DashBoard/DashboardTitle.jsx","cmp/DashBoard/LineTasksPerDate.jsx","pages/Dashboard.jsx","pages/BoardApp.jsx","assets/imgs/trackit-logo.svg","assets/imgs/trackit-logo-white.svg","cmp/Header/LogoName.jsx","cmp/Header/HomeHeader.jsx","pages/HomePage.jsx","pages/Login.jsx","pages/Signup.jsx","cmp/UserBoards/BoardPreview.jsx","cmp/UserBoards/SideNav.jsx","pages/TemplateBoards.jsx","assets/imgs/icons/close-icon-white.svg","assets/imgs/icons/checked-icon-white.svg","cmp/CreateBoard.jsx","pages/UserBoards.jsx","routes.js","pages/CardNotFound.jsx","assets/imgs/icons/menu-plus-icon.svg","cmp/Header/AppHeader.jsx","cmp/UserMsg.jsx","root-cmp.jsx","store/board.reducer.js","store/user.reducer.js","store/store.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","dir","response","status","assign","storageService","query","get","entityType","entityId","entities","find","entity","_id","post","newEntity","_makeId","push","save","put","updatedEntity","idx","findIndex","splice","remove","postMany","newEntities","map","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","boardService","userId","boardId","getBoardById","filterBy","board","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","USER_KEY","STORAGE_KEY_LOGGEDIN_USER","GUEST_USER_ID","userService","login","logout","signup","getLoggedinUser","getUsers","getById","update","filterUserBoards","boards","type","filter","createdBy","isBoardStarred","toggleStarBoard","boardMembersIdx","boardMembers","member","isStarred","getGuestUser","user","_saveLocalUser","userCred","Error","initials","_getUserInitials","fullname","sessionStorage","removeItem","guest","memberIdx","split","part","toUpperCase","join","utilService","makeId","txt","makeLorem","size","words","getRandomIntInclusive","min","max","ceil","getFormattedBgStyle","background","bgImgUrl","small","full","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","showUserMsg","showSuccessMsg","showErrorMsg","myBus","loadFromStorage","key","val","saveToStorage","loadBoards","dispatch","loadBoard","loadListAndCard","list","card","err","addBoard","addedBoard","removeBoard","toggleLabels","setFilterBy","updateBoard","action","activity","_storeSaveActivity","activities","unshift","isNotif","onLine","_filterActionsNotif","id","createdAt","Date","now","byMember","cardId","cardTitle","setNotif","count","setUpdateLabel","labelsProps","setSearchBg","searchStr","onLogin","credentials","loginAsGuest","username","password","ActionList","onUpdateBoard","className","onClick","listIdx","lists","listToFind","listId","listTitle","_MembersPopover","currListIdx","currCardIdx","inputTxt","filteredMembers","toggleMember","props","loggedInUser","currCard","cards","isMemberOnCard","cardMembers","cardMember","memberId","some","handleChange","target","setState","value","filterRegex","RegExp","test","this","TextareaAutosize","placeholder","onChange","Avatar","alt","src","imgUrl","React","Component","mapDispatchToProps","MembersPopover","connect","boardReducer","userReducer","_LabelsPopover","currLabel","filteredLabels","toggleLabel","label","newBoard","isLabelOnCard","labelIdx","cardLabelIds","cardLabelId","labelId","editLabel","ev","stopPropagation","changeTitle","isCreat","createLabel","labels","title","isCreate","color","LabelsPopover","_DatesPopover","date","handleDateSelect","stringDate","toString","day","substring","month","year","hourGmt","timestamp","onSaveDate","duedate","dueDate","isDone","handleClose","onSelect","startDate","openToDate","inline","formatWeekDay","nameOfDay","substr","DatesPopover","_ChecklistPopover","onAddChecklist","preventDefault","boardToUpdate","checklists","checklistId","tasks","onSubmit","name","Button","variant","ChecklistPopover","KEY","unsplashService","getImgs","keyword","imgs","results","img","urls","link","links","html","shift","SearchForCover","getImgForCover","searchCover","minLength","debounceTimeout","cloudinaryService","uploadFile","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","fileName","original_filename","secure_url","_CoverPopover","isCoverSelected","coverImgs","isSearch","onToggleCover","cover","isCoverOnCard","cardStyle","isCover","coverId","handelSize","onRemoveCover","imgToShow","onToggleImgCover","coverImg","onAddImage","coverUploadImg","onSaveCover","attachments","halfCover","fullCover","covers","htmlFor","style","backgroundImage","CoverPopover","LabelPreview","boardLabels","DueDatePreview","onToggleDone","Checkbox","checked","_DynamicButton","DynamicCmp","onToggle","DownArrow","notifCount","DynamicButton","UserInfo","_UserMenuPopover","onLogout","history","onRemoveFromBoard","from","_UserMenuPopoverWithRouter","withRouter","UserMenuPopover","ActivityPreview","display","ShowMenu","TemporaryDrawer","toggleMenu","isMenuOpen","toggleDrawer","anchor","open","event","Drawer","hideBackdrop","close","Divider","_AttachmentsPopover","urlLink","onAddAttach","attachment","AttachmentsPopover","DeleteCardPopover","onDeleteCard","_MoveCopyCardPopoverWithRouter","cardIdx","onMoveCard","cardToMove","forEach","boardCard","onCopyCard","duplicatedCard","isCopy","chosenCards","boardTitle","autoFocus","FormControl","InputLabel","Select","MenuItem","_MoveCopyCardPopover","MoveCopyCardPopover","_UserBoardsPopover","toggleStar","getBoardBtns","bgStyle","boardStyle","to","getfilteredBoards","goToBoard","boardsToShow","guestBoards","UserBoardsPopover","_NotifPopover","onNotifClick","notifications","setNotifCount","_NotifPopoverWithRouter","NotifPopover","_EditLabel","labelName","labelColor","isDelete","labelsColor","onSaveLabel","labelChoose","deleteLabel","confirmDeleteLabel","createLabelsArr","clrNum","isLabelChoosen","chosenLabel","onKeyPress","EditLabel","_InvitePopover","users","filteredUsers","isMemberInBoard","addUser","sort","u1","u2","localeCompare","InvitePopover","DynamicPopover","anchorEl","isEditLabel","newTitle","isChangeTitle","handleClick","currentTarget","markReadNotif","handleDateChange","handleBack","titleModal","dnmTitleModal","undefined","Fragment","Popover","onClose","anchorOrigin","vertical","horizontal","_SingleMemberPopover","removeMember","SingleMemberPopover","MembersList","members","isCardOpen","AvatarGroup","CardCheckPreview","reduce","acc","checklist","task","taskCount","taskCountDone","isDoneLabel","_CardLabelsPreview","onToggleLabel","isOpen","isLabelOpen","CardLabelsPreview","CardDuDatePreview","classDone","overDue","QuickCardActions","onArchive","OnUpdateBoard","CardCommAttachPreview","cardCommAttach","commAttach","_QuickCardEditor","isEditTitle","isEditMode","rect","toggleEditTitle","getBoundingClientRect","x","onEditMode","onSaveCardTitle","isArchived","isDragging","draggingClass","coverStyle","editClass","isLabels","fullTitle","left","top","y","height","onFocus","select","description","comments","QuickCardEditor","_CardPreview","handleDnd","draggingOver","onSelectedCard","draggableId","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","_CardPreviewWithRouter","CardPreview","CardList","droppableId","droppableProps","_AddCard","onAddCard","newCard","onCloseAdding","AddCard","ListPreview","isAdding","toggleOnAdd","onSaveListTitle","onBlur","plus","BoardList","direction","MembersListBoard","spacing","MainBoardMenuContent","changeMenu","SelectBgType","ChooseBgColor","changeBgColor","Loading","Loader","_ChooseBgImg","setBgImg","imgIdx","openLink","href","ChooseBgImg","searchBg","_SearchMenu","searchKey","isFilter","onFilterBy","filterType","filterIdx","filteryid","onToggleSearch","searchId","forceNotifyByEnter","SearchMenu","_ArchiveItems","onFilterCards","tilte","onSendToBoard","_ArchiveItemsWithRouter","ArchiveItems","DynamicBoardMenu","_BoardHeader","menuTitle","menuTarget","cardsCount","toggleChangeTitle","saveBoardTitle","onToggleStarBoard","resetSearch","prevState","cloneTemplate","goToTemplateClone","prevProps","inputStyle","fontSize","fontWeight","Provider","openSearchOnMenu","onOpenDashboard","BoardHeader","AddList","onAddList","newList","addMode","_JoinCard","onJoinCard","JoinCard","_ArchiveButtoms","onToggleArchived","ArchiveButtoms","CardSideBar","CardLabelsList","CommentPreview","comment","CommentsList","ActivityList","_CardActivities","isEditing","isDetails","newActivityTxt","onToggleDetails","onToggleComment","onSaveActivity","CardActivities","CardTitle","isEdit","onSaveTitle","onToggleEdit","CardDescription","onToggleEditing","onSaveDescription","ProgressBar","currChecklist","width","getProgress","precent","classNameBar","doneCount","TaskInput","newTaskTxt","onDiscardChanges","onSaveTask","taskIdx","onEditTask","classTask","ChecklistTask","onDeleteTask","AddNewTask","onIsAddItem","onAddTask","_ChecklistApp","isAddItem","onDeleteChecklist","checklistIdx","updateIsDone","every","ChecklistApp","ChecklistListApp","CardDetailsHeader","coverMode","AttachmentPreview","cardAttachment","onDeleteAttach","CardAttachmentsList","cardAttachments","attachmentId","attachIdx","DisplayCardArchive","_CardDetails","getCurrCard","CardDetails","ProgressbarDone","tasksCount","overdueCount","getOverdueCount","getTasksCount","percentageDone","styles","buildStyles","pathColor","trailColor","toFixed","PieTasksPerLabel","mapTasksPerLabel","taskPerLabel","datasets","backgroundColor","borderColor","borderWidth","getPieData","BarTaskPerMember","tasksPerMembers","mapTasksPerMember","taskPerMember","options","indexAxis","maintainAspectRatio","responsive","scales","ticks","stepSize","plugins","legend","BarTaskPerList","tasksPerList","mapTasksPerList","getMapTasksPerList","taskPerList","getBarData","DashboardTitle","LineTasksPerDate","mapTasksOverTime","Object","entries","b","getMapTasksOverTime","tension","showLine","pointRadius","callback","values","beginAtZero","tooltip","callbacks","_Dashboard","goBack","defaults","font","allCards","Dashboard","_BoardApp","onDragEnd","destination","source","dndStart","dndEnd","dndStartIdx","dndEndIdx","listStart","listEnd","onToggleLabels","newBoardId","updateSocket","keys","exact","component","path","BoardApp","LogoName","isLoggedIn","linkUrl","logoUrl","WhiteLogo","ColorLogo","HomeHeader","_HomePage","onStartAsGuest","HomePage","_Login","isLoginFailed","isLoading","clearForm","emptyCredentials","field","clearErrMsg","required","Login","_Signup","isSignupFailed","onSignup","responseGoogle","profileObj","givenName","imageUrl","clientId","buttonText","onFailure","cookiePolicy","Signup","BoardPreview","isYellow","isLarge","SideNav","_TemplateBoards","templateBoards","getTemplateBoards","slice","TemplateBoards","_CreateBoard","backgrounds","selectedBgIdx","createBoard","boardMember","guestMember","getCovers","getLabels","onToggleCreateBoard","selectBg","selectedBg","selectedBgStyle","CloseIcon","autoComplete","CheckedIcon","_CreateBoardWithRouter","CreateBoard","_UserBoards","userBoards","isCreateBoard","getBoardsByType","starredBoards","owndBoards","guestdBoards","routes","_AppHeader","isUserBoardsOpen","isStarredBoardsOpen","onToggleUserBoards","onToggleStarredBoards","notificaion","PlusIcon","AppHeader","UserMsg","msg","removeEvent","msgType","_RootCmp","onOnline","onOffline","setOffline","route","isOffline","RootCmp","initialState","lastUpdatedBoard","currList","rootReducer","combineReducers","undoLastBoard","newState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0e3d1fe7.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  \r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      \r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","\r\nexport const storageService = {\r\n    query,\r\n    get,\r\n    post,\r\n    put,\r\n    remove,\r\n    postMany,\r\n    save\r\n}\r\n\r\nfunction query(entityType, delay = 0) {\r\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(entities)\r\n        }, delay)\r\n    })\r\n}\r\n\r\n\r\nfunction get(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => entities.find(entity => entity._id === entityId))\r\n}\r\n\r\nfunction post(entityType, newEntity) {\r\n    newEntity._id = _makeId()\r\n    return query(entityType)\r\n        .then(entities => {\r\n            entities.push(newEntity)\r\n            save(entityType, entities)\r\n            return newEntity\r\n        })\r\n}\r\n\r\nfunction put(entityType, updatedEntity) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\r\n            entities.splice(idx, 1, updatedEntity)\r\n            save(entityType, entities)\r\n            return updatedEntity\r\n        })\r\n}\r\n\r\nfunction remove(entityType, entityId) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            const idx = entities.findIndex(entity => entity._id === entityId)\r\n            entities.splice(idx, 1)\r\n            save(entityType, entities)\r\n        })\r\n}\r\n\r\nfunction save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\nfunction _makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction postMany(entityType, newEntities) {\r\n    return query(entityType)\r\n        .then(entities => {\r\n            newEntities = newEntities.map(entity => ({ ...entity, _id: _makeId() }))\r\n            entities.push(...newEntities)\r\n            save(entityType, entities)\r\n            return entities\r\n        })\r\n}","import { httpService } from './http.service'\r\nimport { storageService } from './async-storage.service'\r\n\r\nconst BOARD_KEY = 'boardsDB'\r\n\r\nexport const boardService = {\r\n  query,\r\n  remove,\r\n  getBoardById,\r\n  save\r\n}\r\n\r\nfunction query(userId) {\r\n  return httpService.get(`boards`, { userId: userId })\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return storageService.remove(BOARD_KEY, boardId)\r\n}\r\n\r\nfunction getBoardById(boardId, filterBy = {}) {\r\n  return httpService.get(`boards/${boardId}`, { filterBy: filterBy })\r\n}\r\n\r\nfunction save(board) {\r\n  if (board._id) {\r\n    return httpService.put(`boards/${board._id}`, board);\r\n  } else {\r\n    return httpService.post(`boards`, board);\r\n  }\r\n}\r\n\r\n\r\n","import io from 'socket.io-client';\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\nfunction createSocketService() {\r\n    var socket = null;\r\n    const socketService = {\r\n        setup() {\r\n            socket = io(baseUrl)\r\n        },\r\n        on(eventName, cb) {\r\n            socket.on(eventName, cb)\r\n        },\r\n        off(eventName, cb = null) {\r\n            if (!socket) return;\r\n            if (!cb) socket.removeAllListeners(eventName)\r\n            else socket.off(eventName, cb)\r\n        },\r\n        emit(eventName, data) {\r\n            socket.emit(eventName, data)\r\n        },\r\n        terminate() {\r\n            socket = null\r\n        }\r\n    }\r\n    return socketService\r\n}","import { storageService } from './async-storage.service'\r\nimport { httpService } from './http.service'\r\n// import { socketService, SOCKET_EVENT_USER_UPDATED } from './socket.service'\r\n\r\nconst USER_KEY = 'usersDB'\r\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\r\nconst GUEST_USER_ID = '615f4586c375bb154681275d'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedinUser,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    filterUserBoards,\r\n    isBoardStarred,\r\n    toggleStarBoard,\r\n    getGuestUser\r\n}\r\nfunction getUsers() {\r\n    return httpService.get(`user`);\r\n}\r\n\r\nasync function getById(userId) {\r\n    const user = await httpService.get(`user/${userId}`)\r\n    return user;\r\n}\r\nfunction remove(userId) {\r\n    return storageService.remove(USER_KEY, userId)\r\n}\r\n\r\nasync function update(user) {\r\n    await storageService.put(USER_KEY, user)\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n    return user;\r\n}\r\n\r\nasync function login(userCred) {\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (!user) {\r\n        throw new Error('login service error')\r\n    }\r\n    return _saveLocalUser(user)\r\n\r\n}\r\nasync function signup(userCred) {\r\n    userCred.initials = _getUserInitials(userCred.fullname)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\r\n    return await httpService.post('auth/logout')\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\r\n}\r\n\r\nasync function getGuestUser() {\r\n    const guest = await getById(GUEST_USER_ID)\r\n    return guest\r\n}\r\n\r\nfunction filterUserBoards(boards, userId, type) {\r\n    return boards.filter(board => {\r\n        if (!board.createdBy) return false\r\n        if (type === \"all\") return true\r\n        else if (type === \"owner\") return (board.createdBy._id === userId)\r\n        else if (type === \"guest\") return (board.createdBy._id !== userId)\r\n        else if (type === \"starred\") return isBoardStarred(board, userId)\r\n        else return []\r\n    })\r\n}\r\n\r\nfunction isBoardStarred(board, userId) {\r\n    const memberIdx = board.boardMembers.findIndex(member => member._id === userId)\r\n    if (memberIdx > -1) return board.boardMembers[memberIdx].isStarred\r\n}\r\n\r\nfunction toggleStarBoard(board, userId) {\r\n    const boardMembersIdx = board.boardMembers.findIndex(member => member._id === userId)\r\n    board.boardMembers[boardMembersIdx].isStarred = !board.boardMembers[boardMembersIdx].isStarred\r\n    return board\r\n}\r\n\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction _getUserInitials(fullname) {\r\n    const nameParts = fullname.split(' ')\r\n    return nameParts.map(part => part.charAt(0).toUpperCase()).join('')\r\n}\r\n\r\n\r\n","export const utilService = {\r\n    makeId,\r\n    makeLorem,\r\n    getRandomIntInclusive,\r\n    getFormattedBgStyle\r\n}\r\n\r\nfunction makeId(length = 8) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return txt;\r\n}\r\n\r\nfunction getFormattedBgStyle(background, size = 'small') {\r\n    if (typeof (background) === 'object') {\r\n        const bgImgUrl = (size === 'small') ? background.small : background.full\r\n        return { background: `url(${bgImgUrl}) center / cover no-repeat` }\r\n    } else return { background }\r\n}\r\n\r\nfunction makeLorem(size = 100) {\r\n    var words = ['The sky', 'above', 'the port', 'was', 'the color of television', 'tuned', 'to', 'a dead channel', '.', 'All', 'this happened', 'more or less', '.', 'I', 'had', 'the story', 'bit by bit', 'from various people', 'and', 'as generally', 'happens', 'in such cases', 'each time', 'it', 'was', 'a different story', '.', 'It', 'was', 'a pleasure', 'to', 'burn'];\r\n    var txt = '';\r\n    while (size > 0) {\r\n        size--;\r\n        txt += words[Math.floor(Math.random() * words.length)] + ' ';\r\n    }\r\n    return txt;\r\n}\r\n\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min; //The maximum is inclusive and the minimum is inclusive \r\n}\r\n","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\nexport function showUserMsg(txt, type = '') {\r\n    eventBusService.emit('show-user-msg', { txt, type })\r\n}\r\nexport function showSuccessMsg(txt) {\r\n    showUserMsg(txt, 'success')\r\n}\r\nexport function showErrorMsg(txt) {\r\n    showUserMsg(txt, 'danger')\r\n}\r\n\r\nwindow.myBus = eventBusService;\r\nwindow.showUserMsg = showUserMsg;\r\n\r\n","function loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return (val) ? JSON.parse(val) : null;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage[key] = JSON.stringify(val);\r\n}\r\n\r\n\r\nexport const storageService = {\r\n    loadFromStorage,\r\n    saveToStorage\r\n}","import { boardService } from '../services/board.service'\r\nimport { socketService } from '../services/socket.service'\r\nimport { userService } from '../services/user.service'\r\nimport { utilService } from '../services/util.service.js'\r\nimport { showErrorMsg } from '../services/event-bus.service';\r\nimport { storageService } from '../services/storage.service';\r\n\r\nexport function loadBoards(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(userId)\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot load boards')\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = !boardId ? null : await boardService.getBoardById(boardId)\r\n      dispatch({ type: 'SET_BOARD', board: { ...board } })\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot load board')\r\n      console.log('BoardActions: err in loadBoards', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadListAndCard(list, card) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_LIST', list })\r\n      dispatch({ type: 'SET_CARD', card })\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadList', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function addBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedBoard = await boardService.save(board)\r\n      dispatch({ type: 'ADD_BOARD', board: addedBoard })\r\n      return addedBoard\r\n\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot add board')\r\n      console.log('BoardActions: err in addBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      await boardService.remove(boardId)\r\n      dispatch({ type: 'REMOVE_BOARD', boardId })\r\n    } catch (err) {\r\n      showErrorMsg('Sorry cannot remove board')\r\n      console.log('BoardActions: err in removeBoard', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function toggleLabels() {\r\n  return dispatch => {\r\n    dispatch({ type: 'TOGGLE_LABELS' })\r\n  }\r\n}\r\n\r\nexport function setFilterBy(filterBy, boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_FILTER', filterBy: filterBy });\r\n      const board = !boardId ? null : await boardService.getBoardById(boardId, filterBy)\r\n      dispatch({ type: 'UPDATE_BOARD', board: { ...board } });\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function updateBoard(board, action = null, card = '', txt = '') {\r\n  if (!board.createdBy) {\r\n    return dispatch => {\r\n      dispatch({ type: 'UNDO_UPDATE_BOARD' });\r\n      showErrorMsg('Templates cannot be changed')\r\n    }\r\n  }\r\n\r\n  return async dispatch => {\r\n    try {\r\n      if (action) {\r\n        var activity = _storeSaveActivity(action, card, txt);\r\n        board.activities.unshift(activity);\r\n      } else board.activities[0].isNotif = 'alreday-sent-notif';\r\n      dispatch({ type: 'UPDATE_BOARD', board: { ...board } });\r\n      console.log('here after store');\r\n\r\n      await boardService.save(board);\r\n      dispatch({ type: 'UPDATE_LAST_UPDATED_BOARD' });\r\n      socketService.emit('update-board', board);\r\n      console.log('after board to backend');\r\n    } catch (err) {\r\n      if (navigator.onLine) {\r\n        console.log('im online board action');\r\n        dispatch({ type: 'UNDO_UPDATE_BOARD' });\r\n        showErrorMsg('Sorry cannot update board')\r\n      } else {\r\n        console.log('im in offline board action');\r\n        storageService.saveToStorage('BOARD_DB', board);\r\n      }\r\n      console.log('BoardActions: err in updateBoard', err);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _storeSaveActivity(action, card, txt) {\r\n  const activity = {\r\n    id: utilService.makeId(),\r\n    txt,\r\n    createdAt: Date.now(),\r\n    byMember: userService.getLoggedinUser(),\r\n    action,\r\n    card: card ? { cardId: card.cardId, cardTitle: card.cardTitle } : '',\r\n    isNotif: false,\r\n  }\r\n  return _filterActionsNotif(activity)\r\n}\r\n\r\nfunction _filterActionsNotif(activity) {\r\n  switch (activity.action) {\r\n    // MEMBERs\r\n    case 'Added':\r\n    case 'Removed':\r\n    // DUE DATE\r\n    case 'Set due date':\r\n    case 'Removed due date':\r\n    case 'Changed due date':\r\n    // CHECKLIST\r\n    case 'Completed checklist':\r\n    // COMMENT\r\n    case 'Added comment':\r\n      activity.isNotif = 'new-notif';\r\n      break\r\n    default:\r\n      activity.isNotif = false\r\n      break\r\n  }\r\n  return activity\r\n}\r\n\r\n\r\nexport function setNotif(isNotif) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_NOTIF', isNotif: isNotif });\r\n      isNotif ?\r\n        dispatch({ type: 'SET_NOTIF_COUNT++' })\r\n        : dispatch({ type: 'SET_NOTIF_COUNT', count: 0 });\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function setUpdateLabel(labelsProps) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_LABEL', labelsProps });\r\n    } catch (err) {\r\n      console.log('Cannot set labels props', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function setOffline(isOffline) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_OFFLINE', isOffline });\r\n    } catch (err) {\r\n      console.log('Cannot set offline', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n// can be deleteted:\r\nexport function setNotifCount(count) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_NOTIF_COUNT', count });\r\n    } catch (err) {\r\n      console.log('Cannot update notification', err);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport function setSearchBg(searchStr) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'SET_SEARCH_BG', searchStr });\r\n    } catch (err) {\r\n      console.log('Cannot set search background', err);\r\n    }\r\n  }\r\n\r\n}\r\n","import { userService } from \"../services/user.service.js\";\r\n\r\nexport function loadUsers() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch({ type: 'LOADING_START' })\r\n            const users = await userService.getUsers()\r\n            dispatch({ type: 'SET_USERS', users })\r\n        } catch (err) {\r\n            console.log('UserActions: err in loadUsers', err)\r\n        } finally {\r\n            dispatch({ type: 'LOADING_DONE' })\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateUser(user) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.update(user);\r\n            dispatch({ type: 'SET_USER', user });\r\n        } catch (err) {\r\n            console.log('err in updateUser:', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n    return async dispatch => {\r\n        try {\r\n            await userService.remove(userId)\r\n            dispatch({ type: 'REMOVE_USER', userId })\r\n        } catch (err) {\r\n            console.log('UserActions: err in removeUser', err)\r\n        }\r\n    }\r\n}\r\n\r\nexport function onLogin(credentials) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const user = await userService.login(credentials)\r\n            dispatch({\r\n                type: 'SET_USER',\r\n                user\r\n            })\r\n            return user\r\n        } catch (err) {\r\n            console.log('Cannot login', err)\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function onSignup(credentials) {\r\n    console.log('credentials', credentials);\r\n\r\n    return (dispatch) => {\r\n        userService.signup(credentials)\r\n            .then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Cannot signup', err)\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport function onLogout() {\r\n    return (dispatch) => {\r\n        userService.logout()\r\n            .then(() => dispatch({\r\n                type: 'SET_USER',\r\n                user: null\r\n            }))\r\n            .catch(err => {\r\n                console.log('Cannot logout', err)\r\n            })\r\n    }\r\n}\r\n\r\nexport function loginAsGuest() {\r\n    const guestCreds = {\r\n        username: \"pandaguest\",\r\n        password: \"123\"\r\n    }\r\n    try {\r\n        return onLogin(guestCreds)\r\n    } catch (err) {\r\n        console.log('error login as guest');\r\n    }\r\n}\r\n\r\n\r\n","export function ActionList({ list, board, onUpdateBoard }) {\r\n  function onDeleteList() {\r\n    const listIdx = board.lists.findIndex(\r\n      (listToFind) => listToFind.listId === list.listId\r\n    );\r\n    board.lists.splice(listIdx, 1);\r\n    console.log(\"board from delete\", board);\r\n    const action = `Deleted list ${list.listTitle}`;\r\n    onUpdateBoard(action);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"pointer\" onClick={onDeleteList}>\r\n        Delete\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateBoard } from \"../../store/board.actions.js\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport { TextareaAutosize } from \"@mui/material\";\r\n\r\nclass _MembersPopover extends React.Component {\r\n  state = {\r\n    board: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n    inputTxt: \"\",\r\n    filteredMembers: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    this.setState({\r\n      ...this.state,\r\n      board,\r\n      currListIdx,\r\n      currCardIdx,\r\n      filteredMembers: board.boardMembers,\r\n    });\r\n  }\r\n\r\n  toggleMember = (member) => {\r\n    const { currListIdx, currCardIdx } = this.state;\r\n    const { loggedInUser, board } = this.props;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    if (this.isMemberOnCard(currCard, member._id)) {\r\n      const memberIdx = currCard.cardMembers.findIndex(\r\n        (cardMember) => cardMember._id === member._id\r\n      );\r\n      currCard.cardMembers.splice(memberIdx, 1);\r\n      var action = loggedInUser._id === member._id ? \"Left\" : `Removed`;\r\n    } else {\r\n      currCard.cardMembers.push(member);\r\n      var action = loggedInUser._id === member._id ? \"Join\" : `Added`;\r\n    }\r\n    this.props.updateBoard(board, action, currCard, member.username);\r\n  };\r\n\r\n  isMemberOnCard = (currCard, memberId) => {\r\n    return currCard.cardMembers.some(\r\n      (cardMember) => cardMember._id === memberId\r\n    );\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ ...this.state, inputTxt: target.value }, () => {\r\n      const filterRegex = new RegExp(this.state.inputTxt, \"i\");\r\n      this.setState({\r\n        ...this.state,\r\n        filteredMembers: this.props.board.boardMembers.filter((member) =>\r\n          filterRegex.test(member.fullname)\r\n        ),\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { board, currListIdx, currCardIdx, filteredMembers, inputTxt } =\r\n      this.state;\r\n    if (!board || currCardIdx === null || currListIdx === null) return <></>;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    return (\r\n      <section className=\"members-popover\">\r\n        <TextareaAutosize\r\n          className=\"search-members text-area-auto\"\r\n          placeholder=\"Search members\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          value={inputTxt}\r\n        />\r\n        <h3>Board Members</h3>\r\n        {filteredMembers.length ? (\r\n          filteredMembers.map((member) => {\r\n            if (member.username === \"pandaguest\") return;\r\n            return (\r\n              <div\r\n                className=\"member-preview flex direction-row space-between \"\r\n                onClick={() => this.toggleMember(member)}\r\n              >\r\n                <div className=\"flex direction-row \">\r\n                  <Avatar\r\n                    className=\"card-details-avatar\"\r\n                    alt={member.fullname}\r\n                    src={member.imgUrl}\r\n                    key={member._id}\r\n                  />\r\n                  <div className=\"flex align-center\">\r\n                    {member.fullname} ({member.username})\r\n                  </div>\r\n                </div>\r\n                {this.isMemberOnCard(currCard, member._id) && <DoneIcon />}\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <>\r\n            Looks like that person isn't a member yet. <br />\r\n            Enter their email address to <br />\r\n            add them to the card and board.\r\n          </>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\n\r\nexport const MembersPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_MembersPopover);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n  setUpdateLabel,\r\n} from \"../../store/board.actions.js\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport { TextareaAutosize } from \"@mui/material\";\r\n\r\nclass _LabelsPopover extends React.Component {\r\n  state = {\r\n    board: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n    currLabel: \"\",\r\n    filteredLabels: [],\r\n    inputTxt: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    this.setState({\r\n      ...this.state,\r\n      board,\r\n      currListIdx,\r\n      currCardIdx,\r\n      filteredLabels: board.labels,\r\n    });\r\n  }\r\n\r\n  toggleLabel = (label) => {\r\n    const { currListIdx, currCardIdx } = this.state;\r\n    const newBoard = { ...this.state.board };\r\n    const currCard = newBoard.lists[currListIdx].cards[currCardIdx];\r\n    if (this.isLabelOnCard(currCard, label.id)) {\r\n      const labelIdx = currCard.cardLabelIds.findIndex(\r\n        (cardLabelId) => cardLabelId === label.id\r\n      );\r\n      newBoard.lists[currListIdx].cards[currCardIdx].cardLabelIds.splice(\r\n        labelIdx,\r\n        1\r\n      );\r\n    } else {\r\n      newBoard.lists[currListIdx].cards[currCardIdx].cardLabelIds.push(\r\n        label.id\r\n      );\r\n    }\r\n    this.props.updateBoard(newBoard);\r\n  };\r\n\r\n  isLabelOnCard = (currCard, labelId) => {\r\n    return currCard.cardLabelIds.some((cardLabelId) => cardLabelId === labelId);\r\n  };\r\n\r\n  editLabel = (label) => (ev) => {\r\n    ev.stopPropagation();\r\n    const { changeTitle, setUpdateLabel } = this.props;\r\n    setUpdateLabel({ label, isCreat: true });\r\n    changeTitle(true, \"Change label\", label);\r\n  };\r\n\r\n  createLabel = () => {\r\n    this.props.changeTitle(true, \"Create label\");\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ ...this.state, inputTxt: target.value }, () => {\r\n      const filterRegex = new RegExp(this.state.inputTxt, \"i\");\r\n      this.setState({\r\n        ...this.state,\r\n        filteredLabels: this.props.board.labels.filter((label) =>\r\n          filterRegex.test(label.title)\r\n        ),\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { board, currListIdx, currCardIdx, filteredLabels, inputTxt } =\r\n      this.state;\r\n    const { labelsProps } = this.props;\r\n    if (!board || currCardIdx === null || currListIdx === null) return <></>;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    return (\r\n      <section className=\"label-popover\">\r\n        {!labelsProps.isCreate && (\r\n          <div>\r\n            <TextareaAutosize\r\n              className=\"search-labels text-area-auto\"\r\n              placeholder=\"Search labels...\"\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              value={inputTxt}\r\n            />\r\n            <h4>Labels</h4>\r\n            {filteredLabels.length ? (\r\n              filteredLabels.map((label) => (\r\n                <div\r\n                  key={label.id}\r\n                  className=\"edit-label-popover flex\"\r\n                  onClick={() => this.toggleLabel(label)}\r\n                >\r\n                  <div className={\"edit-label-color \" + label.color}>\r\n                    <span>{label.title}</span>\r\n                    {this.isLabelOnCard(currCard, label.id) && <DoneIcon />}\r\n                  </div>\r\n                  <div\r\n                    onClick={this.editLabel(label)}\r\n                    className=\"edit-label-icon pointer\"\r\n                  >\r\n                    <BsPencil />\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <>\r\n                Sorry no results... <br />\r\n                Maybe try to create a new label\r\n              </>\r\n            )}\r\n            <div className=\"create-label pointer\" onClick={this.createLabel}>\r\n              Create a new label\r\n            </div>\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    labelsProps: state.boardReducer.labelsProps,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n  setUpdateLabel,\r\n};\r\n\r\nexport const LabelsPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_LabelsPopover);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoards, removeBoard, addBoard, updateBoard } from '../../store/board.actions.js';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass _DatesPopover extends React.Component {\r\n    state = {\r\n        date: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        const date = (currCard.dueDate && currCard.dueDate.date) ? currCard.dueDate.date : Date.now()\r\n        this.setState({ date })\r\n    }\r\n\r\n    handleDateSelect = (date) => {\r\n        const stringDate = date.toString()\r\n        const day = stringDate.substring(8, 10)\r\n        const month = stringDate.substring(4, 7)\r\n        const year = stringDate.substring(11, 15)\r\n        const hourGmt = stringDate.substring(17, 28)\r\n        const timestamp = `${day} ${month} ${year} ${hourGmt}`\r\n        this.setState({ ...this.state, date: Date.parse(timestamp) })\r\n    }\r\n\r\n    onSaveDate = (date) => {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        // need to fix\r\n        if (!date) var action = 'Removed due date'\r\n        else if (date && currCard.duedate && !currCard.duedate.date) var action = 'Set due date'\r\n        else var action = 'Changed due date'\r\n        currCard.dueDate = {\r\n            date: date,\r\n            isDone: false\r\n        }\r\n        this.props.updateBoard(board, action, currCard)\r\n        this.props.handleClose()\r\n    }\r\n\r\n    render() {\r\n        const { date } = this.state\r\n        if (!date) return <></>\r\n        return (\r\n            <div className=\"dates-popover\">\r\n                <DatePicker\r\n                    onSelect={this.handleDateSelect}\r\n                    startDate={Date.now()}\r\n                    openToDate={date}\r\n                    inline\r\n                    formatWeekDay={nameOfDay => nameOfDay.substr(0, 3)}\r\n                />\r\n                <div className=\" flex direction-col\">\r\n                    <button className=\"btn-date-save\" onClick={() => this.onSaveDate(this.state.date)}>Save</button>\r\n                    <button className=\"btn-date-remove\" onClick={() => this.onSaveDate(null)}>Remove</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    removeBoard,\r\n    addBoard,\r\n    updateBoard\r\n}\r\n\r\nexport const DatesPopover = connect(mapStateToProps, mapDispatchToProps)(_DatesPopover)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { utilService } from \"../../services/util.service.js\";\r\nimport { updateBoard } from \"../../store/board.actions.js\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nclass _ChecklistPopover extends React.Component {\r\n  state = {\r\n    board: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n    title: \"Checklist\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    this.setState({ ...this.state, board, currListIdx, currCardIdx });\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ ...this.state, title: target.value });\r\n  };\r\n\r\n  onAddChecklist = (ev) => {\r\n    ev.preventDefault();\r\n    const { currListIdx, currCardIdx, title, board } = this.state;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    const action = `Added checklist \"${title}\"`;\r\n    const boardToUpdate = { ...this.state.board };\r\n    boardToUpdate.lists[currListIdx].cards[currCardIdx].checklists.push({\r\n      checklistId: utilService.makeId(),\r\n      title,\r\n      tasks: [],\r\n    });\r\n    this.props.updateBoard(boardToUpdate, action, currCard);\r\n    this.props.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { board, currListIdx, currCardIdx, title } = this.state;\r\n    if (!board || currCardIdx === null || currListIdx === null) return <></>;\r\n    return (\r\n      <section className=\"popover-checklist\">\r\n        <label>Title</label>\r\n        <form onSubmit={this.onAddChecklist}>\r\n          <input\r\n            className=\"popover-checklist-input\"\r\n            name=\"cardTitle\"\r\n            type=\"text\"\r\n            onChange={this.handleChange}\r\n            value={title}\r\n          />\r\n          <Button\r\n            onClick={this.onAddChecklist}\r\n            variant=\"contained\"\r\n            className=\"add-btn\"\r\n          >\r\n            Add\r\n          </Button>\r\n        </form>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    boards: state.boardReducer.boards,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\n\r\nexport const ChecklistPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_ChecklistPopover);\r\n","import Axios from 'axios'\r\n\r\nconst KEY = \"dXZ90rFg6fkomwI0ttsljiR3C_o35DBKwIhHcoX6oow\"\r\n\r\nexport const unsplashService = {\r\n    getImgs\r\n}\r\n\r\nasync function getImgs(keyword, count = 10) {\r\n    if (!keyword) {\r\n        keyword = 'scenery'\r\n        count++\r\n    }\r\n    const res = await Axios.get(`https://api.unsplash.com/search/photos?query=${keyword}&per_page=${count}&orientation=landscape&client_id=${KEY}`)\r\n    const imgs = res.data.results.map(img => ({ id: img.id, small: img.urls.small, full: `${img.urls.full}&auto=format&fit=crop&w=1920`, link: img.links.html, name:img.user.name }))\r\n    if (keyword === 'scenery') imgs.shift()\r\n    return imgs\r\n}","import React from \"react\";\r\nimport { DebounceInput } from \"react-debounce-input\";\r\nexport class SearchForCover extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getImgForCover(9);\r\n  }\r\n\r\n  render() {\r\n    const { handleChange, searchCover, getImgForCover } = this.props;\r\n    const searchKey = [\r\n      \"Animals\",\r\n      \"Business\",\r\n      \"Architect\",\r\n      \"Construction\",\r\n      \"Organization\",\r\n      \"Foundation\",\r\n      \"Minimal\",\r\n      \"Space\",\r\n      \"Perspective\",\r\n    ];\r\n    return (\r\n      <div className=\"search-cover\">\r\n        <div className=\"search-cover-input\">\r\n          <DebounceInput\r\n            minLength={2}\r\n            debounceTimeout={400}\r\n            className=\"search-cover-img text-area-auto\"\r\n            placeholder=\"Search unsplash photo...\"\r\n            type=\"text\"\r\n            onChange={handleChange}\r\n            value={searchCover}\r\n          />\r\n        </div>\r\n        <h4>Suggested searches</h4>\r\n        <div className=\"suggested-keywords\">\r\n          {searchKey.map((key, idx) => (\r\n            <button\r\n              className=\"suggested-search-btn\"\r\n              key={idx}\r\n              onClick={() => {\r\n                getImgForCover(12, key);\r\n              }}\r\n            >\r\n              {key}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { utilService } from \"./util.service\";\r\nconst CLOUD_NAME = 'looply';\r\nconst UPLOAD_PRESET = 'oxageyls';\r\n\r\nexport const cloudinaryService = {\r\n    uploadFile\r\n}\r\n\r\nfunction uploadFile(ev) {\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0])\r\n    formData.append('upload_preset', UPLOAD_PRESET);\r\n\r\n    return fetch(UPLOAD_URL, {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => ({\r\n            id: utilService.makeId(),\r\n            fileName: res.original_filename,\r\n            url: res.secure_url,\r\n            createdAt: Date.now()\r\n        }))\r\n        .catch(err => console.error(err))\r\n}","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n} from \"../../store/board.actions.js\";\r\nimport { unsplashService } from \"../../services/unsplash.service\";\r\nimport { SearchForCover } from \"../DynamicPopover/SearchForCover\";\r\nimport { cloudinaryService } from \"../../services/cloudinary.service.js\";\r\nimport { showSuccessMsg, showErrorMsg } from \"../../services/event-bus.service\";\r\n\r\nclass _CoverPopover extends React.Component {\r\n  state = {\r\n    board: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n    isCoverSelected: \"selected\",\r\n    coverImgs: [],\r\n    isSearch: false,\r\n    searchCover: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    this.setState({ board, currListIdx, currCardIdx });\r\n    this.getImgForCover(6);\r\n  }\r\n\r\n  onToggleCover = async (cover) => {\r\n    const { currListIdx, currCardIdx } = this.state;\r\n    const newBoard = { ...this.state.board };\r\n    const currCard = newBoard.lists[currListIdx].cards[currCardIdx];\r\n    if (this.isCoverOnCard(currCard, cover.id)) {\r\n      newBoard.lists[currListIdx].cards[currCardIdx].cardStyle = {};\r\n    } else {\r\n      newBoard.lists[currListIdx].cards[currCardIdx].cardStyle = {\r\n        id: cover.id,\r\n        color: cover.color,\r\n        isCover: false,\r\n      };\r\n    }\r\n    await this.props.updateBoard(newBoard);\r\n  };\r\n\r\n  isCoverOnCard = (currCard, coverId) => {\r\n    return currCard.cardStyle.id === coverId;\r\n  };\r\n\r\n  handelSize = (currCard, isCover) => {\r\n    const { board } = this.props;\r\n    currCard.cardStyle.isCover = isCover;\r\n    this.props.updateBoard(board);\r\n  };\r\n\r\n  onRemoveCover = (currCard) => {\r\n    const { board } = this.props;\r\n    currCard.cardStyle = {};\r\n    this.props.updateBoard(board);\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    const value = ev.target.value;\r\n    this.setState({ searchCover: value }, () => {\r\n      this.getImgForCover(12);\r\n    });\r\n  };\r\n\r\n  getImgForCover = async (imgToShow, key = \"\") => {\r\n    let { searchCover } = this.state;\r\n    if (key) {\r\n      searchCover = key;\r\n    }\r\n    const coverImgs = await unsplashService.getImgs(searchCover, imgToShow);\r\n    this.setState({ ...this.state, coverImgs });\r\n  };\r\n\r\n  onToggleImgCover = (currCard, coverImg) => {\r\n    const { board } = this.props;\r\n    if (this.isCoverOnCard(currCard, coverImg.id)) {\r\n      currCard.cardStyle = {};\r\n    } else {\r\n      currCard.cardStyle = {\r\n        id: coverImg.id,\r\n        img: coverImg.small,\r\n        isCover: false,\r\n      };\r\n    }\r\n    this.props.updateBoard(board);\r\n  };\r\n\r\n  onAddImage = async (ev) => {\r\n    showErrorMsg(\"Uploading...\");\r\n    const coverUploadImg = await cloudinaryService.uploadFile(ev);\r\n    this.onSaveCover(coverUploadImg);\r\n  };\r\n\r\n  onSaveCover = (coverUploadImg) => {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    if (this.isCoverOnCard(currCard, coverUploadImg.id)) {\r\n      currCard.cardStyle = {};\r\n    } else {\r\n      currCard.cardStyle = {\r\n        id: coverUploadImg.id,\r\n        img: coverUploadImg.url,\r\n        isCover: false,\r\n      };\r\n    }\r\n    currCard.attachments.unshift(coverUploadImg);\r\n    this.props.updateBoard(board);\r\n    showSuccessMsg(\"Uploading Photo\");\r\n  };\r\n\r\n  render() {\r\n    const { board, currListIdx, currCardIdx, coverImgs, searchCover } =\r\n      this.state;\r\n    const { changeTitle, isSearch } = this.props;\r\n    if (!board || currCardIdx === null || currListIdx === null) return <></>;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    const halfCover = !currCard.cardStyle.isCover ? \"selected\" : \"\";\r\n    const fullCover = currCard.cardStyle.isCover ? \"selected\" : \"\";\r\n    return (\r\n      <section className=\"popover-cover\">\r\n        {isSearch && (\r\n          <SearchForCover\r\n            searchCover={searchCover}\r\n            getImgForCover={this.getImgForCover}\r\n            handleChange={this.handleChange}\r\n          />\r\n        )}\r\n        {!isSearch && <h4>Size</h4>}\r\n        {!isSearch && (\r\n          <div>\r\n            <div className=\"header-cover\">\r\n              <div\r\n                onClick={() => {\r\n                  this.handelSize(currCard, false);\r\n                }}\r\n                className={`header-half-cover pointer  ${halfCover}`}\r\n              >\r\n                <div className=\"paragraph\"></div>\r\n                <div className=\"row\"></div>\r\n                <div className=\"row second\"></div>\r\n              </div>\r\n              <div\r\n                onClick={() => {\r\n                  this.handelSize(currCard, true);\r\n                }}\r\n                className={`header-full-cover pointer ${fullCover}`}\r\n              >\r\n                <div className=\"row full\"></div>\r\n                <div className=\"row second full\"></div>\r\n              </div>\r\n            </div>\r\n            {currCard.cardStyle.id && (\r\n              <div\r\n                className=\"remove-cover btn\"\r\n                onClick={() => {\r\n                  this.onRemoveCover(currCard);\r\n                }}\r\n              >\r\n                Remove cover\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!isSearch && <h4 className=\"color-title\">Colors</h4>}\r\n        {!isSearch && (\r\n          <div className=\"color-plate\">\r\n            {board.covers.length &&\r\n              board.covers.map((cover) => (\r\n                <div\r\n                  key={cover.id}\r\n                  onClick={() => this.onToggleCover(cover)}\r\n                  className={`color-sqr pointer ${cover.color} \r\n                             ${this.isCoverOnCard(currCard, cover.id)\r\n                      ? \"color-selected\"\r\n                      : \"\"\r\n                    } `}\r\n                ></div>\r\n              ))}\r\n          </div>\r\n        )}\r\n        {!isSearch && (\r\n          <div>\r\n            <h4>Attachment</h4>\r\n            <label htmlFor=\"file-input\">\r\n              <div className=\"uplaod-img btn pointer\">Upload a cover image</div>\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              className=\"file-input\"\r\n              id={\"file-input\"}\r\n              onChange={this.onAddImage}\r\n            />\r\n          </div>\r\n        )}\r\n\r\n        <div>\r\n          {!isSearch && <h4>Unsplash</h4>}\r\n          {isSearch && <h4>Top photos</h4>}\r\n          <div className=\"cover-img-plate pointer\">\r\n            {coverImgs.map((coverImg) => (\r\n              <div\r\n                key={coverImg.id}\r\n                onClick={() => this.onToggleImgCover(currCard, coverImg)}\r\n                className={`img-cover ${this.isCoverOnCard(currCard, coverImg.id)\r\n                  ? \"cover-selected\"\r\n                  : \"\"\r\n                  } `}\r\n                style={{ backgroundImage: `url(${coverImg.small})` }}\r\n              ></div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-cover btn pointer\">\r\n          {!isSearch && (\r\n            <span\r\n              onClick={() => {\r\n                changeTitle(true, \"change cover\");\r\n              }}\r\n            >\r\n              Search for photos\r\n            </span>\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    boards: state.boardReducer.boards,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n};\r\n\r\nexport const CoverPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_CoverPopover);\r\n","export default __webpack_public_path__ + \"static/media/menu-arrow-icon.4d02ed18.svg\";","export function LabelPreview({ labelId, boardLabels, type }) {\r\n    const currLabel = boardLabels.find(label => label.id === labelId)\r\n\r\n    return (\r\n        <div className={`${currLabel.color} label pointer`}>\r\n            {currLabel.title}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\n\r\nexport class DueDatePreview extends React.Component {\r\n\r\n    onToggleDone = (ev) => {\r\n        ev.stopPropagation();\r\n        this.props.onToggleDone()\r\n    }\r\n\r\n    render() {\r\n        const { dueDate } = this.props\r\n        return (\r\n            <div className=\"due-date-preview\">\r\n                <h3>Due Date</h3>\r\n                <div className=\"date-display flex direction-row\">\r\n                    <Checkbox checked={dueDate.isDone}\r\n                        onClick={this.onToggleDone}\r\n                    />\r\n                    <div className=\" gray hover flex direction-row align-center\">\r\n                        <div className=\"date\">{new Date(dueDate.date).toString().substring(0, 16)}</div>\r\n                        {dueDate.isDone && <div className='status done'>COMPLETE</div>}\r\n                        {!dueDate.isDone && dueDate.date < Date.now() && <div className='status overdue'>OVERDUE</div>}\r\n                        <KeyboardArrowDownIcon />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\nimport LocalOfferOutlinedIcon from '@mui/icons-material/LocalOfferOutlined';\r\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\r\nimport ScheduleOutlinedIcon from '@mui/icons-material/ScheduleOutlined';\r\nimport CallToActionOutlinedIcon from '@mui/icons-material/CallToActionOutlined';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\r\nimport ArrowForwardIcon from '@mui/icons-material/ArrowForward';\r\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\r\nimport HorizontalRuleIcon from '@mui/icons-material/HorizontalRule';\r\nimport DownArrow from '../../assets/imgs/icons/menu-arrow-icon.svg';\r\nimport { LabelPreview } from '../CardDetails/LabelPreview';\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport { DueDatePreview } from '../CardDetails/DueDatePreview';\r\nimport NotificationsActiveOutlinedIcon from '@mui/icons-material/NotificationsActiveOutlined';\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\n\r\nclass _DynamicButton extends React.Component {\r\n    render() {\r\n        const { type, loggedInUser } = this.props\r\n        const DynamicCmp = (props) => {\r\n            switch (props.type) {\r\n                case 'members':\r\n                case 'change members':\r\n                    return <><PersonOutlineOutlinedIcon />{props.title}</>\r\n                case 'add-members':\r\n                case 'add-labels':\r\n                    return <><AddIcon /></>\r\n                case 'list actions':\r\n                    return <><BsThreeDots /></>\r\n                case 'labels':\r\n                case 'edit labels':\r\n                    return <><LocalOfferOutlinedIcon /> {props.title}</>\r\n                case 'labels-preview':\r\n                    return <LabelPreview {...props} />\r\n                case 'checklist':\r\n                    return <><CheckBoxOutlinedIcon /> Checklist</>\r\n                case 'dates':\r\n                    return <><ScheduleOutlinedIcon />{props.title}</>\r\n                case 'dates-edit':\r\n                case 'edit-dates':\r\n                    return <><DueDatePreview  {...props} /> </>\r\n                case 'attachments':\r\n                    return <><AttachFileOutlinedIcon className=\"attachment-icon\" /> Attachments</>\r\n                case 'add-attachments':\r\n                    return <>Add an attachment</>\r\n                case 'cover':\r\n                case 'change cover':\r\n                    return <><CallToActionOutlinedIcon /> <span>{props.title}</span></>\r\n                case 'delete-card':\r\n                    return <> <HorizontalRuleIcon /> Delete</>\r\n                case 'move-card':\r\n                    return <> <ArrowForwardIcon />  Move</>\r\n                case 'copy-card':\r\n                    return <> <ContentCopyIcon /> Copy</>\r\n                case 'userMenu':\r\n                    return <>\r\n                        <Avatar alt=\"\" src={loggedInUser.imgUrl} className=\"logged-in-avatar\">\r\n                            <p>{loggedInUser.initials}</p>\r\n                        </Avatar>\r\n                    </>\r\n                case 'boardMember':\r\n                    return <><span className=\"board-member-btn\"></span></>\r\n                case 'userBoards':\r\n                    return <><span onClick={() => props.onToggle()}><span>Boards</span><img src={DownArrow} alt=\"\" /></span></>\r\n                case 'starredBoards':\r\n                    return <><span onClick={() => props.onToggle()}><span>Starred</span><img src={DownArrow} alt=\"\" /></span></>\r\n                case 'newNotif':\r\n                    return <div className=\"unread-notif flex\" > <NotificationsActiveOutlinedIcon /> <div className=\"notif-background\" ><span className=\"notif-count\">{this.props.notifCount}</span></div></div>\r\n                case 'noNotif':\r\n                    return <NotificationsNoneIcon />\r\n                case 'invite':\r\n                    return <> <span className=\"invite\">Invite</span></>\r\n                default:\r\n                    return props.type\r\n            }\r\n        }\r\n        return (\r\n            <DynamicCmp type={type} {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n        notifCount: state.boardReducer.notifCount\r\n    }\r\n}\r\n\r\nexport const DynamicButton = connect(mapStateToProps)(_DynamicButton)","import { connect } from 'react-redux'\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nfunction _UserInfo(props) {\r\n    const { user } = props\r\n\r\n    return (\r\n        <div className=\"user-info flex\">\r\n            <Avatar alt=\"\" src={user.imgUrl} className=\"user-avatar\">\r\n                <p>{user.initials}</p>\r\n            </Avatar>\r\n            <div className=\"user-name-info\">\r\n                <p className=\"fullname\">{user.fullname}</p>\r\n                <p className=\"username\">{user.username}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nexport const UserInfo = connect(mapStateToProps)(_UserInfo)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { onLogout } from '../../store/user.actions'\r\nimport { UserInfo } from '../UserInfo';\r\nimport { updateBoard } from '../../store/board.actions'\r\n\r\nclass _UserMenuPopover extends React.Component {\r\n    onLogout = async () => {\r\n        await this.props.onLogout()\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    onRemoveFromBoard = (memberId) => {\r\n        const memberIdx = this.props.board.boardMembers.findIndex(member => member._id === memberId)\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardMembers.splice(memberIdx, 1)\r\n        this.props.updateBoard(newBoard, `removed ${this.props.user.fullname} from the board`)\r\n        this.props.handleClose()\r\n    }\r\n\r\n    render() {\r\n        const { user, from } = this.props\r\n        if (!user) return (<></>)\r\n        return (\r\n            <div className=\"user-menu popover-content\">\r\n                <UserInfo user={user} handleClose={this.props.handleClose} />\r\n                {(from === 'AppHeader') && <div>\r\n                    <button onClick={this.onLogout}>Logout</button>\r\n                </div>}\r\n                {(from === 'BoardHeader') &&\r\n                    <button className=\"remove-member-btn\" onClick={() => this.onRemoveFromBoard(user._id)}>Remove from board</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout,\r\n    updateBoard\r\n}\r\n\r\nconst _UserMenuPopoverWithRouter = withRouter(_UserMenuPopover);\r\nexport const UserMenuPopover = connect(mapStateToProps, mapDispatchToProps)(_UserMenuPopoverWithRouter)\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport class ActivityPreview extends React.Component {\r\n    \r\n    render() {\r\n        const { activity, display } = this.props\r\n        return (\r\n            <div className=\"activity-preview flex direction-row\">\r\n                <Avatar className=\"card-details-avatar\" alt={activity.byMember.fullname} src={activity.byMember.imgUrl}\r\n                    key={activity.byMember._id} />\r\n                <div>\r\n                    <h4>{activity.byMember.fullname} {activity.action} {activity.txt}\r\n                        {(display === 'menu') && activity.card.cardTitle && `on card: \"${activity.card.cardTitle}\"`}\r\n                    </h4>\r\n\r\n                    <small> {new Date(activity.createdAt).toString().substring(0, 16)}</small>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import { ActivityPreview } from \"./ActivityPreview.jsx\";\r\n\r\nexport function ShowMenu({ board }) {\r\n  return (\r\n    <>\r\n      {board.activities.length &&\r\n        board.activities.map((activity) => (\r\n          <ActivityPreview\r\n            activity={activity}\r\n            display={\"menu\"}\r\n            key={activity.id}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close.e9203ba4.svg\";","import * as React from \"react\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { ShowMenu } from \"../cmp/ShowMenu.jsx\";\r\nimport close from \"../assets/imgs/close.svg\";\r\n\r\nexport function TemporaryDrawer({ board, toggleMenu, isMenuOpen }) {\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    toggleMenu();\r\n    console.log(\"toggle menu\");\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div className=\"menu-wrapper\">\r\n      <div className=\"menu-screen\" onClick={toggleDrawer(anchor, false)}></div>\r\n      <div\r\n        className=\"board-menu-content\"\r\n      >\r\n        <div className=\"board-menu-content-header flex\">\r\n          <div className=\"title\">\r\n            <h3>Menu</h3>\r\n          </div>\r\n          <span className=\"exit-icon\" onClick={toggleDrawer(anchor, false)}>\r\n            <img src={close} alt=\"Close\" />\r\n          </span>\r\n        </div>\r\n        <Divider />\r\n\r\n        <div className=\"menu-content fancy-scrollbar\">\r\n          <div className=\"board-actions\">\r\n            <button className=\"menu-action-btn\">\r\n              Change background\r\n            </button>\r\n          </div>\r\n          <Divider />\r\n          <div className=\"activities\">\r\n            <ShowMenu board={board} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  const anchor = \"right\";\r\n\r\n  return (\r\n    <div className=\"menu-visible\">\r\n      <React.Fragment key={anchor}>\r\n        <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n        <Drawer\r\n          anchor={anchor}\r\n          open={isMenuOpen}\r\n          hideBackdrop={true}\r\n        >\r\n          {list(anchor)}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n} from \"../../store/board.actions.js\";\r\nimport { cloudinaryService } from \"../../services/cloudinary.service.js\";\r\nimport { showSuccessMsg, showErrorMsg } from \"../../services/event-bus.service\";\r\nclass _AttachmentsPopover extends React.Component {\r\n  state = {\r\n    board: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n    urlLink: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    this.setState({ board, currListIdx, currCardIdx });\r\n  }\r\n\r\n  onAddAttach = async (ev) => {\r\n    showErrorMsg(\"Uploading...\");\r\n    const attachment = await cloudinaryService.uploadFile(ev);\r\n    const { board, currListIdx, currCardIdx } = this.props;\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx];\r\n    currCard.attachments.unshift(attachment);\r\n    this.props.updateBoard(board, \"Attached\", currCard);\r\n    this.props.handleClose();\r\n    showSuccessMsg(\"Uploading Complete\");\r\n  };\r\n\r\n  render() {\r\n    const { board, currListIdx, currCardIdx, urlLink } = this.state;\r\n    if (!board || currCardIdx === null || currListIdx === null) return <></>;\r\n    return (\r\n      <section className=\"popover-attachment flex direction-col\">\r\n        <label htmlFor=\"file-upload\">Computer</label>\r\n        <input id=\"file-upload\" type=\"file\" onChange={this.onAddAttach} />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  removeBoard,\r\n  addBoard,\r\n  updateBoard,\r\n};\r\n\r\nexport const AttachmentsPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AttachmentsPopover);\r\n","export function DeleteCardPopover({ onDeleteCard }) {\r\n    return (\r\n        <section className=\"delete-card-popover\">\r\n            <p>All actions will be removed from the activity <br />\r\n                feed and you won’t be able to\r\n                re-open the <br />\r\n                card. There is no undo.</p>\r\n            <button onClick={onDeleteCard}>Delete</button>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextareaAutosize from \"@mui/material/TextareaAutosize\";\r\nimport { updateBoard } from \"../../store/board.actions.js\";\r\nimport { utilService } from \"../../services/util.service\";\r\nclass _MoveCopyCardPopoverWithRouter extends React.Component {\r\n  state = {\r\n    listIdx: 0,\r\n    cardIdx: 0,\r\n    title: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { currListIdx, currCardIdx, currCard } = this.props;\r\n    this.setState({\r\n      listIdx: currListIdx,\r\n      cardIdx: currCardIdx,\r\n      title: currCard.cardTitle,\r\n    });\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onMoveCard = (cardToMove) => {\r\n    const { board } = this.props;\r\n    const { listIdx, cardIdx, title } = this.state;\r\n    const listId = board.lists[listIdx].listId;\r\n    let action;\r\n    board.lists.forEach((list) => {\r\n      list.cards.forEach((boardCard, idx) => {\r\n        if (boardCard.cardId === cardToMove.cardId) list.cards.splice(idx, 1);\r\n      });\r\n      if (list.listId === listId) {\r\n        list.cards.splice(cardIdx, 0, cardToMove);\r\n        action = `Moved card ${title}`;\r\n      } else {\r\n        action = `copied card ${title}`;\r\n      }\r\n    });\r\n    this.props.history.push(`/boards/${board._id}`);\r\n    this.props.updateBoard(board, action, cardToMove);\r\n  };\r\n\r\n  onCopyCard = () => {\r\n    const { currCard } = this.props;\r\n    const { title } = this.state;\r\n    if (!title) return;\r\n    const duplicatedCard = JSON.parse(JSON.stringify(currCard));\r\n    duplicatedCard.cardId = utilService.makeId();\r\n    duplicatedCard.cardTitle = this.state.title;\r\n    this.onMoveCard(duplicatedCard);\r\n  };\r\n\r\n  render() {\r\n    const { board, isCopy } = this.props;\r\n    const { listIdx, cardIdx, title } = this.state;\r\n    const chosenCards = board.lists[listIdx].cards;\r\n    return (\r\n      <section className=\"move-copy-card-popover flex direction-col\">\r\n        <div className=\"board-title\">\r\n          <h4>Board:</h4>\r\n          <h4>{board.boardTitle}</h4>\r\n        </div>\r\n        {isCopy && (\r\n          <div className=\"card-title flex direction-col\">\r\n            <label htmlFor=\"title\">\r\n              <h4>Title:</h4>\r\n            </label>\r\n            <TextareaAutosize\r\n              id=\"title\"\r\n              name=\"title\"\r\n              className=\"text-area-auto\"\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              onChange={this.handleChange}\r\n              value={title}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        )}\r\n        <h4 className=\"copy-to\">copy to...</h4>\r\n        <div className=\"list-position flex diirection-row space-between\">\r\n          <FormControl variant=\"standard\">\r\n            <InputLabel id=\"list\">List</InputLabel>\r\n            <Select\r\n              label=\"List\"\r\n              labelId=\"list\"\r\n              id=\"select-list\"\r\n              value={listIdx}\r\n              name=\"listIdx\"\r\n              onChange={this.handleChange}\r\n            >\r\n              {board.lists.map((list, idx) => (\r\n                <MenuItem value={idx}>{list.listTitle}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl variant=\"standard\">\r\n            <InputLabel id=\"position\">Position</InputLabel>\r\n            <Select\r\n              labelId=\"position\"\r\n              id=\"select-position\"\r\n              value={cardIdx}\r\n              name=\"cardIdx\"\r\n              onChange={this.handleChange}\r\n            >\r\n              {chosenCards.length ? (\r\n                chosenCards.map((card, idx) => (\r\n                  <MenuItem value={idx}>{idx ? idx + 1 : 1}</MenuItem>\r\n                ))\r\n              ) : (\r\n                <MenuItem value={0}>1</MenuItem>\r\n              )}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        {!isCopy && (\r\n          <button onClick={() => this.onMoveCard(this.props.currCard)}>\r\n            Move\r\n          </button>\r\n        )}\r\n        {isCopy && <button onClick={this.onCopyCard}>Create card</button>}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\nconst _MoveCopyCardPopover = withRouter(_MoveCopyCardPopoverWithRouter);\r\nexport const MoveCopyCardPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_MoveCopyCardPopover);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { FiStar } from 'react-icons/fi';\r\nimport { userService } from '../../services/user.service';\r\nimport { utilService } from '../../services/util.service';\r\nimport { loadBoards, updateBoard } from '../../store/board.actions'\r\n\r\nclass _UserBoardsPopover extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        const { loggedInUser, boards } = this.props\r\n        if (loggedInUser && !boards.length) await this.props.loadBoards(loggedInUser._id)\r\n    }\r\n\r\n    toggleStar = (ev, board) => {\r\n        ev.stopPropagation()\r\n        const { loggedInUser, updateBoard } = this.props\r\n        const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id)\r\n        updateBoard(updatedBoard)\r\n        console.log('updated star board');\r\n    }\r\n\r\n    getBoardBtns = (boards) => {\r\n        console.log('this.props:', this.props);\r\n        return boards.map(board => {\r\n            const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\r\n            return <div key={board._id} className=\"board-menu-btn flex align-center\">\r\n                <Link key={board._id} className=\"flex align-center\" to={`/boards/${board._id}`} onClick={() => this.props.handleClose()}>\r\n                    <span className=\"board-bg\" style={bgStyle}></span>\r\n                    <p>{board.boardTitle}</p>\r\n                </Link >\r\n                {(this.props.type === 'starredBoards') ? <button className=\"star-board\" onClick={(ev) => this.toggleStar(ev, board)}><FiStar /></button> : <></>}\r\n            </div>\r\n        })\r\n    }\r\n\r\n    getfilteredBoards = (type) => {\r\n        const { boards, loggedInUser } = this.props\r\n        return userService.filterUserBoards(boards, loggedInUser._id, type)\r\n    }\r\n\r\n    goToBoard = (boardId) => {\r\n        this.props.handleClose()\r\n        this.props.history.push(`/boards/${boardId}`)\r\n    }\r\n\r\n    render() {\r\n        const { type } = this.props\r\n        const boardsToShow = (type === 'userBoards') ? this.getfilteredBoards(\"owner\") : this.getfilteredBoards(\"starred\")\r\n        const guestBoards = (type === 'userBoards') ? this.getfilteredBoards(\"guest\") : []\r\n        if (!boardsToShow.length && !guestBoards.length) return <div className=\"no-boards\">{`No${type === 'starredBoards' ? \" starred\" : \"\"} boards yet...`}</div>\r\n        return (\r\n            <div className=\"user-boards-popover\">\r\n                {type === 'userBoards' && <>\r\n                    {boardsToShow.length ? <div className=\"owner-section\">\r\n                        <h4>Your Boards</h4>\r\n                        <div className=\"owned-boards\">\r\n                            {this.getBoardBtns(boardsToShow)}\r\n                        </div>\r\n                    </div> : <></>}\r\n                    {guestBoards.length ? <div className=\"guest-section\">\r\n                        <h4>Guest Boards</h4>\r\n                        <div className=\"guest-boards\">\r\n                            {this.getBoardBtns(guestBoards)}\r\n                        </div>\r\n                    </div> : <></>}\r\n                </>}\r\n                {type === 'starredBoards' ? <div className=\"starred-section\">\r\n                    <div className=\"starred-boards\">\r\n                        {this.getBoardBtns(boardsToShow)}\r\n                    </div>\r\n                </div> : <></>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    updateBoard\r\n}\r\n\r\nexport const UserBoardsPopover = connect(mapStateToProps, mapDispatchToProps)(_UserBoardsPopover)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setNotif, setNotifCount } from \"../../store/board.actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\n\r\nclass _NotifPopover extends React.Component {\r\n  onNotifClick = (cardId) => {\r\n    const { board } = this.props;\r\n    const list = board.lists.find((list) =>\r\n      list.cards.find((card) => card.cardId === cardId)\r\n    );\r\n    if (!list) this.props.history.push(`/cardNotFound`);\r\n    else\r\n      this.props.history.push(`/boards/${board._id}/${list.listId}/${cardId}`);\r\n    this.props.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { board, notifCount, loggedInUser } = this.props;\r\n    if (!board._id) return <div>Enter a board to see your notifications</div>;\r\n    const notifications = board.activities.filter(\r\n      (activity) =>\r\n        activity.isNotif && activity.byMember._id !== loggedInUser._id\r\n    );\r\n    return (\r\n      <div className=\"notif-popover fancy-scrollbar flex align-center direction-col\">\r\n        {notifications.length ? (\r\n          notifications.map((activity, idx) => (\r\n            <div\r\n              onClick={() => this.onNotifClick(activity.card.cardId)}\r\n              className={`notif-allert ${idx < notifCount ? \"unread\" : \"\"}`}\r\n            >\r\n              <div className=\"notif pointer\">\r\n                <div className=\"notif-content\">\r\n                  <div\r\n                    className=\"notif-card-titles flex direction-col\"\r\n                    style={{\r\n                      backgroundImage: `url(${board.boardStyle.small})`,\r\n                    }}\r\n                  >\r\n                    <span className=\"notif-card-title\">\r\n                      <span className=\"notif-card-txt\">\r\n                        {activity.card.cardTitle}\r\n                      </span>\r\n                    </span>\r\n                    <span className=\"notif-card-board-title\">\r\n                      {board.boardTitle}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"notif-member-section flex\">\r\n                    <Avatar\r\n                      className=\"notif-avatar flex align-center\"\r\n                      alt={activity.byMember.fullname}\r\n                      src={activity.byMember.imgUrl}\r\n                      key={activity.byMember._id}\r\n                    />\r\n                    <span className=\"notif-member-name\">\r\n                      {activity.byMember.fullname}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"notif-action-section flex\">\r\n                    <div className=\"notif-action\">\r\n                      <span>\r\n                        {activity.action}\r\n                        {activity.action === \"Added\" ? (\r\n                          loggedInUser.username === activity.txt ? (\r\n                            <span> you</span>\r\n                          ) : (\r\n                            <span> {`  ${activity.txt}`} </span>\r\n                          )\r\n                        ) : activity.action === \"Removed\" &&\r\n                          loggedInUser.username === activity.txt ? (\r\n                          <span> you</span>\r\n                        ) : (\r\n                          <span> {`  ${activity.txt}`} </span>\r\n                        )}\r\n                      </span>\r\n\r\n                      <small className=\"notif-date\">\r\n                        {\" \"}\r\n                        {new Date(activity.createdAt)\r\n                          .toString()\r\n                          .substring(0, 16)}\r\n                      </small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>Sorry... no new notifications to show</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    isNotif: state.boardReducer.isNotif,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n    notifCount: state.boardReducer.notifCount,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNotif,\r\n  setNotifCount,\r\n};\r\n\r\nconst _NotifPopoverWithRouter = withRouter(_NotifPopover);\r\nexport const NotifPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_NotifPopoverWithRouter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport { utilService } from '../../services/util.service.js'\r\nimport { updateBoard, setUpdateLabel } from '../../store/board.actions.js';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\nclass _EditLabel extends React.Component {\r\n\r\n    state = {\r\n        labelName: '',\r\n        labelColor: '',\r\n        isDelete: false,\r\n        labelsColor: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { labelsProps } = this.props;\r\n        const currLabel = labelsProps.label;\r\n        this.createLabelsArr();\r\n        if (currLabel) this.setState({ labelName: currLabel.title });\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            this.onSaveLabel();\r\n            return;\r\n        }\r\n        const value = ev.target.value;\r\n        this.setState({ labelName: value })\r\n    }\r\n\r\n    onSaveLabel = () => {\r\n        const { labelName, labelColor } = this.state;\r\n        const { labelsProps, board } = this.props\r\n\r\n        const currLabel = labelsProps.label;\r\n        if (currLabel.title || currLabel.color) {\r\n            currLabel.title = labelName ? labelName : currLabel.title;\r\n            currLabel.color = labelColor ? labelColor : currLabel.color;\r\n        } else {\r\n            board.labels.push({ id: utilService.makeId(), title: labelName, color: labelColor })\r\n        }\r\n        labelsProps.label = {};\r\n        this.props.setUpdateLabel(labelsProps)\r\n        this.props.updateBoard(board);\r\n        this.props.changeTitle(false, 'labels-preview');\r\n    }\r\n\r\n    labelChoose = (labelColor) => {\r\n        this.setState({ ...this.state, labelColor })\r\n    }\r\n\r\n    deleteLabel = () => {\r\n        const { labelsProps, board } = this.props\r\n        const currLabel = labelsProps.label;\r\n        const labelIdx = board.labels.findIndex(label => label.id === currLabel.id)\r\n        board.labels.splice(labelIdx, 1);\r\n        this.props.updateBoard(board);\r\n        this.props.changeTitle(false, 'labels-preview');\r\n    }\r\n\r\n    confirmDeleteLabel = () => {\r\n        this.setState({ ...this.state, isDelete: !this.state.isDelete })\r\n    }\r\n\r\n    createLabelsArr = () => {\r\n        let labelsColor = [];\r\n        let clrNum = 1;\r\n        for (let i = 0; i < 11; i++) {\r\n            labelsColor.push('clr' + clrNum++);\r\n        }\r\n        this.setState({ ...this.state, labelsColor })\r\n    }\r\n\r\n    isLabelChoosen = (chosenLabel) => {\r\n        return chosenLabel === this.state.labelColor;\r\n    }\r\n\r\n    render() {\r\n        const { isDelete, labelsColor, labelName } = this.state;\r\n        const { labelsProps } = this.props;\r\n        return (\r\n            <div className=\"labels-board\">\r\n                {!isDelete && <div>\r\n                    <label className=\"edit-labels-label\">Name</label>\r\n                    <TextareaAutosize className=\"text-area-auto label-input\"\r\n                        value={labelName}\r\n                        aria-label=\"empty textarea\"\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleChange}\r\n                        autoFocus\r\n                    />\r\n                    <label className=\"edit-labels-label\">Select a color</label>\r\n                    <div className=\"color-plate\">\r\n                        {labelsColor.map(label => (\r\n                            <div className={`color-sqr pointer + ${label}`} key={label.id} onClick={() => this.labelChoose(label)} >\r\n                                {this.isLabelChoosen(label) && <DoneIcon />}\r\n                            </div>))}\r\n                        <p className=\"label-no-color\">No color</p>\r\n                    </div>\r\n                    <div className=\"edit-labels-actions flex space-between\">\r\n                        <div className=\"edit-labels-btn save pointer\" onClick={this.onSaveLabel}>Save</div>\r\n                        {labelsProps.label && <div className=\"edit-labels-btn delete pointer\" onClick={this.confirmDeleteLabel}>Delete</div>}\r\n                    </div>\r\n                </div>}\r\n                {isDelete && <div>\r\n                    <p className=\"edit-label-delete\">There is no undo. This will remove this label from all cards and destroy its history.</p>\r\n                    <div className=\"edit-labels-btn delete deleted pointer\" onClick={this.deleteLabel}>Delete</div>\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        labelsProps: state.boardReducer.labelsProps\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    setUpdateLabel\r\n\r\n}\r\n\r\nexport const EditLabel = connect(mapStateToProps, mapDispatchToProps)(_EditLabel)","import React from \"react\"\r\nimport { connect } from 'react-redux'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport { userService } from '../../services/user.service'\r\nimport { updateBoard } from '../../store/board.actions';\r\n\r\nclass _InvitePopover extends React.Component {\r\n    state = {\r\n        users: [],\r\n        inputTxt: '',\r\n        filteredUsers: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const users = await userService.getUsers()\r\n        const { loggedInUser } = this.props;\r\n        users.sort((u1, u2) => ((u1.fullname).localeCompare(u2.fullname)))\r\n        const filteredUsers = users.filter(user => user._id !== loggedInUser._id);\r\n        this.setState({ users, filteredUsers })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const filterRegex = new RegExp(this.state.inputTxt, 'i')\r\n        const filteredUsers = this.state.users.filter(user => filterRegex.test(user.fullname))\r\n        this.setState({ ...this.state, inputTxt: target.value, filteredUsers })\r\n    }\r\n\r\n    isMemberInBoard = (userId) => {\r\n        return this.props.board.boardMembers.some(member => member._id === userId)\r\n    }\r\n\r\n    addUser = (user) => {\r\n        if (this.isMemberInBoard(user._id)) return\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardMembers.push(user)\r\n        this.props.updateBoard(newBoard, `invited ${user.fullname} to the board`)\r\n        this.props.handleClose()\r\n    }\r\n\r\n    render() {\r\n        const { users, inputTxt, filteredUsers } = this.state;\r\n        if (!users.length) return <></>\r\n        return (\r\n            <div className=\"invite-users\">\r\n                <TextareaAutosize\r\n                    className=\"search-users text-area-auto\"\r\n                    placeholder=\"Search users\"\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={inputTxt}\r\n                />\r\n                {filteredUsers.map(user => (\r\n                    <button key={user._id} className=\"user-preview flex align-center space-between \" onClick={() => this.addUser(user)} >\r\n                        <span className=\"flex direction-row \">\r\n                            <Avatar className=\"avatar\" src={user.imgUrl} ><p>{user.initials}</p></Avatar>\r\n                            <span className=\"name flex align-center\">{user.fullname}</span>\r\n                        </span>\r\n                        {this.isMemberInBoard(user._id) && <span><DoneIcon /></span>}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n}\r\n\r\nexport const InvitePopover = connect(mapStateToProps, mapDispatchToProps)(_InvitePopover)","import React from \"react\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport { ActionList } from \"./DynamicPopover/ActionListPopOver\";\r\nimport { MembersPopover } from \"./DynamicPopover/MembersPopover\";\r\nimport { LabelsPopover } from \"./DynamicPopover/LabelsPopover\";\r\nimport { DatesPopover } from \"./DynamicPopover/DatesPopover\";\r\nimport { ChecklistPopover } from \"./DynamicPopover/ChecklistPopover\";\r\nimport { CoverPopover } from \"./DynamicPopover/CoverPopover\";\r\nimport { DynamicButton } from \"./DynamicCmps/DynamicButton\";\r\nimport { UserMenuPopover } from \"./DynamicPopover/UserMenuPopover\";\r\nimport { TemporaryDrawer } from \"../cmp/DroweMenu.jsx\";\r\nimport { AttachmentsPopover } from \"./DynamicPopover/AttachmentsPopover\";\r\nimport { DeleteCardPopover } from \"./DynamicPopover/DeleteCardPopover\";\r\nimport { MoveCopyCardPopover } from \"./DynamicPopover/MoveCopyCardPopover\";\r\nimport { UserBoardsPopover } from \"./DynamicPopover/UserBoardsPopover\";\r\nimport { NotifPopover } from \"./DynamicPopover/NotifPopover\";\r\nimport { IoChevronBackOutline } from \"react-icons/io5\";\r\nimport { EditLabel } from \"./DynamicPopover/EditLabel\";\r\nimport { InvitePopover } from \"./DynamicPopover/InvitePopover\";\r\n\r\nexport class DynamicPopover extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    isEditLabel: false,\r\n    newTitle: \"\",\r\n    isChangeTitle: false,\r\n    currLabel: \"\",\r\n    isSearch: false,\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    if (this.props.type === \"userBoards\" || this.props.type === \"starredBoards\")\r\n      this.props.onToggle();\r\n    this.setState({ anchorEl: null });\r\n    if (this.props.markReadNotif) this.props.markReadNotif();\r\n  };\r\n\r\n  handleDateChange = () => {\r\n    console.log(\"im in DynamicPopover.handleDateChange\");\r\n  };\r\n\r\n  changeTitle = (isChangeTitle, newTitle, currLabel = \"\") => {\r\n    if (newTitle === \"change cover\") {\r\n      var isSearch = true;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      newTitle,\r\n      isChangeTitle,\r\n      currLabel,\r\n      isSearch,\r\n    });\r\n  };\r\n\r\n  handleBack = () => {\r\n    if (this.props.titleModal === \"cover\") {\r\n      var isSearch = true;\r\n    }\r\n    this.setState({\r\n      ...this.state,\r\n      isChangeTitle: !this.state.isChangeTitle,\r\n      newTitle: this.props.titleModal,\r\n      isSearch,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { type, titleModal } = this.props;\r\n    const { anchorEl, isChangeTitle, newTitle, currLabel, isSearch } =\r\n      this.state;\r\n    const open = Boolean(anchorEl);\r\n    const dnmTitleModal = isChangeTitle ? newTitle : titleModal;\r\n    let id = open ? \"simple-popover\" : undefined;\r\n    const DynamicCmp = (props) => {\r\n      switch (props.type) {\r\n        case \"members\":\r\n        case \"add-members\":\r\n        case \"change members\":\r\n          return <MembersPopover {...props} />;\r\n        case \"list actions\":\r\n          return <ActionList {...props} />;\r\n        case \"labels\":\r\n        case \"edit labels\":\r\n          if (isChangeTitle) return <EditLabel {...props} />;\r\n        case \"add-labels\":\r\n          if (isChangeTitle) return <EditLabel {...props} />;\r\n          return <LabelsPopover {...props} />;\r\n        case \"labels-preview\":\r\n          if (isChangeTitle) return <EditLabel {...props} />;\r\n          return <LabelsPopover {...props} />;\r\n        case \"dates-edit\":\r\n        case \"edit-dates\":\r\n        case \"dates\":\r\n          return <DatesPopover {...props} />;\r\n        case \"attachments\":\r\n        case \"add-attachments\":\r\n          return <AttachmentsPopover {...props} />;\r\n        case \"cover\":\r\n        case \"change cover\":\r\n          return <CoverPopover {...props} />;\r\n        case \"checklist\":\r\n          return <ChecklistPopover {...props} />;\r\n        case \"boardMember\":\r\n        case \"userMenu\":\r\n          return <UserMenuPopover {...props} />;\r\n        case \"userBoards\":\r\n        case \"starredBoards\":\r\n          return (\r\n            <UserBoardsPopover {...props} handleClose={this.handleClose} />\r\n          );\r\n        case \"boardMenu\":\r\n          return <TemporaryDrawer {...props} />;\r\n        case \"delete-card\":\r\n          return <DeleteCardPopover {...props} />;\r\n        case \"move-card\":\r\n          return <MoveCopyCardPopover {...props} />;\r\n        case \"copy-card\":\r\n          return <MoveCopyCardPopover {...props} isCopy={true} />;\r\n        case \"newNotif\":\r\n        case \"noNotif\":\r\n          return <NotifPopover {...props} />;\r\n        case \"invite\":\r\n          return <InvitePopover {...props} />;\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <button onClick={this.handleClick}>\r\n          <DynamicButton type={type} {...this.props} />\r\n        </button>\r\n        <Popover\r\n          className={type}\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={this.handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          {/* OPEN MODAL */}\r\n          <div className=\"popover-header-title flex\">\r\n            {isChangeTitle && (\r\n              <span onClick={this.handleBack} className=\"back-icon pointer\">\r\n                <IoChevronBackOutline />\r\n              </span>\r\n            )}\r\n            <span>{dnmTitleModal}</span>\r\n            <button\r\n              className=\"close-popover\"\r\n              onClick={this.handleClose}\r\n            ></button>\r\n          </div>\r\n          <div className=\"popover-content-container\">\r\n            {\r\n              <DynamicCmp\r\n                type={type}\r\n                currLabel={currLabel}\r\n                isSearch={isSearch}\r\n                changeTitle={this.changeTitle}\r\n                {...this.props}\r\n                handleClose={this.handleClose}\r\n              />\r\n            }\r\n          </div>\r\n        </Popover>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Popover from \"@mui/material/Popover\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport { updateBoard } from \"../../store/board.actions.js\";\r\n\r\nclass _SingleMemberPopover extends React.Component {\r\n  state = {\r\n    anchorEl: null,\r\n    currListIdx: null,\r\n    currCardIdx: null,\r\n  };\r\n  componentDidMount() {\r\n    const { currListIdx, currCardIdx } = this.props;\r\n    this.setState({ currListIdx, currCardIdx });\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = (event) => {\r\n    this.setState({ anchorEl: null });\r\n    event.stopPropagation();\r\n  };\r\n\r\n  removeMember = (member) => (event) => {\r\n    event.stopPropagation();\r\n    const board = this.props.board;\r\n    const { currCard, loggedInUser } = this.props;\r\n    const memberIdx = currCard.cardMembers.findIndex(\r\n      (cardMember) => cardMember._id === member._id\r\n    );\r\n    currCard.cardMembers.splice(memberIdx, 1);\r\n    const action = loggedInUser._id === member._id ? \"Left\" : \"Removed\";\r\n    this.props.updateBoard(board, action, currCard, member.username);\r\n  };\r\n\r\n  render() {\r\n    const { member } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n    return (\r\n      <div className=\"single-member-popover\">\r\n        <span className=\"btn-photo-member\" onClick={this.handleClick}>\r\n          <Avatar className=\"card-details-avatar hover\" src={member.imgUrl}>\r\n            <p>{member.initials}</p>\r\n          </Avatar>\r\n        </span>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={this.handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          <div className=\"single-member-popover-header-title flex direction-row\">\r\n            <div className=\"single-member-title flex direction-row\">\r\n              <Avatar src={member.imgUrl} className=\"avatar\">\r\n                <p>{member.initials}</p>\r\n              </Avatar>\r\n              <div className=\"user-name-info\">\r\n                <h4 className=\"fullname\">{member.fullname}</h4>\r\n                <p className=\"username\">@{member.username}</p>\r\n              </div>\r\n            </div>\r\n            <button className=\"close-popover\" onClick={this.handleClose}>\r\n              X\r\n            </button>\r\n          </div>\r\n          <div className=\"popover-content-container\">\r\n            <div\r\n              className=\"remove-from-card pointer\"\r\n              onClick={this.removeMember(member)}\r\n            >\r\n              Remove from card\r\n            </div>\r\n          </div>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n    board: state.boardReducer.board,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\n\r\nexport const SingleMemberPopover = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_SingleMemberPopover);\r\n","import React from 'react'\r\nimport AvatarGroup from '@mui/material/AvatarGroup';\r\nimport { DynamicPopover } from '../DynamicPopover';\r\nimport { SingleMemberPopover } from '../DynamicPopover/SingleMemberPopover'\r\n\r\nexport function MembersList({ members, board, currListIdx, currCardIdx, isCardOpen, currCard }) {\r\n    return (\r\n        <div className=\"members-list flex direction-row\">\r\n            <AvatarGroup max={15} className=\"members-group\">\r\n                {members.map(member => {\r\n                    if (member.username === 'pandaguest') return\r\n                    return <SingleMemberPopover key={member._id} member={member}\r\n                        currListIdx={currListIdx} currCardIdx={currCardIdx} currCard={currCard} />\r\n                }\r\n                )}\r\n            </AvatarGroup>\r\n            {isCardOpen &&\r\n                <DynamicPopover type={'add-members'}\r\n                    titleModal={'Members'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { BsCheckBox } from 'react-icons/bs';\r\n\r\nexport function CardCheckPreview({ checklists }) {\r\n\r\n    function countTasks() {\r\n        const tasksDisplay = checklists.reduce((acc, checklist) => {\r\n            acc['taskCount'] += checklist.tasks.length\r\n            checklist.tasks.forEach(task => {\r\n                if (task.isDone) acc['taskCountDone']++\r\n            })\r\n            return acc;\r\n        }, { taskCount: 0, taskCountDone: 0 })\r\n        return tasksDisplay\r\n    }\r\n\r\n    const { taskCount, taskCountDone } = countTasks();\r\n    const isDoneLabel = taskCount === taskCountDone ? 'done' : '';\r\n    return (\r\n        <div className={`badge flex align-center ${isDoneLabel}`}>\r\n            <span className={`badge-icon checkbox flex align-center  ${isDoneLabel}`} ><BsCheckBox className=\"card-icon\"/></span>\r\n            <span className=\"card-txt\"> {taskCountDone + '/' + taskCount} </span>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {toggleLabels} from '../store/board.actions'\r\n\r\nclass _CardLabelsPreview extends React.Component {\r\n    onToggleLabel = (ev) => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.props.toggleLabels()\r\n    }\r\n\r\n    render() {\r\n        const { labelId, boardLabels } = this.props\r\n        const isOpen = this.props.isLabelOpen ? ' label-preview-open' : '';\r\n        const currLabel = boardLabels.find(label => label.id === labelId)\r\n        if(currLabel.color === 'clr11') return <> </>\r\n        return (\r\n            <div onClick={this.onToggleLabel} className={`${currLabel.color} label-card${isOpen}`}>\r\n                {isOpen && currLabel.title}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLabelOpen: state.boardReducer.isLabelOpen,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    toggleLabels\r\n}\r\n\r\nexport const CardLabelsPreview = connect(mapStateToProps, mapDispatchToProps)(_CardLabelsPreview)","import React from 'react';\r\nimport AccessTimeSharpIcon from '@mui/icons-material/AccessTimeSharp';\r\nimport { RiCheckboxBlankLine } from \"react-icons/ri\";\r\nimport { IoMdCheckboxOutline } from \"react-icons/io\";\r\nexport class CardDuDatePreview extends React.Component {\r\n\r\n\r\n    onToggleDone = (ev) => {\r\n        ev.stopPropagation();\r\n        ev.preventDefault();\r\n        const { card } = this.props;\r\n        card.dueDate.isDone = !card.dueDate.isDone;\r\n        this.props.updateBoard(this.props.board);\r\n    }\r\n\r\n    render() {\r\n        const { dueDate } = this.props;\r\n        const classDone = dueDate.isDone ? 'done' : '';\r\n        const overDue = !dueDate.isDone && dueDate.date < Date.now() ? 'overdue' : '';\r\n        return (\r\n            <div className={`badge due-date flex align-center ${classDone} ${overDue}`} onClick={this.onToggleDone}>\r\n                { !dueDate.isDone && <span className=\"check\"><RiCheckboxBlankLine />\r\n                </span>}\r\n                { dueDate.isDone && <span className=\"check\"> <IoMdCheckboxOutline /> </span>}\r\n                <span className=\"clock\"><AccessTimeSharpIcon /> </span>\r\n                <span className=\"date\">{new Date(dueDate.date).toString().substring(3, 10)}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { DynamicPopover } from './DynamicPopover';\r\nimport { BsArchive } from \"react-icons/bs\";\r\n\r\nexport function QuickCardActions({ board, currListIdx, currCardIdx, currCard, OnUpdateBoard, onArchive }) {\r\n\r\n    return (\r\n        <div className=\"quick-card-actions fade-in\">\r\n\r\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'edit labels'} title={'Edit labels'} titleModal={'Labels'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n            />\r\n            </span>\r\n\r\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'change members'} title={'Change members'} titleModal={'Members'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n            />\r\n            </span>\r\n\r\n            <span className=\"quick-card-actions-btn\"><DynamicPopover type={'change cover'} title={'Change cover'} titleModal={'Cover'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n            />\r\n            </span>\r\n\r\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'move-card'} titleModal={'Move Card'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n                currCard={currCard}\r\n            /></span>\r\n\r\n            <span className=\"quick-card-actions-btn\"> <DynamicPopover type={'copy-card'} titleModal={'Copy Card'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n                currCard={currCard}\r\n            /></span>\r\n\r\n            <span className=\"quick-card-actions-btn\"> <button onClick={onArchive}><BsArchive /> Archive</button></span>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/close-edit-card.56748bb7.svg\";","import { FaRegComment } from \"react-icons/fa\";\r\nimport { ImAttachment } from \"react-icons/im\";\r\n\r\nexport function CardCommAttachPreview({ type, cardCommAttach }) {\r\n    function countCommAttach() {\r\n        const countComAttach = cardCommAttach.reduce((acc, commAttach) => {\r\n            acc++\r\n            return acc;\r\n        }, 0)\r\n        return countComAttach\r\n    }\r\n    return (\r\n        <div className=\"badge flex align-center\">\r\n            <span className=\"badge-icon flex align-center\">\r\n                {type === 'comment' && <FaRegComment />}\r\n                {type === 'attachment' && < ImAttachment />}\r\n            </span>\r\n            <span className=\"card-txt\">{countCommAttach()}</span>\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from \"react\";\r\nimport { MembersList } from \"./CardDetails/MembersList\";\r\nimport { CardCheckPreview } from \"./CardCheckPreview.jsx\";\r\nimport { BsPencil } from \"react-icons/bs\";\r\nimport { GrTextAlignFull } from \"react-icons/gr\";\r\nimport { connect } from \"react-redux\";\r\nimport { TextareaAutosize } from \"@mui/material\";\r\nimport {\r\n  updateBoard,\r\n  loadListAndCard,\r\n  loadBoard,\r\n} from \"../store/board.actions.js\";\r\nimport { CardLabelsPreview } from \"./CardLabelsPreview.jsx\";\r\nimport { CardDuDatePreview } from \"./CardDuDatePreview.jsx\";\r\nimport { QuickCardActions } from \"./QuickCardActions.jsx\";\r\nimport close from \"../assets/imgs/close-edit-card.svg\";\r\nimport { CardCommAttachPreview } from \"./CardCommAttachPreview\";\r\n\r\nclass _QuickCardEditor extends React.Component {\r\n  state = {\r\n    cardTitle: \"\",\r\n    isEditTitle: false,\r\n    isEditMode: false,\r\n    rect: null,\r\n  };\r\n\r\n  toggleEditTitle = (ev) => {\r\n    if (ev) {\r\n      ev.stopPropagation();\r\n      ev.preventDefault();\r\n      var rect = ev.target.getBoundingClientRect();\r\n      rect.x = rect.x - 256;\r\n    }\r\n    this.props.onEditMode();\r\n    const { card } = this.props;\r\n    this.setState({\r\n      isEditMode: !this.state.isEditMode,\r\n      cardTitle: card.cardTitle,\r\n      rect,\r\n    });\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    if (ev.key === \"Enter\") {\r\n      ev.preventDefault();\r\n      this.onSaveCardTitle(this.state.cardTitle);\r\n      return;\r\n    }\r\n    const value = ev.target.value;\r\n    this.setState({ ...this.state, cardTitle: value });\r\n  };\r\n\r\n  onSaveCardTitle = () => {\r\n    const { cardTitle } = this.state;\r\n    if (!cardTitle) return;\r\n    const { board, card, updateBoard } = this.props;\r\n    card.cardTitle = cardTitle;\r\n    updateBoard(board);\r\n    this.toggleEditTitle();\r\n    this.props.onEditMode();\r\n  };\r\n\r\n  handleClose = (ev) => {\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n    this.setState({ ...this.state, isEditTitle: !this.state.isEditTitle });\r\n  };\r\n\r\n  onArchive = () => {\r\n    const { card, board, updateBoard } = this.props;\r\n    card.isArchived = true;\r\n    const action = `Archived card`;\r\n    updateBoard({ ...board }, action, card);\r\n    this.toggleEditTitle();\r\n  };\r\n\r\n  render() {\r\n    const { card, board, isDragging, currListIdx, currCardIdx, updateBoard } =\r\n      this.props;\r\n    const { isEditMode, cardTitle, rect } = this.state;\r\n    const draggingClass = isDragging ? \"dragged\" : \"not-dragged\";\r\n    const coverStyle = card.cardStyle.img ? \"img-cover\" : card.cardStyle.color;\r\n    const editClass = isEditMode ? \"quick-card-edit-preview\" : \"\";\r\n    const isLabels = card.cardLabelIds ? \"show-labels\" : \"\";\r\n    const isCover = card.cardStyle.isCover\r\n      ? { fullCover: \"full \" + coverStyle, fullTitle: \"full\" }\r\n      : { fullTitle: \"half\" };\r\n    return (\r\n      <React.Fragment>\r\n        {isEditMode && (\r\n          <div\r\n            className=\"screen-quick-card-edit\"\r\n            onClick={this.toggleEditTitle}\r\n          >\r\n            <img src={close} alt=\"close\" />\r\n          </div>\r\n        )}\r\n        <div\r\n          className={editClass}\r\n          style={isEditMode ? { left: `${rect.x}`, top: `${rect.y}` } : {}}\r\n        >\r\n          <div className={`card-preview-content pointer ${draggingClass}`}>\r\n            {card.cardStyle.id && (\r\n              <div\r\n                className={\"card-preview-header \" + coverStyle}\r\n                style={{ backgroundImage: `url(${card.cardStyle.img})` }}\r\n              ></div>\r\n            )}\r\n            <div className={\"card-preview-main-content \" + isCover.fullCover}>\r\n              {isCover.fullTitle === \"half\" && (\r\n                <div className={`list-card-labels  ${isLabels} flex`}>\r\n                  {\" \"}\r\n                  {card.cardLabelIds &&\r\n                    card.cardLabelIds.map((labelId) => (\r\n                      <CardLabelsPreview\r\n                        key={labelId}\r\n                        labelId={labelId}\r\n                        boardLabels={board.labels}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              )}\r\n              {!isEditMode && (\r\n                <span className={`card-preview-title  ${isCover.fullCover}`}>\r\n                  {card.cardTitle}\r\n                </span>\r\n              )}\r\n              {isEditMode && (\r\n                <TextareaAutosize\r\n                  className=\"quick-card-input\"\r\n                  value={cardTitle}\r\n                  aria-label=\"card title\"\r\n                  onChange={this.handleChange}\r\n                  onKeyPress={this.handleChange}\r\n                  style={{ height: `90px` }}\r\n                  onFocus={(ev) => ev.target.select()}\r\n                  autoFocus\r\n                />\r\n              )}\r\n              {isCover.fullTitle === \"half\" && (\r\n                <span className=\"card-preview-icon flex\">\r\n                  <div className=\"icons-preview flex wrap\">\r\n                    {card.dueDate.date && (\r\n                      <CardDuDatePreview\r\n                        dueDate={card.dueDate}\r\n                        board={board}\r\n                        card={card}\r\n                        updateBoard={updateBoard}\r\n                      />\r\n                    )}\r\n                    {card.description && (\r\n                      <div className=\"badge flex align-center\">\r\n                        <GrTextAlignFull />\r\n                      </div>\r\n                    )}\r\n                    {card.comments.length ? (\r\n                      <CardCommAttachPreview\r\n                        type={\"comment\"}\r\n                        cardCommAttach={card.comments}\r\n                      />\r\n                    ) : (\r\n                      <> </>\r\n                    )}\r\n                    {card.attachments.length ? (\r\n                      <CardCommAttachPreview\r\n                        type={\"attachment\"}\r\n                        cardCommAttach={card.attachments}\r\n                      />\r\n                    ) : (\r\n                      <> </>\r\n                    )}\r\n                    <div title=\"checklist\">\r\n                      {card.checklists.length ? (\r\n                        <CardCheckPreview checklists={card.checklists} />\r\n                      ) : (\r\n                        <> </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"badge-icon members flex\">\r\n                    {card.cardMembers && (\r\n                      <MembersList\r\n                        members={card.cardMembers}\r\n                        currCard={card}\r\n                        isCardOpen={false}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </span>\r\n              )}\r\n              {!isEditMode && !card.isArchived && (\r\n                <button\r\n                  className=\"quick-card-edit-btn\"\r\n                  onClick={this.toggleEditTitle}\r\n                >\r\n                  <BsPencil />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          {isEditMode && (\r\n            <button\r\n              className=\"save-quick-card-btn\"\r\n              onClick={this.onSaveCardTitle}\r\n            >\r\n              Save\r\n            </button>\r\n          )}\r\n          {isEditMode && (\r\n            <div>\r\n              <QuickCardActions\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n                currCard={card}\r\n                onArchive={this.onArchive}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n  loadListAndCard,\r\n  loadBoard,\r\n};\r\n\r\nexport const QuickCardEditor = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_QuickCardEditor);\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { QuickCardEditor } from \"./QuickCardEditor.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateBoard, loadListAndCard } from \"../store/board.actions.js\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass _CardPreview extends React.Component {\r\n  state = {\r\n    isEditMode: false,\r\n  };\r\n\r\n  handleDnd = () => {\r\n    console.log(\"is dragging\", this.props.draggingOver);\r\n  };\r\n\r\n  onEditMode = () => {\r\n    this.setState({ isEditMode: !this.state.isEditMode });\r\n  };\r\n\r\n  onSelectedCard = () => {\r\n    const { list, board, card } = this.props;\r\n    this.props.loadListAndCard(list, card);\r\n    if (this.state.isEditMode) return;\r\n    this.props.history.push(\r\n      `/boards/${board._id}/${list.listId}/${card.cardId}`\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { card, currCardIdx, currListIdx, list } = this.props;\r\n    if (card.isArchived) return <></>;\r\n    return (\r\n      <Draggable draggableId={card.cardId} index={currCardIdx}>\r\n        {(provided, snapshot) => (\r\n          <div\r\n            onClick={this.onSelectedCard}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <QuickCardEditor\r\n              list={list}\r\n              card={card}\r\n              currListIdx={currListIdx}\r\n              currCardIdx={currCardIdx}\r\n              onEditMode={this.onEditMode}\r\n              isDragging={snapshot.isDragging}\r\n            />\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n  loadListAndCard,\r\n};\r\nconst _CardPreviewWithRouter = withRouter(_CardPreview);\r\nexport const CardPreview = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_CardPreviewWithRouter);\r\n","import { CardPreview } from './CardPreview.jsx'\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nexport function CardList({ cards, list, onUpdateBoard, board, currListIdx }) {\r\n    if (!cards) return <> </>\r\n    return (\r\n        <Droppable droppableId={list.listId} type=\"card\">\r\n            {(provided, snapshot) => (\r\n                <section className=\"all-cards\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                        {cards.map((card, index) => (\r\n                            <CardPreview key={card.cardId} board={board} currListIdx={currListIdx} list={list} currCardIdx={index} card={card} onUpdateBoard={onUpdateBoard} />\r\n                        ))}\r\n                    {provided.placeholder}\r\n                </section>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../store/board.actions.js';\r\nimport { utilService } from '../services/util.service.js';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport close from '../assets/imgs/close.svg';\r\n\r\nexport class _AddCard extends React.Component {\r\n    state = {\r\n        cardTitle: \"\"\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            this.onAddCard();\r\n            return;\r\n        }\r\n        const value = ev.target.value;\r\n        this.setState({ cardTitle: value });\r\n    }\r\n\r\n    onAddCard = () => {\r\n        let cardTitle = this.state.cardTitle;\r\n        if (!cardTitle) {\r\n            this.props.onCloseAdding();\r\n            return;\r\n        }\r\n        const newCard = {\r\n            cardId: utilService.makeId(),\r\n            cardTitle,\r\n            isArchived: false,\r\n            description: \"\",\r\n            comments: [],\r\n            cardMembers: [],\r\n            cardLabelIds: [],\r\n            checklists: [],\r\n            createdAt: new Date(),\r\n            dueDate: {},\r\n            attachments: [],\r\n            cardStyle: {}\r\n        }\r\n        const { list, board } = this.props;\r\n        list.cards.push(newCard);\r\n        this.setState({ cardTitle: \"\" })\r\n        const action = `Added card`;\r\n        this.props.updateBoard(board, action, newCard);\r\n    }\r\n\r\n    render() {\r\n        const { cardTitle } = this.state;\r\n        return (\r\n            <div className=\"all-cards card-previre-content\">\r\n                <TextareaAutosize className=\"text-area-auto card-input\"\r\n                    value={cardTitle}\r\n                    placeholder=\"Enter a title for this card...\"\r\n                    aria-label=\"empty textarea\"\r\n                    onChange={this.handleChange}\r\n                    onKeyPress={this.handleChange}\r\n                    autoFocus\r\n                />\r\n                <div className=\"add-card-actions flex align-center\">\r\n                    <button onClick={this.onAddCard} className=\"add-card-btn\">Add card</button>\r\n                    <button className=\"flex\" onClick={this.props.onCloseAdding}><img src={close} alt=\"close\" /></button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n}\r\n\r\nexport const AddCard = connect(mapStateToProps, mapDispatchToProps)(_AddCard)","export default __webpack_public_path__ + \"static/media/plus.57788bd4.svg\";","import React from \"react\";\r\nimport { CardList } from \"./CardList.jsx\";\r\nimport { AddCard } from \"./AddCard\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { DynamicPopover } from \"./DynamicPopover.jsx\";\r\nimport { TextareaAutosize } from \"@mui/material\";\r\nimport plus from \"../assets/imgs/plus.svg\";\r\n\r\nexport class ListPreview extends React.Component {\r\n  state = {\r\n    isAdding: false,\r\n    listTitle: \"\",\r\n    isEditTitle: false,\r\n  };\r\n\r\n  toggleOnAdd = () => {\r\n    this.setState({ isAdding: !this.state.isAdding });\r\n  };\r\n\r\n  onCloseAdding = () => {\r\n    this.toggleOnAdd();\r\n  };\r\n\r\n  toggleEditTitle = () => {\r\n    const { list } = this.props;\r\n    this.setState({\r\n      isEditTitle: !this.state.isEditTitle,\r\n      listTitle: list.listTitle,\r\n    });\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    if (ev.key === \"Enter\") {\r\n      ev.preventDefault();\r\n      this.onSaveListTitle();\r\n    }\r\n    const value = ev.target.value;\r\n    this.setState({ listTitle: value });\r\n  };\r\n\r\n  onSaveListTitle = () => {\r\n    const { listTitle } = this.state;\r\n    if (!listTitle) return;\r\n    const { onUpdateBoard, board, currListIdx } = this.props;\r\n    board.lists[currListIdx].listTitle = listTitle;\r\n    onUpdateBoard(board);\r\n    this.toggleEditTitle();\r\n  };\r\n\r\n  render() {\r\n    const { list, onUpdateBoard, currListIdx, board } = this.props;\r\n    const { isAdding, isEditTitle, listTitle } = this.state;\r\n    return (\r\n      <Draggable draggableId={list.listId} index={currListIdx}>\r\n        {(provided) => (\r\n          <section\r\n            className=\"list-wrapper\"\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <div className=\"list-content flex direction-col\">\r\n              <div className=\"list-header flex\">\r\n                {!isEditTitle && (\r\n                  <h2 onClick={this.toggleEditTitle}>{list.listTitle}</h2>\r\n                )}\r\n                {isEditTitle && (\r\n                  <TextareaAutosize\r\n                    className=\"text-area-auto list-title-input\"\r\n                    value={listTitle}\r\n                    aria-label=\"empty textarea\"\r\n                    onChange={this.handleChange}\r\n                    onKeyPress={this.handleChange}\r\n                    onBlur={this.onSaveListTitle}\r\n                    onFocus={(ev) => {\r\n                      ev.target.select();\r\n                    }}\r\n                    autoFocus\r\n                  />\r\n                )}\r\n                <div className=\"list-header-menu-btn\">\r\n                  <DynamicPopover\r\n                    type={\"list actions\"}\r\n                    board={board}\r\n                    list={list}\r\n                    onUpdateBoard={onUpdateBoard}\r\n                    titleModal={\"List actions\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"list-cards fancy-scrollbar\">\r\n                <CardList\r\n                  key={list.listId}\r\n                  cards={list.cards}\r\n                  board={board}\r\n                  currListIdx={currListIdx}\r\n                  list={list}\r\n                  onUpdateBoard={onUpdateBoard}\r\n                />\r\n                {isAdding && (\r\n                  <AddCard\r\n                    list={list}\r\n                    onUpdateBoard={onUpdateBoard}\r\n                    onCloseAdding={this.onCloseAdding}\r\n                  />\r\n                )}\r\n              </div>\r\n              {!isAdding && (\r\n                <span\r\n                  className=\"add-card-container\"\r\n                  onClick={() => {\r\n                    this.toggleOnAdd();\r\n                  }}\r\n                >\r\n                  <img src={plus} alt=\"\" />\r\n                  Add a card\r\n                </span>\r\n              )}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import { ListPreview } from './ListPreview.jsx';\r\nimport { Droppable } from 'react-beautiful-dnd';\r\n\r\nexport function BoardList({ lists, onUpdateBoard, board }) {\r\n\r\n    return (\r\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n                <div className=\"all-lists flex\" {...provided.droppableProps} ref={provided.innerRef}>\r\n                    {lists.map((list, index) => (\r\n                        <ListPreview key={list.listId} board={board} list={list} currListIdx={index} onUpdateBoard={onUpdateBoard} />))}\r\n                        {provided.placeholder}\r\n                </div>\r\n            )}\r\n        </Droppable>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport AvatarGroup from '@mui/material/AvatarGroup';\r\nimport { DynamicPopover } from './DynamicPopover';\r\n\r\nfunction _MembersListBoard(props) {\r\n    const { members, board } = props\r\n    return (\r\n        <>\r\n            <AvatarGroup max={5} spacing={-4}>\r\n                {members.map(member => {\r\n                    if (member.username === 'pandaguest' && board.createdBy.username !== 'pandaguest') return\r\n                    return <span key={member._id} className=\"avatar-btn\">\r\n                        <Avatar src={member.imgUrl} key={member._id} >\r\n                            <p>{member.initials}</p>\r\n                        </Avatar>\r\n                        <DynamicPopover type={'boardMember'} titleModal={''} user={member} from=\"BoardHeader\" />\r\n                    </span>\r\n                })}\r\n            </AvatarGroup>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n    }\r\n}\r\n\r\nexport const MembersListBoard = connect(mapStateToProps)(_MembersListBoard)\r\n","import Divider from '@mui/material/Divider';\r\nimport { utilService } from '../../../services/util.service';\r\nimport { ShowMenu } from '../../ShowMenu';\r\nimport SearchSharpIcon from '@mui/icons-material/SearchSharp';\r\nimport { BsArchive } from \"react-icons/bs\";\r\n\r\nexport function MainBoardMenuContent({ board, changeMenu }) {\r\n    const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\r\n    return (\r\n        <>\r\n            <div className=\"board-actions\">\r\n                <button className=\"menu-action-btn\" onClick={() => changeMenu('Change Background', 'select-bg-type')}>\r\n                    <span className=\"change-bg-preview\" style={bgStyle}></span>\r\n                    Change background\r\n                </button>\r\n                <button className=\"menu-action-btn search flex align-center\" onClick={() => changeMenu('Search cards', 'search')}>\r\n                    <span className=\"search-cards-icon\"><SearchSharpIcon /></span>\r\n                    <span className=\"search-cards-txt\"> Search cards </span>\r\n                </button>\r\n                <button className=\"menu-action-btn archive\" onClick={() => changeMenu('Archived', 'archive')}>\r\n                    <span className=\"archive-icon\"><BsArchive /></span>\r\n                    <span className=\"archive-txt\">Archived items</span>\r\n                </button>\r\n            </div>\r\n            <Divider />\r\n            <div className=\"activities\">\r\n                <ShowMenu board={board} />\r\n            </div>\r\n        </>\r\n    )\r\n}","export function SelectBgType(props) {\r\n    // console.log('bg prps', props);\r\n    return (\r\n        <div className=\"select-bg flex\">\r\n            <div className=\"photos\" onClick={() => { props.changeMenu('Photos by Unsplash', 'photos') }}>\r\n                <img src=\"https://a.trellocdn.com/prgb/dist/images/photos-thumbnail@3x.8f9c1323c9c16601a9a4.jpg\" alt=\"Photos\" />\r\n                <p>Photos</p>\r\n            </div>\r\n            <div className=\"colors\" onClick={() => { props.changeMenu('Colors', 'colors') }}>\r\n                <img src=\"https://a.trellocdn.com/prgb/dist/images/colors@2x.ec32a2ed8dd8198b8ef0.jpg\" alt=\"Colors\" />\r\n                <p>Colors</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { connect } from 'react-redux'\r\nimport { updateBoard } from \"../../../store/board.actions\"\r\n\r\nexport function _ChooseBgColor(props) {\r\n    const colors = ['#0079bf', '#d29034', '#519839', '#b04632', '#89609e', '#cd5a91', '#4bbf6b', '#00aecc', '#838c91']\r\n\r\n    const changeBgColor = (color) => {\r\n        const newBoard = { ...props.board }\r\n        newBoard.boardStyle = color\r\n        props.updateBoard(newBoard, 'changed the board background')\r\n    }\r\n\r\n    return (\r\n        <div className=\"choose-bg-color flex wrap\">\r\n            {colors.map((color, idx) =>\r\n                (<div key={color} className={`bg-color bgclr${idx + 1}`} onClick={() => { changeBgColor(color) }}></div>))}\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction mapStateToProps() {\r\n    return {}\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n}\r\n\r\nexport const ChooseBgColor = connect(mapStateToProps, mapDispatchToProps)(_ChooseBgColor)","export default __webpack_public_path__ + \"static/media/bars-loader.ef2c6578.svg\";","import React from 'react'\r\nimport Loader from '../assets/imgs/bars-loader.svg'\r\n\r\nexport function Loading() {\r\n    return (\r\n            <div className=\"loader flex align-center justify-center\">\r\n                <img src={Loader} alt=\"loading...\" />\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { DebounceInput } from 'react-debounce-input';\r\nimport { BiSearch } from 'react-icons/bi'\r\nimport { unsplashService } from '../../../services/unsplash.service'\r\nimport { connect } from 'react-redux'\r\nimport { updateBoard, setSearchBg } from '../../../store/board.actions'\r\nimport { Loading } from '../../Loading'\r\n\r\nclass _ChooseBgImg extends React.Component {\r\n    state = {\r\n        imgs: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.getImgs()\r\n    }\r\n\r\n    handleChange = async (ev) => {\r\n        const value = ev.target.value\r\n        await this.props.setSearchBg(value)\r\n        this.getImgs()\r\n    }\r\n\r\n    getImgs = async () => {\r\n        const imgs = await unsplashService.getImgs(this.props.searchStr, 18)\r\n        this.setState({ imgs })\r\n    }\r\n\r\n    setBgImg = (imgIdx) => {\r\n        const img = this.state.imgs[imgIdx]\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardStyle = { full: img.full, small: img.small }\r\n        this.props.updateBoard(newBoard, 'changed the board background')\r\n    }\r\n\r\n    openLink = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        const { imgs } = this.state\r\n        if (!imgs || !imgs.length) return <Loading className=\"menu-load\" />\r\n        return (\r\n            <div className=\"choose-bg-img\">\r\n                <div className=\"search-photos flex align-center\">\r\n                    <BiSearch />\r\n                    <DebounceInput\r\n                        value={this.props.searchStr}\r\n                        minLength={2}\r\n                        debounceTimeout={400}\r\n                        onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"bg-img-list flex wrap\">\r\n                    {imgs.map((img, idx) => (\r\n                        <div key={img.id} className=\"bg-img\" style={{ backgroundImage: `url(${img.small})` }} onClick={() => this.setBgImg(idx)}>\r\n                            <a href={img.link} target=\"_blank\" onClick={this.openLink}>{img.name}</a>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        searchStr: state.boardReducer.searchBg\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    setSearchBg\r\n}\r\n\r\nexport const ChooseBgImg = connect(mapStateToProps, mapDispatchToProps)(_ChooseBgImg)","export default __webpack_public_path__ + \"static/media/checked.97ec8ba4.svg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard, loadListAndCard, loadBoard, setFilterBy } from '../store/board.actions.js';\r\nimport Divider from '@mui/material/Divider';\r\nimport { DebounceInput } from 'react-debounce-input';\r\nimport checked from '../assets/imgs/checked.svg';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nclass _SearchMenu extends React.Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            searchKey: '',\r\n            labels: [],\r\n            members: [],\r\n            dueDate: [],\r\n            isFilter: false\r\n        }\r\n    }\r\n\r\n    componentDidMount (){\r\n        this.setState({ filterBy: this.props.filterBy })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value;\r\n        const { filterBy } = this.props;\r\n        filterBy.searchKey = value;\r\n        filterBy.isFilter = true;\r\n        this.props.setFilterBy(filterBy, this.props.board._id);\r\n    }\r\n\r\n    onFilterBy = (type, id) => {\r\n        let filterType = this.props.filterBy[type];\r\n\r\n        const filterIdx = filterType.findIndex(filteryid => filteryid === id)\r\n        if (filterIdx !== -1) {\r\n            filterType.splice(filterIdx, 1);\r\n        } else {\r\n            filterType.push(id);\r\n        }\r\n        \r\n        this.setState({ filterBy: { ...this.state.filterBy, [type]: filterType, isFilter: true } }, () => {\r\n            this.props.setFilterBy(this.state.filterBy, this.props.board._id);\r\n        });\r\n    }\r\n\r\n    onToggleSearch = (type, id) => {\r\n        return this.props.filterBy[type].some(searchId => searchId === id)\r\n    }\r\n\r\n    render() {\r\n        const { board, filterBy } = this.props;\r\n        return (\r\n            <div className=\"search-cards\">\r\n                <DebounceInput\r\n                    minLength={2}\r\n                    debounceTimeout={2000}\r\n                    className=\"search-cards\"\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    forceNotifyByEnter={false}\r\n                    value={filterBy.searchKey}\r\n                />\r\n                <p>Search by term, label or member</p>\r\n\r\n                <Divider />\r\n                <div className=\"search-types\">\r\n                    <ul className=\"clean-list\">\r\n                        {board.labels.map(label => (\r\n                            <li className=\"labels pointer\" key={label.id} onClick={() => this.onFilterBy('labels', label.id)} >\r\n                                <div className=\"label-menu\">\r\n                                    <div className=\"label-list-item\">\r\n                                        <div className={`label-menu-color pointer ${label.color}`}>\r\n                                            <span >\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <span>\r\n                                        {label.title}\r\n                                    </span>\r\n                                    <span className=\"checked-icon labels\"> {this.onToggleSearch('labels',label.id) && <img src={checked} alt=\"checked\" />}</span>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <Divider />\r\n                    <div className=\"members-type\">\r\n                        <ul className=\"members-search clean-list\">\r\n                            {board.boardMembers.map(member => (\r\n                                <li className=\"members-list flex align-center pointer\" key={member._id} onClick={() => this.onFilterBy('members', member._id)} >\r\n                                    <div>\r\n                                        <Avatar alt={member.username} src={member.imgUrl} key={member._id} />\r\n                                    </div>\r\n                                    <span>{member.username}</span>\r\n                                    <span className=\"checked-icon members\"> {this.onToggleSearch('members',member._id) && <img src={checked} alt=\"checked\" />}</span>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser,\r\n        filterBy: state.boardReducer.filterBy,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoard,\r\n    loadListAndCard,\r\n    loadBoard,\r\n    setFilterBy\r\n}\r\n\r\nexport const SearchMenu = connect(mapStateToProps, mapDispatchToProps)(_SearchMenu)","import React from \"react\";\r\nimport { QuickCardEditor } from \"./QuickCardEditor.jsx\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateBoard } from \"../store/board.actions.js\";\r\n\r\nexport class _ArchiveItems extends React.Component {\r\n  state = {\r\n    searchKey: \"\",\r\n  };\r\n\r\n  handleChange = (ev) => {\r\n    const value = ev.target.value;\r\n    this.setState({ searchKey: value });\r\n  };\r\n\r\n  onFilterCards = () => {\r\n    const { board } = this.props;\r\n    const regex = new RegExp(this.state.searchKey, \"i\");\r\n    regex.test(board);\r\n  };\r\n  onSelectedCard = (list, card) => {\r\n    const { board, toggleMenu } = this.props;\r\n    toggleMenu();\r\n    this.props.history.push(\r\n      `/boards/${board._id}/${list.listId}/${card.cardId}`\r\n    );\r\n  };\r\n\r\n  onDeleteCard = (listIdx, cardIdx, card) => (ev) => {\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n    const { board, updateBoard, toggleMenu } = this.props;\r\n    toggleMenu();\r\n    board.lists[listIdx].cards.splice(cardIdx, 1);\r\n    updateBoard({ ...board }, \"Deleted card\", card.tilte);\r\n  };\r\n\r\n  onSendToBoard = (card) => (ev) => {\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n    const { board, updateBoard, toggleMenu } = this.props;\r\n    toggleMenu();\r\n    card.isArchived = false;\r\n    updateBoard({ ...board });\r\n  };\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    return (\r\n      <div>\r\n        {board.lists.map((list, listIdx) =>\r\n          list.cards.map(\r\n            (card, cardIdx) =>\r\n              card.isArchived && (\r\n                <div\r\n                  className=\"archived-list\"\r\n                  onClick={() => {\r\n                    this.onSelectedCard(list, card);\r\n                  }}\r\n                >\r\n                  <QuickCardEditor\r\n                    card={card}\r\n                    currListIdx={listIdx}\r\n                    currCardIdx={cardIdx}\r\n                  />\r\n                  <div className=\"archive-actions flex\">\r\n                    <p\r\n                      className=\"send-to-board pointer\"\r\n                      onClick={this.onSendToBoard(card)}\r\n                    >\r\n                      Send to board{\" \"}\r\n                    </p>\r\n                    <span className=\"space\">-</span>\r\n                    <p\r\n                      className=\"delete-card pointer\"\r\n                      onClick={this.onDeleteCard(listIdx, cardIdx, card)}\r\n                    >\r\n                      {\" \"}\r\n                      Delete\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\nconst _ArchiveItemsWithRouter = withRouter(_ArchiveItems);\r\nexport const ArchiveItems = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_ArchiveItemsWithRouter);\r\n","import React from 'react';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Button from '@mui/material/Button';\r\nimport Divider from '@mui/material/Divider';\r\nimport { IoChevronBackOutline } from 'react-icons/io5'\r\nimport close from '../assets/imgs/close.svg';\r\nimport { MainBoardMenuContent } from './DynamicPopover/BoardMenu/MainBoardMenuContent';\r\nimport { SelectBgType } from './DynamicPopover/BoardMenu/SelectBgType';\r\nimport { ChooseBgColor } from './DynamicPopover/BoardMenu/ChooseBgColor';\r\nimport { ChooseBgImg } from './DynamicPopover/BoardMenu/ChooseBgImg';\r\nimport { SearchMenu } from './SearchMenu';\r\nimport { ArchiveItems } from './ArchiveItems';\r\nimport { NotifPopover } from './DynamicPopover/NotifPopover';\r\n\r\nexport function DynamicBoardMenu({ board, toggleMenu, isMenuOpen, target, title, changeMenu, onFilterCards }) {\r\n\r\n    const DynamicCmp = (props) => {\r\n        switch (props.target) {\r\n            case 'main':\r\n                return <MainBoardMenuContent {...props} />\r\n            case 'select-bg-type':\r\n                return <SelectBgType {...props} />\r\n            case 'colors':\r\n                return <ChooseBgColor {...props} />\r\n            case 'photos':\r\n                return <ChooseBgImg {...props} />\r\n            case 'search':\r\n                return <SearchMenu {...props} />\r\n            case 'archive':\r\n                return <ArchiveItems {...props} />\r\n            case 'notifications':\r\n                return <NotifPopover {...props} />\r\n        }\r\n    }\r\n\r\n    const anchor = 'right';\r\n\r\n    return (\r\n        <div className=\"menu-visible\">\r\n            <React.Fragment key={anchor}>\r\n                <Button onClick={toggleMenu}>{anchor}</Button>\r\n                <Drawer\r\n                    anchor={anchor}\r\n                    open={isMenuOpen}\r\n                    hideBackdrop={true}\r\n                >\r\n                    <div className=\"menu-wrapper\">\r\n                        <div className=\"menu-screen\" onClick={toggleMenu}></div>\r\n                        <div className=\"board-menu-content\">\r\n                            <div className=\"board-menu-content-header flex\">\r\n                                <div className=\"title\"><h3>{title}</h3></div>\r\n                                <span className=\"exit-icon\" onClick={toggleMenu}>\r\n                                    <img src={close} alt=\"Close\" />\r\n                                </span>\r\n\r\n                                {(target !== 'main') &&\r\n                                    <span className=\"back-icon\" onClick={() => changeMenu('Menu', 'main')}>\r\n                                        <IoChevronBackOutline />\r\n                                    </span>}\r\n                            </div>\r\n                            <Divider />\r\n                            <div className=\"menu-content fancy-scrollbar\">\r\n                                <DynamicCmp target={target} board={board} changeMenu={changeMenu} toggleMenu={toggleMenu} onFilterCards={onFilterCards} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/close-filter.aedc814a.svg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiStar } from \"react-icons/fi\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport AutosizeInput from \"react-input-autosize\";\r\nimport { userService } from \"../services/user.service\";\r\nimport {\r\n  updateBoard,\r\n  setNotif,\r\n  setFilterBy,\r\n  addBoard,\r\n  setSearchBg,\r\n} from \"../store/board.actions\";\r\nimport { MembersListBoard } from \"./MembersListBoard\";\r\nimport { DynamicBoardMenu } from \"./DynamicBoardMenu\";\r\nimport EqualizerIcon from \"@mui/icons-material/Equalizer\";\r\nimport close from \"../assets/imgs/close-filter.svg\";\r\nimport { DynamicPopover } from \"./DynamicPopover\";\r\n\r\nclass _BoardHeader extends React.Component {\r\n  state = {\r\n    isEditTitle: false,\r\n    title: \"\",\r\n    isMenuOpen: false,\r\n    menuTitle: \"Menu\",\r\n    menuTarget: \"main\",\r\n    cardsCount: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ title: this.props.board.boardTitle });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.filterBy && prevProps.filterBy !== this.props.filterBy) {\r\n      this.onFilterCards();\r\n    }\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const value = ev.target.value;\r\n    this.setState({ title: value });\r\n  };\r\n\r\n  toggleChangeTitle = () => {\r\n    const { isEditTitle } = this.state;\r\n    this.setState({ isEditTitle: !isEditTitle });\r\n  };\r\n\r\n  saveBoardTitle = (ev) => {\r\n    ev.preventDefault();\r\n    let { title } = this.state;\r\n    const { board, updateBoard } = this.props;\r\n    if (!title) title = \"Untitled\";\r\n    if (title === board.boardTitle) {\r\n      this.toggleChangeTitle();\r\n      return;\r\n    }\r\n    board.boardTitle = title;\r\n    updateBoard(board, \"changed board title\");\r\n    this.toggleChangeTitle();\r\n  };\r\n\r\n  onToggleStarBoard = () => {\r\n    const { board, updateBoard, loggedInUser } = this.props;\r\n    const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id);\r\n    updateBoard(updatedBoard);\r\n  };\r\n\r\n  onFilterCards = () => {\r\n    const { board, filterBy } = this.props;\r\n    if (\r\n      !filterBy.members.length &&\r\n      !filterBy.labels.length &&\r\n      filterBy.searchKey === \"\"\r\n    ) {\r\n      this.setState({ ...this.state, cardsCount: 0 });\r\n      filterBy.isFilter = false;\r\n    } else {\r\n      this.setState({ ...this.state, cardsCount: board.cardsCount });\r\n    }\r\n  };\r\n\r\n  resetSearch = () => {\r\n    this.props.setFilterBy(\r\n      {\r\n        searchKey: \"\",\r\n        labels: [],\r\n        members: [],\r\n        isFilter: false,\r\n      },\r\n      this.props.board._id\r\n    );\r\n    this.setState({ ...this.state, cardsCount: 0 });\r\n  };\r\n\r\n  toggleMenu = () => {\r\n    const { isMenuOpen } = this.state;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      isMenuOpen: !isMenuOpen,\r\n      menuTitle: \"Menu\",\r\n      menuTarget: \"main\",\r\n    }));\r\n    this.props.setSearchBg(\"\");\r\n  };\r\n\r\n  changeMenu = (menuTitle, menuTarget) => {\r\n    this.setState((prevState) => ({ ...prevState, menuTitle, menuTarget }));\r\n  };\r\n\r\n  cloneTemplate = async () => {\r\n    const newBoard = { ...this.props.board };\r\n    delete newBoard._id;\r\n    newBoard.createdBy = this.props.loggedInUser;\r\n    newBoard.boardMembers.push(this.props.loggedInUser);\r\n    const addedBoard = await this.props.addBoard(newBoard);\r\n    this.props.goToTemplateClone(addedBoard._id);\r\n  };\r\n\r\n  render() {\r\n    const { board, loggedInUser, filterBy } = this.props;\r\n    const { title, isEditTitle, isMenuOpen, menuTarget, menuTitle } =\r\n      this.state;\r\n    const isStarred = board.createdBy\r\n      ? userService.isBoardStarred(board, loggedInUser._id)\r\n      : false;\r\n    return (\r\n      <div className=\"board-header flex align-center space-between wrap\">\r\n        <div className=\"header-left flex align-center\">\r\n          {!isEditTitle && (\r\n            <h1\r\n              className=\"board-btn header-title\"\r\n              onClick={this.toggleChangeTitle}\r\n            >\r\n              {board.boardTitle}\r\n            </h1>\r\n          )}\r\n          {isEditTitle && (\r\n            <form onSubmit={this.saveBoardTitle}>\r\n              <AutosizeInput\r\n                className=\"header-title-input\"\r\n                autoFocus\r\n                name=\"boardTitle\"\r\n                type=\"text\"\r\n                placeholder=\"Enter Title\"\r\n                value={title}\r\n                inputStyle={{ fontSize: 18, fontWeight: 700, color: \"#172b4d\" }}\r\n                onChange={this.handleChange}\r\n                onBlur={this.saveBoardTitle}\r\n              />\r\n            </form>\r\n          )}\r\n          <button\r\n            className={`board-btn star ${isStarred ? \" active\" : \"\"}`}\r\n            onClick={this.onToggleStarBoard}\r\n          >\r\n            <IconContext.Provider value={{ className: \"star-icon\" }}>\r\n              <FiStar />\r\n            </IconContext.Provider>\r\n          </button>\r\n          <span className=\"board-header-divider\"></span>\r\n          {!board.createdBy && (\r\n            <button className=\"board-btn template\" onClick={this.cloneTemplate}>\r\n              Create board from template\r\n            </button>\r\n          )}\r\n\r\n          <div className=\"board-members\">\r\n            <MembersListBoard members={board.boardMembers} />\r\n          </div>\r\n          <span className=\"board-btn invite\">\r\n            <DynamicPopover\r\n              type={\"invite\"}\r\n              title={\"Invite\"}\r\n              titleModal={\"Invite to board\"}\r\n              board={board}\r\n            />\r\n          </span>\r\n        </div>\r\n        <div className=\"header-right flex\">\r\n          {filterBy.isFilter && (\r\n            <div className=\"cards-count pointer flex align-center\">\r\n              <span onClick={this.openSearchOnMenu} className=\"number-count\">\r\n                {board.cardsCount} search results\r\n              </span>\r\n              <span onClick={this.resetSearch} className=\"close-filter-btn\">\r\n                <img src={close} alt=\"close\" />\r\n              </span>\r\n            </div>\r\n          )}\r\n          {board.createdBy ? (\r\n            <button\r\n              className=\"board-btn flex align-center\"\r\n              onClick={this.props.onOpenDashboard}\r\n            >\r\n              <span className=\"icon\">\r\n                <EqualizerIcon />\r\n              </span>\r\n              <span className=\"title\">Dashboard</span>\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {!isMenuOpen && (\r\n            <button\r\n              className=\"board-btn show-menu flex align-center\"\r\n              onClick={this.toggleMenu}\r\n            >\r\n              <span className=\"icon flex justify-center align-center\">\r\n                <BsThreeDots />{\" \"}\r\n              </span>\r\n              <span className=\"title\">Show menu</span>\r\n            </button>\r\n          )}\r\n          {isMenuOpen && (\r\n            <DynamicBoardMenu\r\n              board={board}\r\n              toggleMenu={this.toggleMenu}\r\n              onFilterCards={this.onFilterCards}\r\n              isMenuOpen={isMenuOpen}\r\n              target={menuTarget}\r\n              title={menuTitle}\r\n              changeMenu={this.changeMenu}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n    notifCount: state.boardReducer.notifCount,\r\n    filterBy: state.boardReducer.filterBy,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n  setNotif,\r\n  setFilterBy,\r\n  addBoard,\r\n  setSearchBg,\r\n};\r\n\r\nexport const BoardHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_BoardHeader);\r\n","export default __webpack_public_path__ + \"static/media/plus-white.c1dcc11a.svg\";","import React from 'react';\r\nimport { utilService } from '../services/util.service.js';\r\nimport { TextareaAutosize } from '@mui/material';\r\nimport { Button } from '@mui/material';\r\nimport close from '../assets/imgs/close.svg';\r\nimport plus from '../assets/imgs/icons/plus-white.svg';\r\n\r\nexport class AddList extends React.Component {\r\n    state = {\r\n        listTitle: \"\",\r\n        isAdding: false\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            this.onAddList();\r\n            return;\r\n        }\r\n        const value = ev.target.value;\r\n        this.setState({ listTitle: value });\r\n    }\r\n\r\n    onAddList = () => {\r\n        const listTitle = this.state.listTitle;\r\n        if (!listTitle) {\r\n            this.onCloseAdding()\r\n            return\r\n        }\r\n        const newList = {\r\n            listId: utilService.makeId(),\r\n            listTitle,\r\n            cards: []\r\n        }\r\n        const { board } = this.props;\r\n        board.lists.push(newList);\r\n        const action = `Added list ${listTitle}`\r\n        this.setState({ listTitle: \"\" });\r\n        this.props.onUpdateBoard(board, action);\r\n        this.onCloseAdding();\r\n    }\r\n\r\n    toggleOnAdd = () => {\r\n        this.setState({ isAdding: !this.state.isAdding })\r\n    }\r\n\r\n    onCloseAdding = () => {\r\n        this.toggleOnAdd();\r\n    }\r\n\r\n    render() {\r\n        const { listTitle, isAdding } = this.state;\r\n        const addMode = isAdding ? 'add-mode' : '';\r\n        return (\r\n            <div onClick={this.toggleOnAdd} className={'add-list board-btn flex align-center pointer ' + addMode}>\r\n               {isAdding &&  <form onSubmit={this.onAddList} >\r\n                    <TextareaAutosize className=\"text-area-auto list-input\"\r\n                        value={listTitle}\r\n                        aria-label=\"empty textarea\"\r\n                        placeholder=\"Enter list title\"\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleChange}\r\n                        onBlur={this.onAddList}\r\n                        autoFocus\r\n                    />\r\n                    <div className=\"add-list-actions flex align-center\">\r\n                        <Button className=\"add-list-btn\">Add List</Button>\r\n                        <span className=\"close-add-list-btn\" onClick={this.onCloseAdding}><img src={close} alt=\"close\" /></span>\r\n                    </div>\r\n                </form>}\r\n                {!isAdding && <span className=\"plus flex align-center\" onClick={() => {\r\n                    this.toggleOnAdd()\r\n                }}> <img src={plus} alt=\"plus\" /><span className=\"add-list-txt\">Add another list</span></span>}\r\n               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateBoard } from '../../store/board.actions.js';\r\nimport PersonOutlineOutlinedIcon from '@mui/icons-material/PersonOutlineOutlined';\r\n\r\nclass _JoinCard extends React.Component {\r\n\r\n    onJoinCard = (member) => {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        board.lists[currListIdx].cards[currCardIdx].cardMembers.push(member)\r\n        var action = `${member} Added to `\r\n        this.props.updateBoard(board, action, currCard)\r\n    }\r\n\r\n    isMemberOnCard = (currCard, memberId) => {\r\n        return (currCard.cardMembers.some(cardMember => cardMember._id === memberId))\r\n    }\r\n\r\n    render() {\r\n        const { currListIdx, currCardIdx, loggedInUser, board } = this.props\r\n        if (!board) return <></>\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        if (this.isMemberOnCard(currCard, loggedInUser._id)) return <></>\r\n        return (\r\n            <>\r\n                <h4>SUGGESTED</h4>\r\n                <div className=\"btn-container join-to-card\">\r\n                    <button onClick={() => this.onJoinCard(loggedInUser)}><PersonOutlineOutlinedIcon /> Join</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n}\r\n\r\nexport const JoinCard = connect(mapStateToProps, mapDispatchToProps)(_JoinCard)","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport RedoIcon from \"@mui/icons-material/Redo\";\r\nimport { updateBoard } from \"../../store/board.actions.js\";\r\nimport { DynamicPopover } from \"../DynamicPopover.jsx\";\r\n\r\nclass _ArchiveButtoms extends React.Component {\r\n  onToggleArchived = () => {\r\n    const { board, currCard } = this.props;\r\n    currCard.isArchived = !currCard.isArchived;\r\n    this.props.updateBoard(board, `Archived card ${currCard.title}`, currCard);\r\n  };\r\n\r\n  onDeleteCard = () => {\r\n    const { board, currListIdx, currCardIdx, currCard } = this.props;\r\n    board.lists[currListIdx].cards.splice(currCardIdx, 1);\r\n    this.props.updateBoard(board, `Deleted card`, currCard);\r\n    this.props.handleClose();\r\n  };\r\n\r\n  render() {\r\n    const { currCard } = this.props;\r\n    return (\r\n      <>\r\n        {!currCard.isArchived && (\r\n          <button onClick={this.onToggleArchived}>\r\n            <DeleteIcon />\r\n            Archive\r\n          </button>\r\n        )}\r\n        {currCard.isArchived && (\r\n          <>\r\n            <button onClick={this.onToggleArchived}>\r\n              <RedoIcon />\r\n              Send to board\r\n            </button>\r\n            <DynamicPopover\r\n              type={\"delete-card\"}\r\n              titleModal={\"Delete card?\"}\r\n              onDeleteCard={this.onDeleteCard}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardReducer.board,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateBoard,\r\n};\r\n\r\nexport const ArchiveButtoms = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_ArchiveButtoms);\r\n","import React from 'react';\r\nimport { DynamicPopover } from '../DynamicPopover';\r\nimport { JoinCard } from './JoinCard';\r\nimport { ArchiveButtoms } from './ArchiveButtoms';\r\n\r\nexport function CardSideBar({ board, currListIdx, currCardIdx, handleClose }) {\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n    return (\r\n        <div className=\"add-to-card\">\r\n\r\n            <JoinCard board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx} />\r\n\r\n            <h4>ADD TO CARD</h4>\r\n            <div className=\"btn-container\">\r\n\r\n                <DynamicPopover type={'members'} title={'Members'} titleModal={'Members'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n                <DynamicPopover type={'labels'} title={'Labels'} titleModal={'Labels'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n\r\n                <DynamicPopover type={'checklist'} title={'Checklist'} titleModal={'Add checklist'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n                <DynamicPopover type={'dates'} title={'Dates'} titleModal={'Dates'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n\r\n                <DynamicPopover type={'attachments'} title={'attachments'} titleModal={'Attachments'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n\r\n                {!currCard.cardStyle.id && <DynamicPopover type={'cover'} title={'Cover'} titleModal={'Cover'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />}\r\n\r\n\r\n                <h4>ACTIONS</h4>\r\n\r\n                <DynamicPopover type={'move-card'} titleModal={'Move Card'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                    currCard={currCard}\r\n                />\r\n\r\n                <DynamicPopover type={'copy-card'} titleModal={'Copy Card'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                    currCard={currCard}\r\n                />\r\n\r\n                <ArchiveButtoms currCard={currCard}\r\n                    currListIdx={currListIdx} currCardIdx={currCardIdx}\r\n                    handleClose={handleClose}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { DynamicPopover } from './DynamicPopover'\r\nexport function CardLabelsList({ cardLabelIds, boardLabels, board, currCardIdx, currListIdx, changeTitle }) {\r\n\r\n    return (\r\n        <div>\r\n            <h3>Labels</h3>\r\n            <div className=\"labels-list flex wrap\">\r\n                {cardLabelIds.map(labelId =>\r\n                    <DynamicPopover key={labelId} labelId={labelId} boardLabels={boardLabels} type={'labels-preview'} titleModal={'Labels'}\r\n                        board={board}\r\n                        currListIdx={currListIdx}\r\n                        currCardIdx={currCardIdx}\r\n                    />)}\r\n\r\n                <DynamicPopover className=\"add-labels\" type={'add-labels'} titleModal={'Labels'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport class CommentPreview extends React.Component {\r\n\r\n    render() {\r\n        const { comment } = this.props\r\n        return (\r\n            <div className=\"card-details-comment flex direction-row\">\r\n                <Avatar className=\"card-details-avatar\" alt={comment.byMember.fullname} src={comment.byMember.imgUrl}\r\n                    key={comment.byMember._id} />\r\n                <div className=\"comment-content\">\r\n                    <div className=\"flex direction-row\">\r\n                        <h4>{comment.byMember.fullname}</h4>\r\n                        <small> {new Date(comment.createdAt).toString().substring(0, 16)}</small>\r\n                    </div>\r\n                    <div className=\"comment-txt\">\r\n                        <p>{comment.txt}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { CommentPreview } from './CommentPreview'\r\n\r\nexport function CommentsList({ comments }) {\r\n    if (!comments) return <></>\r\n    return (\r\n        <div>\r\n            {comments.length && comments.map(comment => <CommentPreview comment={comment}\r\n                key={comment.id} />)}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ActivityPreview } from '../ActivityPreview'\r\n\r\nexport function ActivityList({ activities, currCard }) {\r\n    if (!activities) return <></>\r\n    activities = activities.filter(activity => activity.card.cardId === currCard.cardId)\r\n    return (\r\n        <div>\r\n            {activities.length ? activities.map(activity => <ActivityPreview activity={activity}\r\n                key={activity.id} />) : <></>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Loading } from '../Loading';\r\nimport { CommentsList } from './CommentsList';\r\nimport { ActivityList } from './ActivityList';\r\nimport { utilService } from '../../services/util.service';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\nimport FormatListBulletedIcon from '@mui/icons-material/FormatListBulleted';\r\n\r\nclass _CardActivities extends React.Component {\r\n    state = {\r\n        board: null,\r\n        currListIdx: null,\r\n        currCardIdx: null,\r\n        isEditing: false,\r\n        isDetails: false,\r\n        newActivityTxt: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        this.setState({ ...this.state, board, currListIdx, currCardIdx })\r\n        console.log('loggedin user: ', this.props.loggedInUser)\r\n    }\r\n\r\n    onToggleDetails = () => {\r\n        this.setState({ ...this.state, isDetails: !this.state.isDetails })\r\n    }\r\n    onToggleComment = () => {\r\n        this.setState({ ...this.state, isEditing: true })\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ ...this.state, newActivityTxt: target.value });\r\n    }\r\n    onSaveActivity = (ev) => {\r\n        ev.stopPropagation()\r\n        if (!this.state.newActivityTxt) return\r\n        const { currListIdx, currCardIdx } = this.state\r\n        const newBoard = { ...this.state.board }\r\n        newBoard.lists[currListIdx].cards[currCardIdx].comments.unshift({\r\n            byMember: this.props.loggedInUser,\r\n            createdAt: Date.now(),\r\n            id: utilService.makeId(),\r\n            txt: this.state.newActivityTxt\r\n        })\r\n\r\n        const currCard = newBoard.lists[currListIdx].cards[currCardIdx];\r\n        const action = `Added comment`\r\n        const txt = this.state.newActivityTxt.substring(0, 20)\r\n        this.props.OnUpdateBoard(newBoard, action, currCard, txt)\r\n        this.setState({ ...this.state, newActivityTxt: '', isEditing: false });\r\n    }\r\n\r\n    render() {\r\n        let { isEditing, isDetails, newActivityTxt, board, currListIdx, currCardIdx } = this.state\r\n        const { loggedInUser } = this.props\r\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\r\n        const comments = board.lists[currListIdx].cards[currCardIdx].comments\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        return (\r\n            <div className=\"card-activities\">\r\n                <div className=\"flex direction-row space-between \">\r\n                    <div className=\"flex direction-row\">\r\n                        <FormatListBulletedIcon className=\"card-details-icon\" />\r\n                        <h3 className=\"card-subtitle\">Activity</h3>\r\n                    </div>\r\n                    {!isDetails && <button className=\"show-hide hover\" onClick={this.onToggleDetails}>Show details</button>}\r\n                    {isDetails && <button className=\"show-hide hover\" onClick={this.onToggleDetails}>Hide details</button>}\r\n                </div>\r\n                <div className=\"add-comment-container flex direction-row \">\r\n                    <Avatar className=\"card-details-avatar\" alt={loggedInUser.username} src={loggedInUser.imgUrl} />\r\n                    <div className=\" comment-container flex direction-col\" onClick={this.onToggleComment}>\r\n                        <TextareaAutosize\r\n                            className=\"input-comment text-area-auto\"\r\n                            name='description'\r\n                            type='text'\r\n                            placeholder='Write a comment...'\r\n                            onChange={this.handleChange}\r\n                            value={newActivityTxt}\r\n                        />\r\n                        {isEditing && <button className=\"comment-save\" onClick={(ev) => this.onSaveActivity(ev)}>Save</button>}\r\n                    </div>\r\n                </div>\r\n\r\n                {currCard.comments.length ? <CommentsList comments={currCard.comments} /> : <></>}\r\n                {isDetails && <ActivityList currCard={currCard} activities={board.activities} />}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\n\r\nexport const CardActivities = connect(mapStateToProps)(_CardActivities)","import React from 'react';\r\nimport { Loading } from '../Loading';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\nimport CreditCardOutlinedIcon from '@mui/icons-material/CreditCardOutlined';\r\n\r\nexport class CardTitle extends React.Component {\r\n    state = {\r\n        board: null,\r\n        currListIdx: null,\r\n        currCardIdx: null,\r\n        isEdit: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        this.setState({ board, currListIdx, currCardIdx })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            this.onSaveTitle()\r\n        }\r\n        else {\r\n            const { currListIdx, currCardIdx } = this.state\r\n            const boardToUpdate = { ...this.state.board }\r\n            boardToUpdate.lists[currListIdx].cards[currCardIdx][ev.target.name] = ev.target.value\r\n            this.setState({ ...this.state, board: boardToUpdate })\r\n        }\r\n    }\r\n\r\n    onSaveTitle = () => {\r\n        this.props.OnUpdateBoard({ ...this.state.board })\r\n        this.onToggleEdit()\r\n    }\r\n\r\n    onToggleEdit = () => {\r\n        this.setState({ ...this.state, isEdit: !this.state.isEdit })\r\n    }\r\n\r\n    render() {\r\n        const { board, currListIdx, currCardIdx, isEdit } = this.state\r\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        return (<>\r\n            <div className=\"card-details-title flex direction-row\">\r\n\r\n                <CreditCardOutlinedIcon className=\"card-details-icon\" />\r\n                <div className=\"flex direction-col\">\r\n                    {isEdit && <TextareaAutosize\r\n                        className=\"text-area-auto\"\r\n                        name='cardTitle'\r\n                        type='text'\r\n                        placeholder='Enter title'\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleChange}\r\n                        value={currCard.cardTitle}\r\n                        onBlur={this.onSaveTitle}\r\n                        onFocus={(ev) => ev.target.select()}\r\n                        autoFocus\r\n                    />}\r\n                    {!isEdit && <h2 onClick={this.onToggleEdit}>{currCard.cardTitle}</h2>}\r\n                    <small>in list <span>{board.lists[currListIdx].listTitle}</span></small>\r\n                </div>\r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Loading } from '../Loading';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\r\n\r\nexport class CardDescription extends React.Component {\r\n    state = {\r\n        board: null,\r\n        currListIdx: null,\r\n        currCardIdx: null,\r\n        isEditing: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board, currListIdx, currCardIdx } = this.props\r\n        this.setState({ board, currListIdx, currCardIdx })\r\n    }\r\n    onToggleEditing = () => {\r\n        this.setState({ ...this.state, isEditing: true })\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const { currListIdx, currCardIdx } = this.state\r\n        const boardToUpdate = { ...this.state.board }\r\n        boardToUpdate.lists[currListIdx].cards[currCardIdx][target.name] = target.value\r\n        this.setState({ ...this.state, board: boardToUpdate })\r\n    }\r\n\r\n    onSaveDescription = (ev) => {\r\n        ev.preventDefault();\r\n        ev.stopPropagation()\r\n        this.props.OnUpdateBoard({ ...this.state.board })\r\n        this.setState({ ...this.state, isEditing: false })\r\n    }\r\n\r\n    render() {\r\n        const { board, currListIdx, currCardIdx, isEditing } = this.state\r\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        return (<div className=\"card-description\" >\r\n            <div className=\"flex direction-row align-center\">\r\n                <FormatAlignLeftIcon className=\"card-details-icon\" />\r\n                <h3 className=\"card-subtitle\">Description</h3>\r\n                {!isEditing && currCard.description\r\n                    && <button className=\"hover btn-edit\" onClick={this.onToggleEditing}>Edit</button>}\r\n            </div>\r\n            {isEditing &&\r\n                <div className=\"edit-container\" onClick={this.onToggleEditing}>\r\n                    <form onSubmit={this.onSaveDescription} >\r\n                        <TextareaAutosize\r\n                            name='description'\r\n                            className=\"text-area-auto desc-edit\"\r\n                            type='text'\r\n                            placeholder='Add a more detailed description...'\r\n                            onChange={this.handleChange}\r\n                            value={currCard.description}\r\n                            onBlur={this.onSaveDescription}\r\n                            onFocus={(ev) => ev.target.select()}\r\n                            autoFocus\r\n                        />\r\n                        <div className=\"flex direction-row align-center\" >\r\n                            {isEditing && <button className=\"save-desc\" onClick={this.onSaveDescription}>Save</button>}\r\n                            {isEditing && <button className=\"discard-desc\" onClick={this.onToggleEditing}>X</button>}\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            }\r\n            {!isEditing && currCard.description && <div className=\"desc-txt pointer\" onClick={this.onToggleEditing}>\r\n                <p >{currCard.description}</p>\r\n            </div>}\r\n            {!isEditing && !currCard.description\r\n                && <div className=\"desc-txt-placeholder hover\" onClick={this.onToggleEditing}>\r\n                    <p>Add a more detailed description...</p>\r\n                </div>}\r\n        </div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport function ProgressBar({ currChecklist }) {\r\n    const style = { width: getProgress() }\r\n    const precent = getProgress()\r\n    const classNameBar = (precent === '100%') ? 'progressing bar-done' : 'progressing'\r\n\r\n    function getProgress() {\r\n        if (!currChecklist.tasks.length) return '0%'\r\n        let doneCount = 0\r\n        currChecklist.tasks.forEach(task => {\r\n            if (task.isDone) doneCount++\r\n        })\r\n        return `${Math.floor(doneCount / (currChecklist.tasks.length) * 100)}%`\r\n    }\r\n\r\n    return (\r\n        <div className=\"progress-bar flex direction-row align-center\">\r\n            <p>{precent}</p>\r\n            <div className=\"progress-bar-container\">\r\n                <div className={classNameBar} style={style} ></div>\r\n            </div>\r\n        </div >\r\n    )\r\n}","import React from 'react';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nexport class TaskInput extends React.Component {\r\n    state = {\r\n        newTaskTxt: null,\r\n        isEdit: false\r\n    }\r\n    componentDidMount() {\r\n        const { task } = this.props\r\n        this.setState({ ...this.state, newTaskTxt: task.txt })\r\n    }\r\n    onToggleEdit = () => {\r\n        this.setState({ ...this.state, isEdit: !this.state.isEdit })\r\n        this.props.onEditMode()\r\n    }\r\n    onDiscardChanges = () => {\r\n        this.setState({ newTaskTxt: this.props.task.txt, isEdit: false })\r\n        this.props.onEditMode()\r\n    }\r\n    handleChange = ({ target }) => {\r\n        this.setState({ ...this.state, newTaskTxt: target.value })\r\n    }\r\n    onSaveTask = () => {\r\n        const { taskIdx, task } = this.props\r\n        this.props.onEditTask(taskIdx, task.isDone, this.state.newTaskTxt)\r\n        this.onToggleEdit()\r\n    }\r\n\r\n    render() {\r\n        const { newTaskTxt, isEdit } = this.state\r\n        const { task } = this.props\r\n        const classTask = (task.isDone) ? 'task-done' : ''\r\n\r\n        if (!newTaskTxt) return <></>\r\n        return (<div className=\"task-input\">\r\n            {!isEdit && <div className={classTask} onClick={this.onToggleEdit}>{task.txt}</div>}\r\n            {isEdit &&\r\n                <div className=\"task-update\">\r\n                    <TextareaAutosize\r\n                        className=\"text-area-auto task-edit\"\r\n                        type='text'\r\n                        value={newTaskTxt}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"flex direction-row align-center\">\r\n                        <button className=\"save-task\" onClick={this.onSaveTask}>Save</button>\r\n                        <button className=\"discard-task\" onClick={this.onDiscardChanges}>X</button>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>)\r\n    }\r\n}","import React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\nimport { TaskInput } from './TaskInput';\r\n\r\nexport class ChecklistTask extends React.Component {\r\n    state = {\r\n        isEdit: false\r\n    }\r\n    onEditMode = () => {\r\n        this.setState({ isEdit: !this.state.isEdit })\r\n    }\r\n    render() {\r\n        const { task, taskIdx, onDeleteTask, onEditTask } = this.props\r\n        const { isEdit } = this.state\r\n        return (\r\n            <div className=\"task-preview flex direction-row space-between\">\r\n                <div className=\"width-100 flex direction-row align-center\">\r\n                    <Checkbox className={`checkbox ${(isEdit) ? 'edit' : ''}`} checked={task.isDone}\r\n                        onChange={() => onEditTask(taskIdx, !task.isDone, task.txt)} />\r\n                    <TaskInput onEditMode={this.onEditMode} task={task} taskIdx={taskIdx} onEditTask={onEditTask} />\r\n                </div>\r\n                {!isEdit && <DeleteOutlineIcon className=\"delete-task pointer\" onClick={() => onDeleteTask(taskIdx)} />}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\r\n\r\nexport class AddNewTask extends React.Component {\r\n    state = {\r\n        txt: ''\r\n    }\r\n    onDiscardChanges = () => {\r\n        this.setState({ txt: '' })\r\n        this.props.onIsAddItem()\r\n    }\r\n    handleChange = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault()\r\n            this.onAddTask()\r\n        }\r\n        else this.setState({ txt: ev.target.value })\r\n    }\r\n    onAddTask = () => {\r\n        const newTaskTxt = this.state.txt\r\n        if (!newTaskTxt) return\r\n        this.props.onAddTask(newTaskTxt)\r\n        this.setState({ txt: '' })\r\n    }\r\n\r\n    render() {\r\n        const { txt } = this.state\r\n        return (\r\n            <div className=\"add-new-task\">\r\n                <TextareaAutosize\r\n                    type='text'\r\n                    className=\"text-area-auto task-edit\"\r\n                    value={txt}\r\n                    onChange={this.handleChange}\r\n                    onKeyPress={this.handleChange}\r\n                    autoFocus\r\n                />\r\n                <div>\r\n                    <button className=\"save-task\" onClick={this.onAddTask}>Add</button>\r\n                    <button className=\"discard-task\" onClick={this.onDiscardChanges}>X</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CheckBoxOutlinedIcon from '@mui/icons-material/CheckBoxOutlined';\r\nimport { updateBoard } from '../../store/board.actions.js';\r\nimport { utilService } from '../../services/util.service';\r\nimport { ProgressBar } from './ProgressBar'\r\nimport { ChecklistTask } from './ChecklistTask'\r\nimport { AddNewTask } from './AddNewTask';\r\n\r\nclass _ChecklistApp extends React.Component {\r\n    state = {\r\n        isAddItem: false,\r\n        currChecklist: null,\r\n        title: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { currCard, checklistIdx } = this.props\r\n        const currChecklist = currCard.checklists[checklistIdx]\r\n        const title = currChecklist.title\r\n        this.setState({ ...this.state, currChecklist, title })\r\n    }\r\n\r\n    onDeleteChecklist = () => {\r\n        const { board, currCard, checklistIdx } = this.props\r\n        currCard.checklists.splice(checklistIdx, 1)\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    onDeleteTask = (taskIdx) => {\r\n        const { currChecklist } = this.state\r\n        const { board, currCard } = this.props\r\n        currChecklist.tasks.splice(taskIdx, 1)\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    onEditTask = (taskIdx, updateIsDone, newTaskTxt) => {\r\n        const { currChecklist, title } = this.state\r\n        const { board, currCard } = this.props\r\n        currChecklist.tasks[taskIdx].isDone = updateIsDone\r\n        currChecklist.tasks[taskIdx].txt = newTaskTxt\r\n        if (currChecklist.tasks.every(task => task.isDone)) {\r\n            var action = `Completed checklist`\r\n            this.props.updateBoard(board, action, currCard, currChecklist.title)\r\n        } else {\r\n            this.props.updateBoard(board)\r\n        }\r\n    }\r\n\r\n    onAddTask = (txt) => {\r\n        const { currChecklist } = this.state\r\n        const { board, currCard } = this.props\r\n        currChecklist.tasks.push(\r\n            { id: utilService.makeId(), txt: txt, isDone: false }\r\n        )\r\n        this.props.updateBoard(board)\r\n    }\r\n\r\n    onIsAddItem = () => {\r\n        this.setState({ ...this.state, isAddItem: !this.state.isAddItem })\r\n    }\r\n\r\n    render() {\r\n        const { isAddItem, currChecklist } = this.state\r\n        const { board, checklistIdx } = this.props\r\n        if (!board || checklistIdx === null) return <></>\r\n        if (!currChecklist) return <></>\r\n        return (\r\n            <div className=\"checklist-app\">\r\n                <div className=\"flex direction-row space-between \">\r\n                    <div className=\"flex direction-row\">\r\n                        <CheckBoxOutlinedIcon className=\"card-details-icon\" />\r\n                        <h3 className=\"card-subtitle\">{currChecklist.title}</h3>\r\n                    </div>\r\n                    <button className=\"delete-checklist hover\" onClick={this.onDeleteChecklist}>Delete</button>\r\n                </div>\r\n                <ProgressBar currChecklist={currChecklist} />\r\n                {\r\n                    currChecklist.tasks.length ? currChecklist.tasks.map((task, taskIdx) =>\r\n                    (<ChecklistTask key={task.id} task={task} taskIdx={taskIdx}\r\n                        onEditTask={this.onEditTask} onDeleteTask={this.onDeleteTask} />))\r\n                        : <></>\r\n                }\r\n                {!isAddItem && <button className=\"add-item hover\" onClick={this.onIsAddItem}>Add an item</button>}\r\n                {isAddItem && <AddNewTask onIsAddItem={this.onIsAddItem} onAddTask={this.onAddTask} />}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    updateBoard\r\n}\r\n\r\nexport const ChecklistApp = connect(mapStateToProps, mapDispatchToProps)(_ChecklistApp)","import React from 'react'\r\nimport { ChecklistApp } from './ChecklistApp'\r\n\r\nexport function ChecklistListApp({ currCard }) {\r\n    const checklists = currCard.checklists\r\n    return (\r\n        <>\r\n            {checklists.map((checklist, checklistIdx) => <ChecklistApp key={checklist.checklistId}\r\n                currCard={currCard}\r\n                checklistIdx={checklistIdx}\r\n            />)}\r\n        </>\r\n    )\r\n}","import { DynamicPopover } from '../DynamicPopover';\r\nimport close from '../../assets/imgs/close.svg';\r\n\r\nexport function CardDetailsHeader({ board, currListIdx, currCardIdx, handleClose }) {\r\n    const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n    const coverMode = currCard.cardStyle.id ? 'cover-mode ' + currCard.cardStyle.color : '';\r\n    const coverStyle = currCard.cardStyle.img ? 'img-cover ' + 'cover-mode' : coverMode;\r\n\r\n    return (\r\n        <div className={coverStyle} style={{ backgroundImage: `url(${currCard.cardStyle.img})` }}>\r\n            <div className=\"close-window-btn pointer flex align-center justify-center\" onClick={handleClose}><img src={close} alt=\"close\" /></div>\r\n            {coverMode && <div className={`cover-menu pointer`} >\r\n                <DynamicPopover type={'cover'} title={'Cover'} titleModal={'Cover'}\r\n                    board={board}\r\n                    currListIdx={currListIdx}\r\n                    currCardIdx={currCardIdx}\r\n                />\r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\r\n\r\nexport class AttachmentPreview extends React.Component {\r\n    render() {\r\n        const { cardAttachment } = this.props\r\n        return (\r\n            <a href={cardAttachment.url} target=\"_blank\" className=\"card-attachment-preview flex direction-row\">\r\n                <img src={cardAttachment.url} />\r\n                <div>\r\n                    <div className=\"flex direction-row\">\r\n                        <h4 >{cardAttachment.fileName} </h4><OpenInNewIcon className=\"icon\" />\r\n                    </div>\r\n                    <div>\r\n                        <small>Added on {new Date(cardAttachment.createdAt).toString().substring(0, 16)} - </small>\r\n                        <small className=\"delete\" onClick={this.props.onDeleteAttach(cardAttachment.id)}> Delete </small>\r\n                    </div>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport AttachFileOutlinedIcon from '@mui/icons-material/AttachFileOutlined';\r\nimport { AttachmentPreview } from './AttachmentPreview'\r\nimport { DynamicPopover } from '../DynamicPopover';\r\n\r\nexport function CardAttachmentsList({ board, currListIdx, currCardIdx, OnUpdateBoard }) {\r\n    const cardAttachments = board.lists[currListIdx].cards[currCardIdx].attachments\r\n\r\n    const onDeleteAttach = (attachmentId) => (event) => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n        const attachIdx = cardAttachments.findIndex(attachment => attachment.id === attachmentId)\r\n        cardAttachments.splice(attachIdx, 1)\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        OnUpdateBoard(board, 'Removed attachment', currCard)\r\n    }\r\n\r\n    if (!cardAttachments.length) return <></>\r\n    return (\r\n        <div className=\"card-attachments\">\r\n            <div className=\"title flex direction-row align-center\">\r\n                <AttachFileOutlinedIcon className=\"card-details-icon\" />\r\n                <h3 className=\"card-subtitle\">Attachments</h3>\r\n            </div>\r\n            <div>\r\n                {cardAttachments.map(cardAttachment => <AttachmentPreview key={cardAttachment.id}\r\n                    cardAttachment={cardAttachment} onDeleteAttach={onDeleteAttach} />)}\r\n            </div>\r\n\r\n            <DynamicPopover type={'add-attachments'} title={'attachments'} titleModal={'Attachments'}\r\n                board={board}\r\n                currListIdx={currListIdx}\r\n                currCardIdx={currCardIdx}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}","import DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport function DisplayCardArchive() {\r\n\r\n    return (\r\n        <div className=\"display-card-archive flex direction-row align-center\">\r\n            <DeleteIcon /> <h3>This card is Archived.</h3>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoards, removeBoard, addBoard, updateBoard, loadListAndCard } from '../store/board.actions.js';\r\nimport { Loading } from '../cmp/Loading';\r\nimport { CardSideBar } from '../cmp/CardDetails/CardSideBar';\r\nimport { MembersList } from '../cmp/CardDetails/MembersList'\r\nimport { CardLabelsList } from '../cmp/CardLabelsList';\r\nimport { CardActivities } from '../cmp/CardDetails/CardActivities'\r\nimport { CardTitle } from '../cmp/CardDetails/CardTitle';\r\nimport { CardDescription } from '../cmp/CardDetails/CardDescription.jsx';\r\nimport { ChecklistListApp } from '../cmp/CardDetails/ChecklistListApp';\r\nimport { CardDetailsHeader } from '../cmp/CardDetails/CardDetailsHeader.jsx';\r\nimport { CardAttachmentsList } from '../cmp/CardDetails/CardAttachmentsList';\r\nimport { DynamicPopover } from '../cmp/DynamicPopover'\r\nimport { DisplayCardArchive } from '../cmp/CardDetails/DisplayCardArchive';\r\n\r\nclass _CardDetails extends React.Component {\r\n    state = {\r\n        currListIdx: null,\r\n        currCardIdx: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { board } = this.props;\r\n        this.getCurrCard(board)\r\n    }\r\n\r\n    getCurrCard = (board) => {\r\n        const listId = this.props.match.params.listId;\r\n        const cardId = this.props.match.params.cardId\r\n        const currListIdx = board.lists.findIndex(list => list.listId === listId)\r\n        const currCardIdx = board.lists[currListIdx].cards.findIndex(card => card.cardId === cardId)\r\n        this.setState({ ...this.state, currListIdx, currCardIdx })\r\n    }\r\n\r\n    onToggleDone = () => {\r\n        const { currListIdx, currCardIdx } = this.state\r\n        const board = this.props.board\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        currCard.dueDate.isDone = !currCard.dueDate.isDone\r\n        const action = currCard.dueDate.isDone\r\n            ? 'Marked the due date complete'\r\n            : 'Marked the due date incomplete'\r\n        this.props.updateBoard(board, action, currCard)\r\n\r\n    }\r\n\r\n    OnUpdateBoard = (board, action, currCard, txt) => {\r\n        this.props.updateBoard(board, action, currCard, txt)\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { board } = this.props;\r\n        this.props.history.push(`/boards/${board._id}`)\r\n    }\r\n\r\n    render() {\r\n        const { currListIdx, currCardIdx } = this.state\r\n        const { board } = this.props\r\n        if (!board || currCardIdx === null || currListIdx === null) return <Loading />\r\n        const currCard = board.lists[currListIdx].cards[currCardIdx]\r\n        return (\r\n            <div className=\"card-details-wrapper\" >\r\n                <div className=\"screen-card-details\" onClick={this.handleClose}></div>\r\n                <div className=\"card-details\" >\r\n                    <CardDetailsHeader board={board}\r\n                        currCard={currCard}\r\n                        currListIdx={currListIdx}\r\n                        currCardIdx={currCardIdx}\r\n                        handleClose={this.handleClose} />\r\n\r\n                    {currCard.isArchived ? <DisplayCardArchive /> : <></>}\r\n\r\n                    <div className=\"card-details-main-content\">\r\n\r\n                        <CardTitle\r\n                            board={board}\r\n                            currListIdx={currListIdx}\r\n                            currCardIdx={currCardIdx}\r\n                            OnUpdateBoard={this.OnUpdateBoard} />\r\n\r\n                        <div className=\"card-details-content\">\r\n                            <div className=\"card-details-main\">\r\n                                <div className=\"card-details-items flex direction-row items-flex-start wrap\">\r\n\r\n                                    {\r\n                                        currCard.cardMembers.length ? <div>\r\n                                            <h3>Members</h3>\r\n                                            <MembersList members={currCard.cardMembers} board={board}\r\n                                                currListIdx={currListIdx}\r\n                                                currCardIdx={currCardIdx} currCard={currCard} isCardOpen={true} />\r\n                                        </div> : ''\r\n                                    }\r\n\r\n                                    {\r\n                                        currCard.cardLabelIds.length ?\r\n                                            <CardLabelsList cardLabelIds={currCard.cardLabelIds} boardLabels={board.labels}\r\n                                                board={board}\r\n                                                currListIdx={currListIdx}\r\n                                                currCardIdx={currCardIdx} isCardOpen={true} /> : ''\r\n                                    }\r\n\r\n                                    {\r\n                                        currCard.dueDate.date &&\r\n                                        <div id=\"due-date-preview-card\">\r\n                                            <DynamicPopover type={'dates-edit'} title={'Dates'} titleModal={'Dates'}\r\n                                                board={board}\r\n                                                currListIdx={currListIdx}\r\n                                                currCardIdx={currCardIdx}\r\n                                                dueDate={currCard.dueDate}\r\n                                                onToggleDone={this.onToggleDone}\r\n                                            />\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                <CardDescription board={board}\r\n                                    currListIdx={currListIdx}\r\n                                    currCardIdx={currCardIdx}\r\n                                    OnUpdateBoard={this.OnUpdateBoard} />\r\n\r\n                                <CardAttachmentsList board={board}\r\n                                    currListIdx={currListIdx}\r\n                                    currCardIdx={currCardIdx}\r\n                                    OnUpdateBoard={this.OnUpdateBoard} />\r\n\r\n                                <ChecklistListApp currCard={currCard} />\r\n\r\n                                <CardActivities board={board}\r\n                                    currListIdx={currListIdx}\r\n                                    currCardIdx={currCardIdx}\r\n                                    OnUpdateBoard={this.OnUpdateBoard} />\r\n                            </div>\r\n                            <div className=\"card-details-sidebar\">\r\n                                <CardSideBar board={board}\r\n                                    currListIdx={currListIdx}\r\n                                    currCardIdx={currCardIdx}\r\n                                    handleClose={this.handleClose} />\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </div>\r\n            </div>)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        currCard: state.boardReducer.currCard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    removeBoard,\r\n    addBoard,\r\n    updateBoard,\r\n    loadListAndCard\r\n}\r\n\r\nexport const CardDetails = connect(mapStateToProps, mapDispatchToProps)(_CardDetails)","import React from 'react';\r\nimport { buildStyles, CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\n\r\nexport class ProgressbarDone extends React.Component {\r\n\r\n    get getTasksCount() {\r\n        const { board } = this.props\r\n        let tasksCount = 0\r\n        board.lists.forEach(list => {\r\n            tasksCount += list.cards.length\r\n        })\r\n        return tasksCount\r\n    }\r\n\r\n    get getOverdueCount() {\r\n        const { board } = this.props\r\n        let overdueCount = 0\r\n        let doneCount = 0\r\n        board.lists.forEach(list => {\r\n            list.cards.forEach(card => {\r\n                if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now()))\r\n                    overdueCount++\r\n                else if (card.dueDate && card.dueDate.isDone)\r\n                    doneCount++\r\n            })\r\n        })\r\n        return { overdueCount, doneCount }\r\n    }\r\n\r\n    get percentageDone() {\r\n        return (this.getOverdueCount.doneCount / this.getTasksCount) * 100\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progress-bar-done\" >\r\n                <h1>Done Tasks</h1>\r\n                <div className=\"progress-bar\">\r\n                    <CircularProgressbarWithChildren\r\n                        className=\"circularProgressbar\"\r\n                        value={this.percentageDone}\r\n                        styles={buildStyles({\r\n                            pathColor: '#61bd4fb1',\r\n                            trailColor: \"#ffffffee\",\r\n                        })}\r\n                    >\r\n                        <div className=\"text-done\">\r\n                            {this.percentageDone.toFixed()}% Done\r\n                        </div>\r\n                    </CircularProgressbarWithChildren>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\n\r\nexport class PieTasksPerLabel extends React.Component {\r\n\r\n    get mapTasksPerLabel() {\r\n        const { board } = this.props\r\n        let mapTasksPerLabel = board.labels.map((label, idx) => (\r\n            {\r\n                label: label.title ? label.title : `label${idx + 1} (no title)`,\r\n                id: label.id,\r\n                tasks: 0\r\n            }\r\n        ))\r\n\r\n        board.lists.forEach(list => {\r\n            mapTasksPerLabel.forEach(taskPerLabel => {\r\n                list.cards.forEach(card => {\r\n                    if (card.cardLabelIds.some(labelId => labelId === taskPerLabel.id))\r\n                        taskPerLabel.tasks++\r\n                })\r\n\r\n            })\r\n        })\r\n        mapTasksPerLabel = mapTasksPerLabel.filter(taskPerLabel => taskPerLabel.tasks !== 0)\r\n        return mapTasksPerLabel\r\n    }\r\n\r\n    get getPieData() {\r\n        const mapTasksPerLabel = this.mapTasksPerLabel\r\n        return {\r\n            labels: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.label),\r\n            datasets: [\r\n                {\r\n                    label: '# of Votes', // WHAT IS IT?\r\n                    data: mapTasksPerLabel.map(taskPerLabel => taskPerLabel.tasks),\r\n                    backgroundColor: [\r\n                        '#61bd4fb1',\r\n                        '#f2d600b1',\r\n                        '#ff9f1ab1',\r\n                        '#eb5a46b1',\r\n                        '#c377e0b1',\r\n                        '#5ba4cfb1',\r\n                        '#51e898b1',\r\n                        '#2acce5b1',\r\n                        '#ff8ed4b1'\r\n                    ],\r\n                    borderColor: [\r\n                        '#61bd4f',\r\n                        '#f2d600',\r\n                        '#ff9f1a',\r\n                        '#eb5a46',\r\n                        '#c377e0',\r\n                        '#5ba4cf',\r\n                        '#51e898',\r\n                        '#2acce5',\r\n                        '#ff8ed4'\r\n                    ],\r\n                    borderWidth: .5,\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.getPieData\r\n        if (!data.datasets[0].data.length) return (\r\n            <div className=\"pie-task-per-label no-result\">\r\n                <h1>Tasks per label</h1>\r\n                Sorry, there is no tasks <br />\r\n                tagged to any labels...\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"pie-task-per-label\">\r\n                <h1>Tasks per label</h1>\r\n                <Pie data={data} height={10} width={10} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport class BarTaskPerMember extends React.Component {\r\n\r\n    get mapTasksPerMember() {\r\n        const { board } = this.props\r\n        const membersMinusGuest = board.boardMembers.filter(member => member.username !== 'pandaguest')\r\n        let tasksPerMembers = membersMinusGuest.map(member => ({ fullname: member.fullname, tasks: 0 }))\r\n\r\n        board.lists.forEach(list => {\r\n            tasksPerMembers.forEach(member => {\r\n                list.cards.forEach(card => {\r\n                    if (card.cardMembers.some(cardMember => cardMember.fullname === member.fullname))\r\n                        member.tasks++\r\n                })\r\n            })\r\n        })\r\n        return tasksPerMembers\r\n    }\r\n\r\n    get getPieData() {\r\n        const mapTasksPerMember = this.mapTasksPerMember\r\n        return {\r\n            labels: mapTasksPerMember.map(taskPerMember => taskPerMember.fullname),\r\n            datasets: [\r\n                {\r\n                    label: 'Tasks',\r\n                    data: mapTasksPerMember.map(taskPerMember => taskPerMember.tasks),\r\n                    backgroundColor: [\r\n                        '#45cbb2',\r\n                        '#0079bf'\r\n                    ],\r\n                    borderColor: [\r\n                        '#45cbb2',\r\n                        '#0079bf'\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const options = {\r\n            indexAxis: 'y',\r\n            maintainAspectRatio: false,\r\n            responsive: true,\r\n            scales: {\r\n                x: {\r\n                    ticks: {\r\n                        stepSize: 1\r\n                    }\r\n                }\r\n            },\r\n            plugins: {\r\n                legend: {\r\n                    display: false,\r\n                },\r\n            },\r\n        };\r\n        const data = this.getPieData\r\n        console.log('data', data)\r\n        if (data.datasets[0].data.length < 2) return (\r\n            <div className=\"bar-task-per-member no-result\">\r\n                <h1>Tasks per member</h1>\r\n                Sorry, not enough data<br />\r\n                to analyze...\r\n            </div>\r\n        )\r\n\r\n\r\n        return (\r\n            <div className=\"bar-task-per-member\">\r\n                <h1>Tasks per member</h1>\r\n                <Bar height={350} width={200}\r\n                    data={data} options={options} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nexport class BarTaskPerList extends React.Component {\r\n\r\n    get getMapTasksPerList() {\r\n        const { board } = this.props\r\n        const tasksPerList = []\r\n        board.lists.forEach(list => {\r\n            tasksPerList.push({ list: list.listTitle, tasks: list.cards.length })\r\n        })\r\n        return tasksPerList\r\n    }\r\n\r\n    get getBarData() {\r\n        const mapTasksPerList = this.getMapTasksPerList\r\n        return {\r\n            labels: mapTasksPerList.map(taskPerList => taskPerList.list),\r\n            datasets: [\r\n                {\r\n                    label: 'Tasks',\r\n                    data: mapTasksPerList.map(taskPerList => taskPerList.tasks),\r\n                    backgroundColor: [\r\n                        '#45cbb2',\r\n                        '#0079bf'\r\n                    ],\r\n                    borderColor: [\r\n                        '#45cbb2',\r\n                        '#0079bf'\r\n                    ],\r\n                    borderWidth: 1,\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.getBarData\r\n        return (\r\n            <div className=\"bar-task-per-list\">\r\n                <h1>Tasks per list</h1>\r\n                <Bar data={data}\r\n                    height={200}\r\n                    width={350}\r\n                    options={{\r\n                        scales: {\r\n                            y: {\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                }\r\n                            }\r\n                        },\r\n                        legend: {\r\n                            display: false,\r\n                        },\r\n                        plugins: {\r\n                            legend: {\r\n                                display: false,\r\n                            },\r\n                        },\r\n                    }} />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport PersonOutlineOutlinedIcon from \"@mui/icons-material/PersonOutlineOutlined\";\r\nimport FormatListBulletedIcon from \"@mui/icons-material/FormatListBulleted\";\r\nimport FolderOpenOutlinedIcon from \"@mui/icons-material/FolderOpenOutlined\";\r\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\r\n\r\nexport class DashboardTitle extends React.Component {\r\n  get getTasksCount() {\r\n    const { board } = this.props;\r\n    let tasksCount = 0;\r\n    board.lists.forEach((list) => {\r\n      tasksCount += list.cards.length;\r\n    });\r\n    return tasksCount;\r\n  }\r\n\r\n  get getOverdueCount() {\r\n    const { board } = this.props;\r\n    let overdueCount = 0;\r\n    board.lists.forEach((list) => {\r\n      list.cards.forEach((card) => {\r\n        if (\r\n          card.dueDate &&\r\n          !card.dueDate.isDone &&\r\n          card.dueDate.date < Date.now()\r\n        )\r\n          overdueCount++;\r\n      });\r\n    });\r\n    return overdueCount;\r\n  }\r\n\r\n  get percentage() {\r\n    return (this.getOverdueCount / this.getTasksCount) * 100;\r\n  }\r\n\r\n  render() {\r\n    const { board } = this.props;\r\n    return (\r\n      <div className=\"dashboard-title\">\r\n        <h1 className=\"title flex align-center justify-center\">\r\n          <FolderOpenOutlinedIcon />\r\n          {board.boardTitle}\r\n        </h1>\r\n        <ul className=\"dashboard-stats clean-list\">\r\n          <li>\r\n            <h2>\r\n              <FormatListBulletedIcon />\r\n              {this.getTasksCount} Tasks\r\n            </h2>\r\n          </li>\r\n          <li>\r\n            <h2>\r\n              <PersonOutlineOutlinedIcon />\r\n              {board.boardMembers.length} Members\r\n            </h2>\r\n          </li>\r\n          <li>\r\n            <h2>\r\n              <ErrorOutlineIcon />\r\n              {this.getOverdueCount} Overdue\r\n            </h2>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Scatter } from 'react-chartjs-2';\r\n\r\nexport class LineTasksPerDate extends React.Component {\r\n\r\n    get getMapTasksOverTime() {\r\n        const { board } = this.props\r\n        const mainColor = '#45cbb2'\r\n        const overdueColor = '#eb5a46';\r\n        let mapTasksOverTime = {}\r\n\r\n        board.lists.forEach(list => {\r\n            list.cards.forEach(card => {\r\n                if (card.dueDate.date) {\r\n                    if (mapTasksOverTime[card.dueDate.date]) {\r\n                        mapTasksOverTime[card.dueDate.date].count++\r\n                    }\r\n                    else {\r\n                        mapTasksOverTime[card.dueDate.date] = { count: 1, color: mainColor }\r\n                    }\r\n                    if (card.dueDate && !card.dueDate.isDone && (card.dueDate.date < Date.now())) {\r\n                        mapTasksOverTime[card.dueDate.date].color = overdueColor\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        mapTasksOverTime = Object.entries(mapTasksOverTime).sort((a, b) => a[0].localeCompare(b[0]));\r\n        const data = mapTasksOverTime.map(task => ({ x: task[0], y: task[1].count }))\r\n        const background = mapTasksOverTime.map(task => task[1].color)\r\n        return { data, background }\r\n    }\r\n\r\n    render() {\r\n        const mapTasksOverTime = this.getMapTasksOverTime\r\n        if (!mapTasksOverTime.data.length) return (\r\n            <div className=\"line-tasks-over-time no-result\">\r\n                <h1>Tasks over time</h1>\r\n                Sorry, not enough data to analyze.. <br />\r\n                try add more tasks\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <div className=\"line-tasks-over-time\">\r\n                <h1>Tasks per date</h1>\r\n                <Scatter\r\n                    height={200}\r\n                    width={300}\r\n                    data={{\r\n                        datasets: [{\r\n                            data: mapTasksOverTime.data,\r\n                            backgroundColor: mapTasksOverTime.background,\r\n                            borderColor: 'rgb(75, 192, 192)',\r\n                            tension: 0.5,\r\n                            borderWidth: 1.5,\r\n                            showLine: true,\r\n                            pointRadius: 6,\r\n                        }],\r\n                    }}\r\n                    options={{\r\n                        scales: {\r\n                            x: {\r\n                                ticks: {\r\n                                    callback: function (value, index, values) {\r\n                                        return new Date(value).toString().substring(4, 11);\r\n                                    }\r\n                                }\r\n                            },\r\n                            y: {\r\n                                beginAtZero: true,\r\n                                ticks: {\r\n                                    stepSize: 1\r\n                                },\r\n                            }\r\n                        },\r\n                        plugins: {\r\n                            tooltip: {\r\n                                callbacks: {\r\n                                    label: () => 'Task'\r\n                                }\r\n                            }\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoard } from '../store/board.actions.js';\r\nimport { ProgressbarDone } from '../cmp/DashBoard/ProgressbarDone';\r\nimport { PieTasksPerLabel } from '../cmp/DashBoard/PieTasksPerLabel';\r\nimport { BarTaskPerMember } from '../cmp/DashBoard/BarTaskPerMember.jsx';\r\nimport { BarTaskPerList } from '../cmp/DashBoard/BarTaskPerList.jsx';\r\nimport { DashboardTitle } from '../cmp/DashBoard/DashboardTitle';\r\nimport { LineTasksPerDate } from '../cmp/DashBoard/LineTasksPerDate.jsx';\r\nimport { defaults } from 'react-chartjs-2';\r\nimport close from '../assets/imgs/close.svg';\r\n\r\nclass _Dashboard extends React.Component {\r\n\r\n    componentDidMount() {\r\n        defaults.font.size = 16\r\n        defaults.color = '#fff'\r\n        defaults.plugins.legend.display = false\r\n    }\r\n\r\n    goBack = () => {\r\n        const { board } = this.props\r\n        this.props.history.push(`/boards/${board._id}`);\r\n    }\r\n    render() {\r\n        const { board } = this.props\r\n        const allCards = board.lists.filter(list => list.cards.length !== 0)\r\n        if (!board.lists.length || !allCards.length) return (\r\n            <div className=\"dashboard-wrapper\" >\r\n                <div className=\"screen-dashboard\"></div>\r\n                <section className=\"dashboard\">\r\n                    <div className=\"close-window-btn pointer flex align-center justify-center\" onClick={this.goBack}><img src={close} alt=\"close\" /></div>\r\n                    <h1 className=\"no-data\">\r\n                        No data to show... <br />Try adding tasks to your board\r\n                    </h1>\r\n                </section>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"dashboard-wrapper\" >\r\n                <div className=\"screen-dashboard\"></div>\r\n                <section className=\"dashboard\">\r\n                    <div className=\"close-window-btn pointer flex align-center justify-center\" onClick={this.goBack}><img src={close} alt=\"close\" /></div>\r\n                    <DashboardTitle board={board} />\r\n                    <div className=\"charts-container\">\r\n                        <BarTaskPerMember board={board} />\r\n                        <PieTasksPerLabel board={board} />\r\n                        <ProgressbarDone board={board} />\r\n                        <LineTasksPerDate board={board} />\r\n                        <BarTaskPerList board={board} />\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n}\r\n\r\nexport const Dashboard = connect(mapStateToProps, mapDispatchToProps)(_Dashboard)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { loadBoards, loadBoard, removeBoard, updateBoard, toggleLabels, setNotif } from '../store/board.actions.js';\r\nimport { loginAsGuest } from '../store/user.actions.js';\r\nimport { BoardList } from '../cmp/BoardList.jsx';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { BoardHeader } from '../cmp/BoardHeader.jsx';\r\nimport { AddList } from '../cmp/AddList.jsx';\r\nimport { Route } from 'react-router-dom';\r\nimport { CardDetails } from '../pages/CardDetails.jsx';\r\nimport { Dashboard } from './Dashboard'\r\nimport { Loading } from '../cmp/Loading.jsx';\r\nimport { socketService } from '../services/socket.service';\r\nimport { utilService } from '../services/util.service';\r\n\r\nclass _BoardApp extends React.Component {\r\n    state = {\r\n        isMenuOpen: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.loggedInUser) {\r\n            const user = await this.props.loginAsGuest()\r\n            await this.props.loadBoards(user._id)\r\n        }\r\n        const { boardId } = this.props.match.params\r\n        this.props.loadBoard(boardId);\r\n        socketService.emit('boardId', boardId);\r\n        socketService.on('board updated', board => {\r\n            this.props.loadBoard(board._id)\r\n        })\r\n        socketService.on('sending notification', (isNotif) => {\r\n            this.props.setNotif(isNotif)\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('board updated', this.updateSocket);\r\n        socketService.off('boardId');\r\n        this.props.setNotif(false)\r\n        socketService.off('sending notification')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { boardId } = this.props.match.params\r\n        if (prevProps.board && boardId !== this.props.board._id) {\r\n            this.props.loadBoard(boardId)\r\n        }\r\n    }\r\n\r\n    onUpdateBoard = (board, action, card = '', txt = '') => {\r\n        this.props.updateBoard(board, action, card, txt);\r\n    }\r\n\r\n    onDragEnd = (res) => {\r\n        const { destination, source, type } = res;\r\n        const { board } = this.props\r\n        if (!destination) return;\r\n        const dndStart = source.droppableId;\r\n        const dndEnd = destination.droppableId;\r\n        const dndStartIdx = source.index;\r\n        const dndEndIdx = destination.index;\r\n        if (dndStart === dndEnd && dndEndIdx === dndStartIdx) return;\r\n\r\n        if (type === 'list') {\r\n            const list = board.lists.splice(dndStartIdx, 1)\r\n            board.lists.splice(dndEndIdx, 0, ...list)\r\n            this.props.updateBoard(board);\r\n            return\r\n        }\r\n        if (dndStart === dndEnd) {\r\n            const list = board.lists.find(list => list.listId === dndStart)\r\n            const card = list.cards.splice(dndStartIdx, 1);\r\n            list.cards.splice(dndEndIdx, 0, ...card);\r\n        }\r\n        if (dndStart !== dndEnd) {\r\n            const listStart = board.lists.find(list => list.listId === dndStart)\r\n            const card = listStart.cards.splice(dndStartIdx, 1);\r\n            const listEnd = board.lists.find(list => list.listId === dndEnd)\r\n            if (!listEnd.cards) {\r\n                listEnd.push(card);\r\n                return;\r\n            }\r\n\r\n            listEnd.cards.splice(dndEndIdx, 0, ...card);\r\n        }\r\n\r\n        this.props.updateBoard(board);\r\n    }\r\n\r\n    onToggleLabels = () => {\r\n        this.props.toggleLabels()\r\n    }\r\n\r\n    onOpenDashboard = () => {\r\n        const { board } = this.props\r\n        this.props.history.push(`/boards/${board._id}/dashboard`);\r\n    }\r\n\r\n    goToTemplateClone = (newBoardId) => {\r\n        this.props.history.push(`/boards/${newBoardId}`);\r\n    }\r\n\r\n    render() {\r\n        const { board } = this.props;\r\n        if (!board || !Object.keys(board).length) return <Loading />\r\n        const bgStyle = utilService.getFormattedBgStyle(board.boardStyle, 'full')\r\n        return (\r\n            <section className=\"board-app flex direction-col\">\r\n                <Route exact component={CardDetails} path=\"/boards/:boardId/:listId/:cardId\" />\r\n                <Route exact component={Dashboard} path=\"/boards/:boardId/dashboard\" />\r\n                <BoardHeader board={board} onUpdateBoard={this.onUpdateBoard} onOpenDashboard={this.onOpenDashboard} goToTemplateClone={this.goToTemplateClone} />\r\n                <div className=\"board-background\" style={bgStyle}></div>\r\n\r\n                <div className=\"board-canvas flex\">\r\n                    <DragDropContext onDragEnd={this.onDragEnd}>\r\n                        <BoardList board={board} lists={board.lists} onUpdateBoard={this.onUpdateBoard} className=\"board\" />\r\n                    </DragDropContext >\r\n                    <AddList board={board} onUpdateBoard={this.onUpdateBoard} />\r\n                </div>\r\n            </section >\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        board: state.boardReducer.board,\r\n        isLabelOpen: state.boardReducer.isLabelOpen,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    removeBoard,\r\n    loadBoards,\r\n    loadBoard,\r\n    updateBoard,\r\n    toggleLabels,\r\n    setNotif,\r\n    loginAsGuest\r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)","export default __webpack_public_path__ + \"static/media/trackit-logo.eee6b0e1.svg\";","export default __webpack_public_path__ + \"static/media/trackit-logo-white.83a18cf5.svg\";","import { NavLink } from 'react-router-dom'\r\nimport ColorLogo from '../../assets/imgs/trackit-logo.svg'\r\nimport WhiteLogo from '../../assets/imgs/trackit-logo-white.svg'\r\n\r\nexport function LogoName({ isLoggedIn }) {\r\n    const linkUrl = isLoggedIn ? \"/boards\" : \"/\"\r\n    const logoUrl = isLoggedIn ? WhiteLogo : ColorLogo\r\n    return (\r\n        <NavLink to={linkUrl} >\r\n            <div className=\"logo-container flex align-center\">\r\n                <span className=\"icon-span flex align-center justify-center\"><img className=\"icon\" src={logoUrl} alt=\"\" /></span>\r\n                <h1 className=\"logo-name\">TrackIt</h1>\r\n            </div>\r\n        </NavLink>\r\n    )\r\n}","import { NavLink } from 'react-router-dom'\r\nimport { LogoName } from './LogoName'\r\n\r\nexport function HomeHeader() {\r\n    return (\r\n        <header className=\"home-header flex\">\r\n            <nav className=\"nav-bar flex space-between align-center\">\r\n               <LogoName isLoggedIn={false} />\r\n                <div className=\"login-signup flex align-center\">\r\n                    <NavLink className=\"login\" to=\"/login\">Log in</NavLink>\r\n                    <NavLink className=\"signup home-btn\" to=\"/signup\">Sign up</NavLink>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginAsGuest } from '../store/user.actions'\r\nimport { HomeHeader } from '../cmp/Header/HomeHeader'\r\n\r\nclass _HomePage extends React.Component {\r\n\r\n    onStartAsGuest = async () => {\r\n        await this.props.loginAsGuest()\r\n        this.props.history.push('/boards')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <section className=\"home-page main-container\">\r\n                    <HomeHeader />\r\n                    <div className=\"hero flex align-center\">\r\n                        <div className=\"info flex direction-col justify-center align-center\">\r\n                            <h1>TrackIt helps teams to stay on track.</h1>\r\n                            <p>Collaborate, manage projects, and reach new productivity peaks. From high rises to the home office, the way your team works is unique—accomplish it all with TrackIt.</p>\r\n                            <button onClick={this.onStartAsGuest} className=\"start home-btn\">Try as a guest</button>\r\n                        </div>\r\n                        <img src=\"https://d2k1ftgv7pobq7.cloudfront.net/meta/p/res/images/spirit/hero/6a3ccd8e5c9a0e8ebea4235d12da6b24/hero.png\" alt=\"\" />\r\n                    </div>\r\n                </section >\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loginAsGuest\r\n}\r\n\r\nexport const HomePage = connect(mapStateToProps, mapDispatchToProps)(_HomePage)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { onLogin } from '../store/user.actions'\r\nimport { loadBoards } from '../store/board.actions'\r\nimport { Loading } from '../cmp/Loading.jsx'\r\nimport { LogoName } from '../cmp/Header/LogoName'\r\n\r\nclass _Login extends React.Component {\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n        },\r\n        isLoginFailed: false,\r\n        isLoading: false\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    clearForm = () => {\r\n        const emptyCredentials = {\r\n            username: '',\r\n            password: '',\r\n        }\r\n        this.setState(prevState => ({ ...prevState, credentials: emptyCredentials }))\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ credentials: { ...this.state.credentials, [field]: value } });\r\n    }\r\n\r\n    onLogin = async (ev = null) => {\r\n        if (ev) ev.preventDefault();\r\n        try {\r\n            this.setState({ isLoading: true })\r\n            await this.props.onLogin(this.state.credentials);\r\n            this.props.history.push('/boards')\r\n        } catch (err) {\r\n            this.setState(prevState => ({ ...prevState, isLoading: false, isLoginFailed: true }))\r\n            this.clearForm()\r\n            setTimeout(this.clearErrMsg, 5000)\r\n        }\r\n    }\r\n\r\n    clearErrMsg = () => {\r\n        this.setState({ isLoginFailed: false })\r\n    }\r\n\r\n    render() {\r\n        const { username, password } = this.state.credentials;\r\n        const { isLoginFailed, isLoading } = this.state\r\n        return (\r\n            <div className=\"login-signup-page\">\r\n                <LogoName isLoggedIn={false} />\r\n                <div className=\"form-container\">\r\n                    {isLoading && <Loading />}\r\n                    {isLoginFailed && <p className=\"login-signup-error\">Login failed, please check your username and password</p>}\r\n                    <h3>Log in to TrackIt</h3>\r\n                    <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={this.onLogin}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                            autoFocus\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                        <button>Log in</button>\r\n                    </form>\r\n                    <Link className=\"to-login-signup\" to=\"/signup\">Sign up for an account</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onLogin,\r\n    loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { onSignup } from '../store/user.actions'\r\nimport { Loading } from '../cmp/Loading.jsx'\r\nimport { LogoName } from '../cmp/Header/LogoName'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nclass _Signup extends React.Component {\r\n    state = {\r\n        credentials: {\r\n            username: '',\r\n            password: '',\r\n            fullname: '',\r\n            imgUrl: ''\r\n        },\r\n        isSignupFailed: false,\r\n        isLoading: false\r\n    }\r\n    componentDidMount() {\r\n    }\r\n\r\n    clearForm = () => {\r\n        const emptyCredentials = {\r\n            username: '',\r\n            password: '',\r\n            fullname: '',\r\n            imgUrl: ''\r\n        }\r\n        this.setState(prevState => ({ ...prevState, credentials: emptyCredentials }))\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const field = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ credentials: { ...this.state.credentials, [field]: value } });\r\n    }\r\n\r\n    onSignup = async (ev = null) => {\r\n        if (ev) ev.preventDefault();\r\n        try {\r\n            this.setState({ isLoading: true })\r\n            await this.props.onSignup(this.state.credentials);\r\n            this.props.history.push('/boards')\r\n        } catch (err) {\r\n            this.setState(prevState => ({ ...prevState, isLoading: false, isSignupFailed: true }))\r\n            this.clearForm()\r\n            setTimeout(this.clearErrMsg, 5000)\r\n        }\r\n    }\r\n\r\n    clearErrMsg = () => {\r\n        this.setState({ isSignupFailed: false })\r\n    }\r\n\r\n    responseGoogle = (response) => {\r\n        console.log(response);\r\n        const fullname = response.profileObj.name;\r\n        const username = response.profileObj.givenName;\r\n        const imgUrl = response.profileObj.imageUrl;\r\n        this.setState({ credentials: { ...this.state.credentials, fullname, username, imgUrl } })\r\n        this.onSignup();\r\n    }\r\n\r\n    render() {\r\n        const { username, password, fullname } = this.state.credentials;\r\n        const { isSignupFailed, isLoading } = this.state\r\n        return (\r\n            <div className=\"login-signup-page\">\r\n                <LogoName isLoggedIn={false} />\r\n                <div className=\"form-container\">\r\n                    {isLoading && <Loading />}\r\n                    {isSignupFailed && <p className=\"login-signup-error\">Username is already in use</p>}\r\n                    <h3>Sign up for your account</h3>\r\n                    <form className=\"login-signup-form flex direction-col align-center justify-center\" onSubmit={this.onSignup}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"fullname\"\r\n                            value={fullname}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                            autoFocus\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            placeholder=\"Username\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={this.handleChange}\r\n                            required\r\n                        />\r\n\r\n                        <GoogleLogin\r\n                            clientId=\"424178974509-9hf317najboqtp0hkg1to5j6ogduo4r6.apps.googleusercontent.com\"\r\n                            buttonText=\"Login\"\r\n                            onSuccess={this.responseGoogle}\r\n                            onFailure={this.responseGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n                        <button>Sign up</button>\r\n                    </form>\r\n                    <Link className=\"to-login-signup\" to=\"/login\">Already have an account? Log In</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    onSignup\r\n}\r\n\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","// import { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiStar } from 'react-icons/fi';\r\nimport { utilService} from '../../services/util.service'\r\n\r\nexport function BoardPreview({ board, loggedInUser, toggleStarBoard, isYellow, isLarge }) {\r\n    const bgStyle = utilService.getFormattedBgStyle(board.boardStyle)\r\n    return (\r\n        <Link to={`/boards/${board._id}`}>\r\n            <div className=\"board-preview\" style={bgStyle}>\r\n                {(typeof (board.boardStyle) === 'object') ? <div className=\"darken-image\"></div> : <></>}\r\n                <div className=\"preview-details flex direction-col space-between\">\r\n                    <h3 className=\"board-title\">{board.boardTitle}</h3>\r\n                    <div className=\"board-preview-bottom\">\r\n                        {(board.createdBy) ?\r\n                            <>\r\n                                {(board.createdBy._id !== loggedInUser._id) ?\r\n                                    <p className=\"board-owner\">{board.createdBy.fullname}'s board</p> : <></>}\r\n                                {<button className={`star-btn ${board.isStarred ? \"show\" : \"\"}`} onClick={(ev) => toggleStarBoard(ev, board)}>\r\n                                    <IconContext.Provider value={{ className: `star-icon ${isYellow ? \"yellow\" : \"\"} ${isLarge ? \"large\" : \"\"}` }}>\r\n                                        <FiStar />\r\n                                    </IconContext.Provider>\r\n                                </button>}\r\n                            </>\r\n                            :\r\n                            <></>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}","import { NavLink } from \"react-router-dom\";\r\n\r\nimport { HiOutlineTemplate } from \"react-icons/hi\";\r\nimport { MdDeveloperBoard } from \"react-icons/md\";\r\n\r\nexport function SideNav({ path }) {\r\n  return (\r\n    <section className=\"side-nav flex direction-col\">\r\n      <NavLink to=\"/boards\">\r\n        <div\r\n          className={`nav-item flex align-center${\r\n            path === \"boards\" ? \" active\" : \"\"\r\n          }`}\r\n        >\r\n          <MdDeveloperBoard />\r\n          <h3>Boards</h3>\r\n        </div>\r\n      </NavLink>\r\n      <NavLink to=\"/templates\">\r\n        <div\r\n          className={`nav-item flex align-center${\r\n            path === \"templates\" ? \" active\" : \"\"\r\n          }`}\r\n        >\r\n          <HiOutlineTemplate />\r\n          <h3>Templates</h3>\r\n        </div>\r\n      </NavLink>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadBoards, loadBoard } from '../store/board.actions.js';\r\nimport { BoardPreview } from '../cmp/UserBoards/BoardPreview'\r\nimport { Loading } from '../cmp/Loading.jsx';\r\nimport { SideNav } from '../cmp/UserBoards/SideNav.jsx';\r\n\r\nclass _TemplateBoards extends React.Component {\r\n    state = {\r\n        templateBoards: []\r\n    }\r\n\r\n    async componentDidMount() {       \r\n        let user = this.props.loggedInUser\r\n        if (!user) user = await this.props.loginAsGuest()\r\n        await this.props.loadBoards(user._id)\r\n        const templateBoards = this.getTemplateBoards()\r\n        this.setState({ templateBoards })\r\n        this.props.loadBoard(null)\r\n    }\r\n\r\n    getTemplateBoards = () => {\r\n        return this.props.boards.filter(board => !board.createdBy)\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.match.path.slice(1)\r\n        const { templateBoards } = this.state\r\n        if (!this.props.loggedInUser || !templateBoards.length) return <Loading />\r\n        return (\r\n            <section className=\"main-container boards\">\r\n                <section className=\"boards-page flex\">\r\n                    <SideNav path={path} />\r\n                    <section className=\"boards-section\">\r\n                        <section className=\"template-boards\">\r\n                            <h3>Templates</h3>\r\n                            <div className=\"boards-preview\">\r\n                                {templateBoards.map(board => {\r\n                                    board.isStarred = false\r\n                                    return <BoardPreview key={board._id} board={board} />\r\n                                })}\r\n                            </div>\r\n                        </section>\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards,\r\n    loadBoard\r\n}\r\n\r\nexport const TemplateBoards = connect(mapStateToProps, mapDispatchToProps)(_TemplateBoards)\r\n","export default __webpack_public_path__ + \"static/media/close-icon-white.95ac7fd6.svg\";","export default __webpack_public_path__ + \"static/media/checked-icon-white.52bf0792.svg\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { utilService } from '../services/util.service';\r\nimport { userService } from '../services/user.service'\r\nimport { addBoard, loadBoard } from '../store/board.actions';\r\nimport CloseIcon from '../assets/imgs/icons/close-icon-white.svg';\r\nimport CheckedIcon from '../assets/imgs/icons/checked-icon-white.svg';\r\n\r\nclass _CreateBoard extends React.Component {\r\n    state = {\r\n        title: '',\r\n        backgrounds: [\r\n            {\r\n                small: \"https://images.unsplash.com/photo-1632813101579-7e7d4dd2c69a?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQzNDg&ixlib=rb-1.2.1&q=80&w=400\",\r\n                full: \"https://images.unsplash.com/photo-1632813101579-7e7d4dd2c69a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1470&q=80\"\r\n            },\r\n            {\r\n                small: \"https://images.unsplash.com/photo-1632714394526-1e87d08d56c4?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQzODg&ixlib=rb-1.2.1&q=80&w=400\",\r\n                full: \"https://images.unsplash.com/photo-1632714394526-1e87d08d56c4?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1470&q=80\"\r\n            },\r\n            {\r\n                small: \"https://images.unsplash.com/photo-1632829754530-d94a588e2dde?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQ0MTk&ixlib=rb-1.2.1&q=80&w=400\",\r\n                full: \"https://images.unsplash.com/photo-1632829754530-d94a588e2dde?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80\"\r\n            },\r\n            {\r\n                small: \"https://images.unsplash.com/photo-1632918425510-c02e76616549?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwyNjQ5NjV8MHwxfGFsbHx8fHx8fHx8fDE2MzMzMzQ0NDI&ixlib=rb-1.2.1&q=80&w=400\",\r\n                full: \"https://images.unsplash.com/photo-1632918425510-c02e76616549?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1527&q=80\"\r\n            },\r\n            \"linear-gradient(225deg, rgb(255, 60, 172) 0%, rgb(120, 75, 160) 50%, rgb(43, 134, 197) 100%)\",\r\n            \"#0079bf\", \"#d29034\", \"#519839\", \"#b04632\"\r\n        ],\r\n        selectedBgIdx: 0\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        const value = ev.target.value\r\n        this.setState({ title: value })\r\n    }\r\n\r\n    createBoard = async (ev) => {\r\n        ev.preventDefault()\r\n        const { title, backgrounds, selectedBgIdx } = this.state\r\n        if (!title) return\r\n        const { loggedInUser } = this.props\r\n        const boardMember = { ...loggedInUser }\r\n        boardMember.isStarred = false\r\n        const boardMembers = [boardMember]\r\n       \r\n        if (loggedInUser.username !== 'pandaguest') {\r\n            const guestMember = await userService.getGuestUser()\r\n            guestMember.isStarred = false\r\n            boardMembers.push(guestMember)\r\n        }\r\n\r\n        const newBoard = {\r\n            \"boardTitle\": title,\r\n            \"createdAt\": Date.now(),\r\n            \"createdBy\": loggedInUser,\r\n            \"cardsCount\": 0,\r\n            \"boardStyle\": backgrounds[selectedBgIdx],\r\n            \"covers\": this.getCovers(),\r\n            \"labels\": this.getLabels(),\r\n            \"boardMembers\": boardMembers,\r\n            \"lists\": [],\r\n            \"activities\": [],\r\n            \"archive\": []\r\n        }\r\n\r\n        await this.props.addBoard(newBoard)\r\n        const { board, onToggleCreateBoard } = this.props\r\n        onToggleCreateBoard()\r\n        this.props.history.push(`/boards/${board._id}`)\r\n    }\r\n\r\n    getLabels = () => {\r\n        let labels = []\r\n        for (let id = 1; id <= 6; id++) {\r\n            const label = {\r\n                \"id\": utilService.makeId(),\r\n                \"title\": \"\",\r\n                \"color\": `clr${id}`\r\n            }\r\n            labels.push(label)\r\n        }\r\n        return labels\r\n    }\r\n\r\n    getCovers = () => {\r\n        let covers = []\r\n        for (let id = 1; id <= 10; id++) {\r\n            const label = {\r\n                \"id\": utilService.makeId(),\r\n                \"color\": `clr${id}`\r\n            }\r\n            covers.push(label)\r\n        }\r\n        return covers\r\n    }\r\n\r\n    selectBg = (selectedBgIdx) => {\r\n        this.setState({ selectedBgIdx })\r\n    }\r\n\r\n    render() {\r\n        const { title, backgrounds, selectedBgIdx } = this.state\r\n        const selectedBg = backgrounds[selectedBgIdx]\r\n        const selectedBgStyle = utilService.getFormattedBgStyle(selectedBg)\r\n        return (\r\n            <div className=\"create-board-wrapper\">\r\n                <div className=\"screen\" onClick={this.props.onToggleCreateBoard}></div>\r\n                <div className=\"create-board flex direction-col align-center\">\r\n                    <div className=\"board-preview flex\">\r\n                        <div className=\"title-section\" style={selectedBgStyle}>\r\n                            {(selectedBgIdx < 4) && <span className=\"bg-overlay\"></span>}\r\n                            <button className=\"close-btn\" onClick={this.props.onToggleCreateBoard}>\r\n                                <img src={CloseIcon} alt=\"Close\" />\r\n                            </button>\r\n                            <form onSubmit={this.createBoard}>\r\n                                <input type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className=\"title-input\"\r\n                                    name=\"title\"\r\n                                    placeholder=\"Add board title\"\r\n                                    value={title}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </form>\r\n                            {<p className=\"user-title\">{this.props.loggedInUser.fullname}'s Workspace</p>}\r\n                        </div>\r\n                        <div className=\"choose-bg flex wrap space-between\">\r\n                            {backgrounds.map((background, idx) => {\r\n                                const bgStyle = utilService.getFormattedBgStyle(background, 'small')\r\n                                return <div key={utilService.makeId()} className=\"bg-color\" style={bgStyle} onClick={() => this.selectBg(idx)}>\r\n                                    {(idx === selectedBgIdx) && <span className=\"selected\">\r\n                                        <img src={CheckedIcon} alt=\"selected\" />\r\n                                    </span>}\r\n                                </div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                    <button className={`create-btn${!title ? \" disabled\" : \"\"}`} onClick={this.createBoard}>Create board</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    addBoard,\r\n    loadBoard\r\n}\r\n\r\nconst _CreateBoardWithRouter = withRouter(_CreateBoard);\r\nexport const CreateBoard = connect(mapStateToProps, mapDispatchToProps)(_CreateBoardWithRouter)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { userService } from '../services/user.service.js';\r\nimport { loadBoards, loadBoard, updateBoard } from '../store/board.actions.js';\r\nimport { loginAsGuest } from '../store/user.actions.js';\r\n\r\nimport { BoardPreview } from '../cmp/UserBoards/BoardPreview'\r\nimport { Loading } from '../cmp/Loading';\r\nimport { SideNav } from '../cmp/UserBoards/SideNav';\r\n\r\nimport { IconContext } from \"react-icons\";\r\nimport { FiStar } from 'react-icons/fi';\r\nimport { CreateBoard } from '../cmp/CreateBoard.jsx';\r\n\r\nclass _UserBoards extends React.Component {\r\n    state = {\r\n        userBoards: [],\r\n        isCreateBoard: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user = this.props.loggedInUser\r\n        if (!user) user = await this.props.loginAsGuest()\r\n        await this.props.loadBoards(user._id)\r\n        const userBoards = userService.filterUserBoards(this.props.boards, user._id, \"all\")\r\n        console.log('userBoards', userBoards);\r\n        this.setState({ userBoards })\r\n        this.props.loadBoard(null)\r\n    }\r\n\r\n\r\n    getBoardsByType = (type) => {\r\n        const { loggedInUser } = this.props\r\n        return userService.filterUserBoards(this.state.userBoards, loggedInUser._id, type)\r\n    }\r\n\r\n    toggleStarBoard = (ev, board) => {\r\n        ev.preventDefault()\r\n        const { loggedInUser, updateBoard } = this.props\r\n        const updatedBoard = userService.toggleStarBoard(board, loggedInUser._id)\r\n        updateBoard(updatedBoard)\r\n    }\r\n\r\n    onToggleCreateBoard = () => {\r\n        const { isCreateBoard } = this.state\r\n        this.setState({ isCreateBoard: !isCreateBoard })\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.match.path.slice(1)\r\n        const { userBoards } = this.state\r\n        const { loggedInUser } = this.props\r\n        if (!loggedInUser) return <Loading />\r\n        const starredBoards = userBoards.length ? this.getBoardsByType(\"starred\") : []\r\n        const owndBoards = userBoards.length ? this.getBoardsByType(\"owner\") : []\r\n        const guestdBoards = userBoards.length ? this.getBoardsByType(\"guest\") : []\r\n        return (\r\n            <section className=\"main-container boards\">\r\n                <section className=\"boards-page flex\">\r\n                    <SideNav path={path} />\r\n                    <section className=\"boards-section\">\r\n                        {starredBoards.length ?\r\n                            <section className=\"inner-section starred-boards\">\r\n                                <div className=\"star-title flex\">\r\n                                    <IconContext.Provider value={{ className: \"star-icon\" }} >\r\n                                        <FiStar />\r\n                                    </IconContext.Provider>\r\n                                    <h3>Starred boards</h3>\r\n                                </div>\r\n                                <div className=\"boards-preview\">\r\n                                    {starredBoards.map(board =>\r\n                                        <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isYellow={true} />\r\n                                    )}\r\n                                </div>\r\n                            </section> : <></>}\r\n                        <section className=\"inner-section user-boards\">\r\n                            <h3>Your Boards</h3>\r\n                            <div className=\"boards-preview\">\r\n                                {owndBoards.map(board => {\r\n                                    board.isStarred = board.boardMembers.find(member => member._id === loggedInUser._id).isStarred\r\n                                    return <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isLarge={board.isStarred} />\r\n                                })}\r\n                                <div className=\"board-preview create-board flex align-center justify-center\" onClick={this.onToggleCreateBoard}>Create new board</div>\r\n                            </div>\r\n                        </section>\r\n                        {guestdBoards.length ? <section className=\"inner-section guest-boards user-boards\">\r\n                            <h3>Guest Boards</h3>\r\n                            <div className=\"boards-preview\">\r\n                                {guestdBoards.map(board => {\r\n                                    board.isStarred = board.boardMembers.find(member => member._id === loggedInUser._id).isStarred\r\n                                    return <BoardPreview key={board._id} board={board} loggedInUser={loggedInUser} toggleStarBoard={this.toggleStarBoard} isLarge={board.isStarred} />\r\n                                })}\r\n                            </div>\r\n                        </section> : <></>}\r\n                    </section>\r\n                </section>\r\n                {this.state.isCreateBoard && <CreateBoard onToggleCreateBoard={this.onToggleCreateBoard} />}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        boards: state.boardReducer.boards,\r\n        loggedInUser: state.userReducer.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    loadBoards,\r\n    updateBoard,\r\n    loginAsGuest\r\n}\r\n\r\nexport const UserBoards = connect(mapStateToProps, mapDispatchToProps)(_UserBoards)\r\n","import { BoardApp } from \"./pages/BoardApp\";\r\nimport { HomePage } from \"./pages/HomePage\";\r\n// import { CardDetails } from \"./pages/CardDetails\";\r\nimport { Login } from \"./pages/Login\";\r\nimport { Signup } from \"./pages/Signup\";\r\nimport { TemplateBoards } from \"./pages/TemplateBoards\";\r\nimport { UserBoards } from \"./pages/UserBoards\";\r\nimport { CardNotFound } from \"./pages/CardNotFound\";\r\n\r\nconst routes = [\r\n    {\r\n        path: '/boards/:boardId',\r\n        component: BoardApp,\r\n    },\r\n    {\r\n        path: '/boards',\r\n        component: UserBoards,\r\n    },\r\n    {\r\n        path: '/cardNotFound',\r\n        component: CardNotFound,\r\n    },\r\n    {\r\n        path: '/templates',\r\n        component: TemplateBoards,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: Signup,\r\n    },\r\n    {\r\n        path: '/',\r\n        component: HomePage,\r\n    }\r\n]\r\n\r\nexport default routes;","\r\nexport function CardNotFound() {\r\n\r\n    return (\r\n        <section className=\"card-not-found\">\r\n            <h1>Card not found.</h1>\r\n            <div>\r\n                This card may be deleted or on a private board. <br />\r\n                If someone gave you this link, they may need to invite you to one of their boards or Workspaces.\r\n            </div>\r\n        </section>\r\n    )\r\n\r\n}","export default __webpack_public_path__ + \"static/media/menu-plus-icon.7b919228.svg\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LogoName } from \"./LogoName\";\r\nimport { DynamicPopover } from \"../DynamicPopover\";\r\nimport { CreateBoard } from \"../CreateBoard\";\r\nimport { socketService } from \"../../services/socket.service\";\r\nimport { setNotif } from \"../../store/board.actions\";\r\nimport PlusIcon from \"../../assets/imgs/icons/menu-plus-icon.svg\";\r\n\r\nclass _AppHeader extends React.Component {\r\n  state = {\r\n    isCreateBoard: false,\r\n    isUserBoardsOpen: false,\r\n    isStarredBoardsOpen: false,\r\n    isNotif: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    socketService.setup();\r\n  }\r\n\r\n  onToggleCreateBoard = () => {\r\n    const { isCreateBoard } = this.state;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      isCreateBoard: !isCreateBoard,\r\n    }));\r\n  };\r\n\r\n  onToggleUserBoards = () => {\r\n    const { isUserBoardsOpen } = this.state;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      isUserBoardsOpen: !isUserBoardsOpen,\r\n    }));\r\n  };\r\n\r\n  onToggleStarredBoards = () => {\r\n    const { isStarredBoardsOpen } = this.state;\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      isStarredBoardsOpen: !isStarredBoardsOpen,\r\n    }));\r\n  };\r\n\r\n  markReadNotif = () => {\r\n    this.props.setNotif(false);\r\n  };\r\n\r\n  render() {\r\n    const { loggedInUser, isNotif } = this.props;\r\n    const { } = this.state;\r\n    if (!loggedInUser) return <></>;\r\n    const notificaion = isNotif ? \"newNotif\" : \"noNotif\";\r\n    return (\r\n      <>\r\n        <header className=\"main-header\">\r\n          <nav className=\"nav-bar flex space-between\">\r\n            <div className=\"main-nav-links flex align-center\">\r\n              <LogoName isLoggedIn={true} />\r\n              <span\r\n                className={`header-btn${this.state.isUserBoardsOpen ? \" open\" : \"\"\r\n                  }`}\r\n              >\r\n                <DynamicPopover\r\n                  type={\"userBoards\"}\r\n                  titleModal={\"Boards\"}\r\n                  onToggle={this.onToggleUserBoards}\r\n                />\r\n              </span>\r\n              <span\r\n                className={`header-btn starred${this.state.isStarredBoardsOpen ? \" open\" : \"\"\r\n                  }`}\r\n              >\r\n                <DynamicPopover\r\n                  type={\"starredBoards\"}\r\n                  titleModal={\"Starred boards\"}\r\n                  onToggle={this.onToggleStarredBoards}\r\n                />\r\n              </span>\r\n              <button\r\n                className=\"header-btn create\"\r\n                onClick={this.onToggleCreateBoard}\r\n              >\r\n                Create\r\n              </button>\r\n              <button\r\n                className=\"header-btn create-small flex align-center justify-center\"\r\n                onClick={this.onToggleCreateBoard}\r\n              >\r\n                <img src={PlusIcon} alt=\"\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"user-section flex align-center\">\r\n              <div className=\"notifications\">\r\n                <DynamicPopover\r\n                  type={notificaion}\r\n                  titleModal={\"Notifications\"}\r\n                  markReadNotif={this.markReadNotif}\r\n                />\r\n              </div>\r\n              <div className=\"user-avatar\">\r\n                <DynamicPopover\r\n                  type={\"userMenu\"}\r\n                  titleModal={\"Account\"}\r\n                  user={loggedInUser}\r\n                  from=\"AppHeader\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n          </nav>\r\n        </header>\r\n        {this.state.isCreateBoard && (\r\n          <CreateBoard onToggleCreateBoard={this.onToggleCreateBoard} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    boards: state.boardReducer.boards,\r\n    loggedInUser: state.userReducer.loggedInUser,\r\n    isNotif: state.boardReducer.isNotif,\r\n    notifCount: state.boardReducer.notifCount,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setNotif,\r\n};\r\n\r\nexport const AppHeader = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(_AppHeader);\r\n","import React from 'react'\r\n\r\nimport { eventBusService } from '../services/event-bus.service.js'\r\nimport DoneOutlineIcon from '@mui/icons-material/DoneOutline';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\n\r\nexport class UserMsg extends React.Component {\r\n\r\n  removeEvent;\r\n\r\n  state = {\r\n    msg: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Here we listen to the event that we emited, its important to remove the listener \r\n    this.removeEvent = eventBusService.on('show-user-msg', (msg) => {\r\n      this.setState({ msg })\r\n      setTimeout(() => {\r\n        this.setState({ msg: null })\r\n      }, 4000)\r\n    })\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvent()\r\n  }\r\n\r\n  render() {\r\n    // console.log('im in user-msg')\r\n    if (!this.state.msg) return <span></span>\r\n    const msgType = this.state.msg.type || ''\r\n    return (\r\n      <section className={'user-msg  flex direction-row align-center'}>\r\n        <div className=\" txt-msg flex direction-row align-center\">\r\n          {msgType === 'danger' && <ErrorIcon />}\r\n          {msgType === 'success' && <DoneOutlineIcon />}\r\n          {this.state.msg.txt}\r\n        </div>\r\n        <button onClick={() => {\r\n          this.setState({ msg: null })\r\n        }}>x</button>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router'\r\nimport routes from './routes.js'\r\nimport { AppHeader } from './cmp/Header/AppHeader.jsx'\r\nimport { UserMsg } from './cmp/UserMsg';\r\nimport { connect } from 'react-redux'\r\nimport { setOffline, updateBoard } from '../src/store/board.actions';\r\nimport { storageService } from '../src/services/storage.service';\r\nimport { showErrorMsg, showSuccessMsg } from '../src/services/event-bus.service'\r\nimport { socketService } from '../src/services/socket.service'\r\n\r\n\r\nclass _RootCmp extends React.Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('offline', this.onOffline)\r\n        window.addEventListener('online', this.onOnline)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('online', this.onOnline)\r\n        window.removeEventListener('offline', this.onOffline)\r\n    }\r\n\r\n    onOnline = () => {\r\n        console.log('online');\r\n        if (storageService.loadFromStorage('BOARD_DB')) {\r\n            const board = storageService.loadFromStorage('BOARD_DB')\r\n            storageService.saveToStorage('BOARD_DB', null);\r\n            socketService.emit('boardId', board._id);\r\n            this.props.updateBoard(board)\r\n            showSuccessMsg('Back online,all changes updated!')\r\n        }\r\n    }\r\n\r\n    onOffline = () => {\r\n        console.log('offline');\r\n        this.props.setOffline(true);\r\n        showErrorMsg('offline, changes will sync when back online')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppHeader />\r\n                <main>\r\n                    <Switch>\r\n                        {routes.map(route => <Route key={route.path} component={route.component} path={route.path} />)}\r\n                    </Switch>\r\n                    <UserMsg />\r\n                </main>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        board: state.boardReducer.board,\r\n        isOffline: state.boardReducer.isOffline\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    setOffline,\r\n    updateBoard\r\n}\r\n\r\n\r\nexport const RootCmp = connect(mapStateToProps, mapDispatchToProps)(_RootCmp)\r\n","\r\nconst initialState = {\r\n  boards: [],\r\n  board: null,\r\n  lastUpdatedBoard: null,\r\n  isLabelOpen: false,\r\n  currCard: null,\r\n  currList: null,\r\n  isNotif: false,\r\n  notifCount: 0,\r\n  filterBy: {\r\n    searchKey: '',\r\n    labels: [],\r\n    members: [],\r\n    isFilter: false,\r\n    cardsCount: 0\r\n  },\r\n  labelsProps: {\r\n    label: {},\r\n    isCreate: false\r\n  },\r\n  searchBg: '',\r\n  isOffline: false\r\n}\r\n\r\nexport function boardReducer(state = initialState, action = null) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_BOARD':\r\n      const lastUpdatedBoard = JSON.parse(JSON.stringify(action.board))\r\n      return { ...state, board: { ...action.board }, lastUpdatedBoard }\r\n    case 'ADD_BOARD':\r\n      return { ...state, board: action.board, boards: [...state.boards, action.board] }\r\n    case 'REMOVE_BOARD':\r\n      return { ...state, boards: state.boards.filter(board => board._id !== action.boardId) }\r\n    case 'UPDATE_BOARD': {\r\n      return {\r\n        ...state, board: action.board, boards: state.boards.map(board =>\r\n          board._id === action.board._id ? action.board : board)\r\n      }\r\n    }\r\n    case 'UPDATE_LAST_UPDATED_BOARD': {\r\n      const lastUpdatedBoard = JSON.parse(JSON.stringify(state.board))\r\n      return {\r\n        ...state, lastUpdatedBoard\r\n      }\r\n    }\r\n    case 'UNDO_UPDATE_BOARD': {\r\n      if (state.lastUpdatedBoard) {\r\n        const undoLastBoard = JSON.parse(JSON.stringify(state.lastUpdatedBoard))\r\n        return {\r\n          ...state, boards: state.boards.map(board =>\r\n            board._id === state.board._id ? state.lastUpdatedBoard : board),\r\n          board: undoLastBoard\r\n        }\r\n      }\r\n      return state\r\n    }\r\n    case 'TOGGLE_LABELS': {\r\n      const isLabelOpen = state.isLabelOpen\r\n      return { ...state, isLabelOpen: !isLabelOpen }\r\n    }\r\n    case 'SET_LIST':\r\n      return { ...state, currList: action.list }\r\n    case 'SET_CARD':\r\n      return { ...state, currCard: action.card }\r\n    case 'SET_NOTIF':\r\n      return { ...state, isNotif: action.isNotif }\r\n    case 'SET_NOTIF_COUNT':\r\n      return { ...state, notifCount: action.count }\r\n    case 'SET_NOTIF_COUNT++':\r\n      return { ...state, notifCount: (state.notifCount + 1) }\r\n    case 'SET_FILTER':\r\n      return { ...state, filterBy: action.filterBy }\r\n    case 'SET_LABEL':\r\n      return { ...state, labelsProps: action.labelsProps }\r\n    case 'SET_SEARCH_BG':\r\n      return { ...state, searchBg: action.searchStr }\r\n    case 'SET_OFFLINE':\r\n      return { ...state, isOffline: action.isOffline }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { userService } from '../services/user.service.js'\r\n\r\n\r\nconst initialState = {\r\n    loggedInUser: userService.getLoggedinUser()\r\n}\r\nexport function userReducer(state = initialState, action) {\r\n    var newState = state;\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            newState = { ...state, loggedInUser: action.user }\r\n            break;\r\n        default:\r\n    }\r\n    return newState;\r\n\r\n}\r\n","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { boardReducer } from './board.reducer.js'\r\nimport { userReducer } from './user.reducer.js'\r\n\r\nconst rootReducer = combineReducers({\r\n    boardReducer,\r\n    userReducer\r\n})\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n// window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__();\r\n// Lets wire up thunk and also redux-dev-tools:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RootCmp } from './root-cmp';\r\nimport '../src/assets/styles/main.scss';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <RootCmp />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}